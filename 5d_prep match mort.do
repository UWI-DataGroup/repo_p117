** HEADER -----------------------------------------------------
**  DO-FILE METADATA
    //  algorithm name          5d_prep match mort 2021.do
    //  project:                BNR
    //  analysts:               Jacqueline CAMPBELL
    //  date first created      30-JUN-2022
    //  date last modified      30-JUN-2022
    //  algorithm task          Prep, format and combine 2021 death data with 2015-2020 death dataset
    //  status                  Completed
    //  objective               To have one dataset with cleaned 2015-2021 death data for matching with cancer incidence dataset.
    
    ** General algorithm set-up
    version 17.0
    clear all
    macro drop _all
    set more off

    ** Initialising the STATA log and allow automatic page scrolling
    capture {
            program drop _all
    	drop _all
    	log close
    	}

    ** Set working directories: this is for DATASET and LOGFILE import and export
    ** DATASETS to encrypted SharePoint folder
    local datapath "X:/The University of the West Indies/DataGroup - repo_data/data_p117"
    ** LOGFILES to unencrypted OneDrive folder (.gitignore set to IGNORE log files on PUSH to GitHub)
    local logpath X:/OneDrive - The University of the West Indies/repo_datagroup/repo_p117

    ** Close any open log file and open a new log file
    capture log close
    log using "`logpath'\5d_prep match mort 2021.smcl", replace
** HEADER -----------------------------------------------------

**************************************
**     Prep 2021 death variables    **
** for matching with cancer dataset **
**************************************
***************
** DATA IMPORT  
***************
** LOAD the cleaned national registry 2021 Stata death dataset that was imported into multi-year REDCap database
** This dataset was created during the cleaning of 2021 data in p141/v07
//use "X:\The University of the West Indies\DataGroup - repo_data\data_p141\version07\3-output\2021_deaths_cleaned_cancer" , clear

** JC 30jun2022: decided not to use the dataset prepared in p141 as this would not have the record_id from the multi-year database so will import and prep based on multi-year death db

** LOAD the national registry deaths 2021 excel dataset
import excel using "`datapath'\version09\1-input\BNRDeathData20082021-CancerMatching2021De_DATA_2022-06-30_1356_excel.xlsx" , firstrow case(lower)

count //3133 - note: there are 3 cases from 2020 that were collected after 2020 was cleaned


*******************
** DATA FORMATTING  
*******************
** PREPARE each variable according to the format and order in which they appear in DeathData REDCap database

************************
**  DEATH CERTIFICATE **
**        FORM        **
************************

** (1) record_id (auto-generated by REDCap)
label var record_id "DeathID"

** (2) redcap_event_name (auto-generated by REDCap)
gen event=.
replace event=1 if redcap_event_name=="death_data_collect_arm_1"
replace event=2 if redcap_event_name=="tracking_arm_2"

label var event "Redcap Event Name"
label define event_lab 1 "DC arm 1" 2 "TF arm 2", modify
label values event event_lab

** (3) dddoa: Y-M-D H:M, readonly
gen double dddoa2 = clock(dddoa, "YMDhm")
format dddoa2 %tcCCYY-NN-DD_HH:MM
drop dddoa
rename dddoa2 dddoa
label var dddoa "ABS DateTime"

** (4) ddda
label var ddda "ABS DA"
label define ddda_lab 4 "KG" 13 "KWG" 14 "TH" 20 "NR" 25 "AH" 98 "intern", modify
label values ddda ddda_lab

** (5) odda
if odda==. tostring odda ,replace
replace odda="" if odda=="."
label var odda "ABS Other DA"

** (6) certtype: 1=MEDICAL 2=POST MORTEM 3=CORONER 99=ND, required
label var certtype "Certificate Type"
label define certtype_lab 1 "Medical" 2 "Post Mortem" 3 "Coroner" 99 "ND", modify
label values certtype certtype_lab

** (7) regnum: integer, if missing=9999
label var regnum "Registry Dept #"

** (8) district: 1=A 2=B 3=C 4=D 5=E 6=F
/* Districts are assigned based on death parish
	District A - anything below top rock christ church and st. michael 
	District B - anything above top rock christ church and st. george
	District C - st. philip and st. john
	District D - st. thomas
	District E - st. james, st. peter, st. lucy
	District F - st. joseph, st. andrew
*/
label var district "District"
label define district_lab 1 "A" 2 "B" 3 "C" 4 "D" 5 "E" 6 "F", modify
label values district district_lab

** (9) pname: Text, if missing=99
label var pname "Deceased's Name"
replace pname = rtrim(ltrim(itrim(pname))) //5 changes

** (10) address: Text, if missing=99
label var address "Deceased's Address"
replace address = rtrim(ltrim(itrim(address))) //20 changes

** (11) parish
label var parish "Deceased's Parish"
label define parish_lab 1 "Christ Church" 2 "St. Andrew" 3 "St. George" 4 "St. James" 5 "St. John" 6 "St. Joseph" ///
						7 "St. Lucy" 8 "St. Michael" 9 "St. Peter" 10 "St. Philip" 11 "St. Thomas" 99 "ND", modify
label values parish parish_lab

** (12) sex:	1=Male 2=Female 99=ND
label var sex "Sex"
label define sex_lab 1 "Male" 2 "Female" 99 "ND", modify
label values sex sex_lab

** (13) age: Integer - min=0, max=999
label var age "Age"

** (14) agetxt
label var agetxt "Age Qualifier"
label define agetxt_lab 1 "Minutes" 2 "Hours" 3 "Days" 4 "Weeks" 5 "Months" 6 "Years" 99 "ND", modify
label values agetxt agetxt_lab

** (15) nrnnd: 1=Yes 2=No
label define nrnnd_lab 1 "Yes" 2 "No", modify
label values nrnnd nrnnd_lab
label var nrnnd "Is National ID # documented?"

** (16) nrn: dob-####, partial missing=dob-9999, if missing=.
label var nrn "National ID #"
format nrn %15.0g

** (17) mstatus: 1=Single 2=Married 3=Separated/Divorced 4=Widowed/Widow/Widower 99=ND
label var mstatus "Marital Status"
label define mstatus_lab 1 "Single" 2 "Married" 3 "Separated/Divorced" 4 "Widowed/Widow/Widower" 99 "ND", modify
label values mstatus mstatus_lab

** (18) occu: Text, if missing=99
label var occu "Occupation"

** (19) durationnum: Integer - min=0, max=99, if missing=99
label var durationnum "Duration of Illness"

** (20) durationtxt
label var durationtxt "Duration Qualifier"
label define durationtxt_lab 1 "Days" 2 "Weeks" 3 "Months" 4 "Years" 99 "ND", modify
label values durationtxt durationtxt_lab

** (21) dod: Y-M-D
format dod %tdCCYY-NN-DD
label var dod "Date of Death"

** (22) dodyear (not included in single year Redcap db but done for multi-year Redcap db)
drop dodyear
gen int dodyear=year(dod)
label var dodyear "Year of Death"

** (23) cod1a: Text, if missing=99
label var cod1a "COD 1a"

** (24) onsetnumcod1a: Integer - min=0, max=99, if missing=99
label var onsetnumcod1a "Onset Death Interval-COD 1a"

** (25) onsettxtcod1a: 1=DAYS 2=WEEKS 3=MONTHS 4=YEARS
label var onsettxtcod1a "Onset Qualifier-COD 1a"
label define onsettxtcod1a_lab 1 "Days" 2 "Weeks" 3 "Months" 4 "Years" 99 "ND", modify
label values onsettxtcod1a onsettxtcod1a_lab

** (26) cod1b: Text, if missing=99
label var cod1b "COD 1b"

** (27) onsetnumcod1b: Integer - min=0, max=99, if missing=99
label var onsetnumcod1b "Onset Death Interval-COD 1b"

** (28) onsettxtcod1b: 1=DAYS 2=WEEKS 3=MONTHS 4=YEARS
label var onsettxtcod1b "Onset Qualifier-COD 1b"
label define onsettxtcod1b_lab 1 "Days" 2 "Weeks" 3 "Months" 4 "Years" 99 "ND", modify
label values onsettxtcod1b onsettxtcod1b_lab

** (29) cod1c: Text, if missing=99
label var cod1c "COD 1c"

** (30) onsetnumcod1c: Integer - min=0, max=99, if missing=99
label var onsetnumcod1c "Onset Death Interval-COD 1c"

** (31) onsettxtcod1c: 1=DAYS 2=WEEKS 3=MONTHS 4=YEARS
label var onsettxtcod1c "Onset Qualifier-COD 1c"
label define onsettxtcod1c_lab 1 "Days" 2 "Weeks" 3 "Months" 4 "Years" 99 "ND", modify
label values onsettxtcod1c onsettxtcod1c_lab

** (32) cod1d: Text, if missing=99
label var cod1d "COD 1d"

** (33) onsetnumcod1d: Integer - min=0, max=99, if missing=99
label var onsetnumcod1d "Onset Death Interval-COD 1d"

** (34) onsettxtcod1d: 1=DAYS 2=WEEKS 3=MONTHS 4=YEARS
label var onsettxtcod1d "Onset Qualifier-COD 1d"
label define onsettxtcod1d_lab 1 "Days" 2 "Weeks" 3 "Months" 4 "Years" 99 "ND", modify
label values onsettxtcod1d onsettxtcod1d_lab

** (35) cod2a: Text, if missing=99
label var cod2a "COD 2a"

** (36) onsetnumcod2a: Integer - min=0, max=99, if missing=99
label var onsetnumcod2a "Onset Death Interval-COD 2a"

** (37) onsettxtcod2a: 1=DAYS 2=WEEKS 3=MONTHS 4=YEARS
label var onsettxtcod2a "Onset Qualifier-COD 2a"
label define onsettxtcod2a_lab 1 "Days" 2 "Weeks" 3 "Months" 4 "Years" 99 "ND", modify
label values onsettxtcod2a onsettxtcod2a_lab

** (38) cod2b: Text, if missing=99
label var cod2b "COD 2b"

** (39) onsetnumcod2b: Integer - min=0, max=99, if missing=99
label var onsetnumcod2b "Onset Death Interval-COD 2b"

** (40) onsettxtcod2b: 1=DAYS 2=WEEKS 3=MONTHS 4=YEARS
label var onsettxtcod2b "Onset Qualifier-COD 2b"
label define onsettxtcod2b_lab 1 "Days" 2 "Weeks" 3 "Months" 4 "Years" 99 "ND", modify
label values onsettxtcod2b onsettxtcod2b_lab

** (41) pod: Text, if missing=99
label var pod "Place of Death"

** (42) deathparish
label var deathparish "Death Parish"
label define deathparish_lab 1 "Christ Church" 2 "St. Andrew" 3 "St. George" 4 "St. James" 5 "St. John" 6 "St. Joseph" ///
						7 "St. Lucy" 8 "St. Michael" 9 "St. Peter" 10 "St. Philip" 11 "St. Thomas" 99 "ND", modify
label values deathparish deathparish_lab

** (43) regdate: Y-M-D
label var regdate "Date of Registration"
format regdate %tdCCYY-NN-DD

** (44) certifier: Text, if missing=99
label var certifier "Name of Certifier"

** (45) certifieraddr: Text, if missing=99
label var certifieraddr "Address of Certifier"

** (46) namematch: readonly
label var namematch "Name Match"
label define namematch_lab 1 "names match but different person" 2 "no name match", modify
label values namematch namematch_lab

** (47) death_certificate_complete (auto-generated by REDCap): 0=Incomplete 1=Unverified 2=Complete
rename death_certificate_complete recstatdc
label var recstatdc "Record Status-DC Form"
label define recstatdc_lab 0 "Incomplete" 1 "Unverified" 2 "Complete", modify
label values recstatdc recstatdc_lab

*****************
**  Formatting **
**    Names    **
*****************
rename namematch nm

** Need to check for duplicate death registrations
** First split full name into first, middle and last names
** Also - code to split full name into 2 variables fname and lname - else can't merge! 
split pname, parse(", "" ") gen(name)
order record_id pname name*
sort record_id

** Use Stata browse to view results as changes are made
** (1) sort cases that contain only a first name and a last name
count if name7=="" & name6=="" & name5=="" & name4=="" & name3=="" & name2=="" //0
count if name6=="" & name5=="" & name4=="" & name3=="" & name2=="" //0
count if name5=="" & name4=="" & name3=="" & name2=="" //0
count if name5=="" & name4=="" & name3=="" //2281
count if name7!="" //3
count if name6!="" //4
count if name5!="" //6
count if name4!="" //81
count if name3!="" //850
count if name2!="" //3131
count if name1!="" //3131

** (2) sort name8 + name7 fields
replace name1=name1+" "+name5+" "+name6+" "+name7+" "+name8 if record_id==918|record_id==1000
replace name2=name2+" "+name3 if record_id==918|record_id==1000
replace name3=name4 if record_id==918|record_id==1000
replace name1=name1+" "+name4+" "+name5+" "+name6+" "+name7 if record_id==3008
replace name4="" if record_id==918|record_id==1000|record_id==3008
replace name5="" if record_id==918|record_id==1000|record_id==3008
replace name6="" if record_id==918|record_id==1000|record_id==3008
drop name7 name8

** (2) sort name6 field
replace name1=name1+" "+name3+" "+name4+" "+name5+" "+name6 if record_id==3039
replace name3=name2 if record_id==3039
replace name2="" if record_id==3039
replace name1=name1+" "+name2+" "+name3 if record_id==3080
replace name2=name4 if record_id==3080
replace name2=name2+" "+name3+"."+name4 if record_id==2263
replace name3=name5 if record_id==3080|record_id==2263
replace name4="" if record_id==3039|record_id==3080|record_id==2263
drop name5 name6

** (4) sort cases with name 'baby' or 'b/o' in name1 variable
count if (regexm(name1,"BABY")|regexm(name1,"B/O")|regexm(name1,"MALE")|regexm(name1,"FEMALE")) //9
//gen tempvarn=1 if (regexm(name1,"BABY")|regexm(name1,"B/O")|regexm(name1,"MALE")|regexm(name1,"FEMALE"))
count if name1=="BABY" //4
gen tempvarn=1 if name1=="BABY"
//list record_id pname name1 name2 name3 name4 name5 if tempvarn==1
//list record_id pname name6 name7 if tempvarn==1
//replace tempvarn=. if record_id==31995|record_id==32479
replace name1=name1+" "+name2+" "+name3 if tempvarn==1 //4 changes
replace name2="" if tempvarn==1 //4 changes
replace name3=name4 if tempvarn==1 //4 changes
replace name4="" if tempvarn==1 //4 changes
count if (regexm(name2,"BABY")|regexm(name2,"B/O")|regexm(name2,"MALE")|regexm(name2,"FEMALE")) //0
replace tempvarn=1 if (regexm(name2,"BABY")|regexm(name2,"B/O")|regexm(name2,"MALE")|regexm(name2,"FEMALE"))
replace tempvarn=. if tempvarn!=. //4 changes
count if (regexm(name3,"BABY")|regexm(name3,"B/O")|regexm(name3,"MALE")|regexm(name3,"FEMALE")) //0
count if (regexm(name4,"BABY")|regexm(name4,"B/O")|regexm(name4,"MALE")|regexm(name4,"FEMALE")) //0

** (5)
** Names containing 'ST' are being interpreted as 'ST'=name1/fname so correct
count if name1=="ST" | name1=="ST." //5
replace tempvarn=1 if name1=="ST" | name1=="ST." //5 changes
//list record_id pname name1 name2 name5 if tempvarn==2
replace name1 = subinstr(name1, ".", "",1) if tempvarn==1 //1 change
replace name1=name1+"."+""+name2 if tempvarn==1 //5 changes
replace name2="" if tempvarn==1 //5 changes
replace tempvarn=. if tempvarn!=. //5 changes
** Names containing 'ST' are being interpreted as 'ST'=name2/fname so correct
count if name2=="ST" | name2=="ST." //21
replace tempvarn=1 if name2=="ST" | name2=="ST." //21 changes
replace name3=name2+"."+name3 if tempvarn==1 & name4=="" //10 changes
replace name2="" if tempvarn==1 & name4=="" //10 changes
replace tempvarn=. if tempvarn==1 & name4=="" //10 changes
replace name2=name2+"."+name3 if tempvarn==1 //11 changes
replace name3=name4 if tempvarn==1 //11 changes
replace name4="" if tempvarn==1 //11 changes
replace tempvarn=. if tempvarn!=. //11 changes
** Names containing 'ST' are being interpreted as 'ST'=name3/fname so correct
count if name3=="ST" | name3=="ST." //2
replace tempvarn=1 if name3=="ST" | name3=="ST."
replace name3=name3+"."+""+name4 if tempvarn==1 //2 changes
replace name4="" if tempvarn==1 //2 changes
count if name4=="ST" | name4=="ST." //0
replace tempvarn=. if tempvarn!=. //2 changes

** (6) sort cases with name in name4 variable
count if name4!="" //58
//list record_id *name* if name4!=""
replace name2=name2+" "+name3 if name4!="" //58 changes
replace name3=name4 if name4!="" //58 changes
replace name4="" if name4!="" //58 changes
drop name4

** (7) sort cases with suffixes
count if (name3!="" & name3!="99") & length(name3)<4 //3 - 0 need correcting
//replace tempvarn=1 if (name3!="" & name3!="99") & length(name3)<4 //4 changes
//list record_id pname fname mname lname if (lname!="" & lname!="99") & length(lname)<3

** (8) sort cases with NO name in name3 variable
count if name3=="" //2281
//list record_id *name* if name3==""
replace tempvarn=1 if name3=="" //2281 changes
replace name3=name2 if tempvarn==1 //2281 changes
replace name2="" if tempvarn==1 //2281 changes
drop tempvarn

** Now rename, check and remove unnecessary variables
count if name1=="" //0
count if name2=="" //2301
count if name3=="" //0
rename name1 fname
rename name2 mname
rename name3 lname
count if fname=="" //0
count if lname=="" //0

** Convert names to lower case and strip possible leading/trailing blanks
replace fname = lower(rtrim(ltrim(itrim(fname)))) //3132 changes
replace mname = lower(rtrim(ltrim(itrim(mname)))) //831 changes
replace lname = lower(rtrim(ltrim(itrim(lname)))) //3132 changes

rename nm namematch

** Populate natregno (string) field with NRNs
gen double natregno = nrn
format natregno %15.0g
tostring natregno ,replace
order record_id pname fname mname lname nrn natregno age namematch

count if length(natregno)==9 //13
count if length(natregno)==8 //0
count if length(natregno)==7 //2
replace natregno="0" + natregno if length(natregno)==9 //13 changes
replace natregno="00" + natregno if length(natregno)==8 //0 changes
replace natregno="000" + natregno if length(natregno)==7 //2 changes
count if natregno=="." //87
replace natregno="" if natregno=="." //87 changes
count if natregno!="" & length(natregno)!=10 //0
count if nrn!=. & natregno=="" //0
count if nrn!=. & natregno=="" //0


** Now generate a new variable which will select out all the potential cancers
gen cancer=.
label define cancer_lab 1 "cancer" 2 "not cancer", modify
label values cancer cancer_lab
label var cancer "cancer diagnoses"
label var record_id "Event identifier for registry deaths"

** searching cod1a for these terms
replace cod1a="99" if cod1a=="999" //0 changes
replace cod1b="99" if cod1b=="999" //0 changes
replace cod1c="99" if cod1c=="999" //1 changes
replace cod1d="99" if cod1d=="999" //1 changes
replace cod2a="99" if cod2a=="999" //2 changes
replace cod2b="99" if cod2b=="999" //2 changes
count if cod1c!="99" //635
count if cod1d!="99" //198
count if cod2a!="99" //1086
count if cod2b!="99" //531
//ssc install unique
//ssc install distinct
** Create variable with combined CODs
gen coddeath=cod1a+" "+cod1b+" "+cod1c+" "+cod1d+" "+cod2a+" "+cod2b
replace coddeath=subinstr(coddeath,"99 ","",.) //2485 changes
replace coddeath=subinstr(coddeath," 99","",.) //2071 changes
** Identify cancer deaths using variable called 'cancer'
replace cancer=1 if regexm(coddeath, "CANCER") & cancer==. // changes
replace cancer=1 if regexm(coddeath, "TUMOUR") &  cancer==. // changes
replace cancer=1 if regexm(coddeath, "TUMOR") &  cancer==. // changes
replace cancer=1 if regexm(coddeath, "MALIGNANT") &  cancer==. // changes
replace cancer=1 if regexm(coddeath, "MALIGNANCY") &  cancer==. // changes
replace cancer=1 if regexm(coddeath, "NEOPLASM") &  cancer==. // changes
replace cancer=1 if regexm(coddeath, "NEOPLAST") &  cancer==. // changes
replace cancer=1 if regexm(coddeath, "CARCINOMA") &  cancer==. // changes
replace cancer=1 if regexm(coddeath, "CARCIMONA") &  cancer==. // changes
replace cancer=1 if regexm(coddeath, "CARINOMA") &  cancer==. // changes
replace cancer=1 if regexm(coddeath, "MYELOMA") &  cancer==. // changes
replace cancer=1 if regexm(coddeath, "LYMPHOMA") &  cancer==. // changes
replace cancer=1 if regexm(coddeath, "LYMPHOMIA") &  cancer==. // changes
replace cancer=1 if regexm(coddeath, "LYMPHONA") &  cancer==. // changes
replace cancer=1 if regexm(coddeath, "SARCOMA") &  cancer==. // changes
replace cancer=1 if regexm(coddeath, "TERATOMA") &  cancer==. // changes
replace cancer=1 if regexm(coddeath, "LEUKEMIA") &  cancer==. // changes
replace cancer=1 if regexm(coddeath, "LEUKAEMIA") &  cancer==. // changes
replace cancer=1 if regexm(coddeath, "HEPATOMA") &  cancer==. // changes
replace cancer=1 if regexm(coddeath, "CARANOMA PROSTATE") &  cancer==. // changes
replace cancer=1 if regexm(coddeath, "MENINGIOMA") &  cancer==. // changes
replace cancer=1 if regexm(coddeath, "MYELOSIS") &  cancer==. // changes
replace cancer=1 if regexm(coddeath, "MYELOFIBROSIS") &  cancer==. // change
replace cancer=1 if regexm(coddeath, "CYTHEMIA") &  cancer==. // changes
replace cancer=1 if regexm(coddeath, "CYTOSIS") &  cancer==. // changes
replace cancer=1 if regexm(coddeath, "BLASTOMA") &  cancer==. // changes
replace cancer=1 if regexm(coddeath, "METASTATIC") &  cancer==. // change
replace cancer=1 if regexm(coddeath, "MASS") &  cancer==. // changes
replace cancer=1 if regexm(coddeath, "METASTASES") &  cancer==. // changes
replace cancer=1 if regexm(coddeath, "METASTASIS") &  cancer==. // changes
replace cancer=1 if regexm(coddeath, "REFRACTORY") &  cancer==. // changes
replace cancer=1 if regexm(coddeath, "FUNGOIDES") &  cancer==. // changes
replace cancer=1 if regexm(coddeath, "HODGKIN") &  cancer==. // changes
replace cancer=1 if regexm(coddeath, "MELANOMA") &  cancer==. // changes
replace cancer=1 if regexm(coddeath,"MYELODYS") &  cancer==. // changes
replace cancer=1 if regexm(coddeath,"ASTROCYTOMA") &  cancer==. // changes
replace cancer=1 if regexm(coddeath,"CARCINOME") &  cancer==. // changes
replace cancer=1 if regexm(coddeath,"MALIGANCY") &  cancer==. // changes
replace cancer=1 if regexm(coddeath,"MULTIFORME") &  cancer==. // changes
replace cancer=1 if regexm(coddeath,"GLIOMA") &  cancer==. // changes

** Strip possible leading/trailing blanks in cod1a
replace coddeath = rtrim(ltrim(itrim(coddeath))) //0 changes

tab cancer, missing //2403 missing

sort coddeath record_id
order record_id coddeath natregno

drop dodyear
gen dodyear=year(dod)
tab dodyear cancer,m


** Check that all cancer CODs are eligible
sort coddeath record_id
order record_id coddeath natregno
//list coddeath if cancer==1 & inrange(record_id, 0, 24000)
** 588
//list coddeath if cancer==1 & inrange(record_id, 24001, 27000)
** 778

** Replace deaths that are not cancer according to eligibility SOP:
/*
	(1) After merge with CR5 data then may need to reassign some of below 
		deaths as CR5 data may indicate eligibility while COD may exclude
		(e.g. see record_id==15458)
	(2) use obsid to check for CODs that incomplete in Results window with 
		Data Editor in browse mode-copy and paste record_id below from here
*/

** Check that all CODs that are not cancer for eligibility (easier to do below review in Browse Stata window)
tab dodyear cancer,m
count if cancer==. & inrange(record_id, 0, 23000)
count if cancer==. & inrange(record_id, 23001, 24000)
count if cancer==. & inrange(record_id, 24001, 2000)
//list coddeath if cancer==. & inrange(record_id, 0, 24000)
//list coddeath if cancer==. & inrange(record_id, 24001, 27000)
STOP
replace cancer=2 if ///
record_id==34641|record_id==34171|record_id==34342|record_id==35020|record_id==35444| ///
record_id==36218|record_id==34272|record_id==34505|record_id==|record_id==| ///
record_id==|record_id==|record_id==|record_id==|record_id==| ///
record_id==|record_id==|record_id==|record_id==|record_id==| ///
record_id==|record_id==|record_id==|record_id==|record_id==| ///
record_id==|record_id==|record_id==|record_id==|record_id==| ///
record_id==|record_id==|record_id==|record_id==|record_id==| ///
record_id==|record_id==|record_id==|record_id==|record_id==| ///
record_id==|record_id==|record_id==|record_id==|record_id==| ///
record_id==
// changes

replace cancer=1 if record_id==|record_id==|record_id==|record_id== // changes

replace cancer=2 if cancer==. // changes

** Create cod variable 
gen cod=.
label define cod_lab 1 "Dead of cancer" 2 "Dead of other cause" 3 "Not known" 4 "NA", modify
label values cod cod_lab
label var cod "COD categories"
replace cod=1 if cancer==1 //657 changes
replace cod=2 if cancer==2 //1948 changes
** one unknown causes of death in 2014 data - record_id 12323
replace cod=3 if coddeath=="99"|(regexm(coddeath,"INDETERMINATE")|regexm(coddeath,"UNDETERMINED")|regexm(coddeath,"UNKNOWN CAUSE")|regexm(coddeath,"NO ANATOMICAL CAUSE")) //24 changes
//list record_id coddeath if cod==3
replace cod=1 if record_id==32240


** Change sex to match cancer dataset
tab sex ,m
/*
        Sex |      Freq.     Percent        Cum.
------------+-----------------------------------
       Male |      1,330       51.06       51.06
     Female |      1,275       48.94      100.00
------------+-----------------------------------
      Total |      2,605      100.00
*/
rename sex sex_old
gen sex=1 if sex_old==2 //2467 changes
replace sex=2 if sex_old==1 //2587 changes
drop sex_old
label define sex_lab 1 "Female" 2 "Male", modify
label values sex sex_lab
label var sex "Sex"
tab sex ,m
/*
        Sex |      Freq.     Percent        Cum.
------------+-----------------------------------
     Female |      1,275       48.94       48.94
       Male |      1,330       51.06      100.00
------------+-----------------------------------
      Total |      2,605      100.00
*/


** Spotting some duplicates so re-check for duplicates (since 2019 Pt.1 death cleaning was done at different time to 2019 Pt.2 these duplicates were missed)
** Delete records in multi-year REDCap database
sort regnum district
quietly by regnum district:  gen dupreg = cond(_N==1,0,_n)
sort regnum district
count if event==1 & dupreg>0  //177 - same reg #s but different pts
sort regnum pname record_id
//list record_id dddoa ddda odda pname regnum district nrn if event==1 & dupreg>0
//list record_id dddoa ddda odda pname regnum district nrn if event==1 & dupreg>0 & inrange(record_id, 26000, 28000)
//list record_id dddoa ddda odda pname regnum district nrn if event==1 & dupreg>0 & inrange(record_id, 28001, 30000)
drop dupreg


sort pname
quietly by pname:  gen dup = cond(_N==1,0,_n)
sort pname
count if event==1 & dup>0  //28 - all different pts with same name
sort pname record_id
//list record_id dddoa ddda odda pname regnum district nrn namematch if event==1 & dup>0
/*
replace namematch=1 if record_id==|record_id==|record_id==|record_id==|record_id== ///
					   |record_id==|record_id==|record_id==|record_id==|record_id== ///
					   |record_id==|record_id==|record_id==|record_id==|record_id== ///
					   |record_id==|record_id==|record_id==|record_id== // changes
drop if record_id==|record_id== // deleted
*/
//drop if event==1 & dup>0 & namematch==. // deleted
drop dup


** Remove, relabel certain variables for merging with cancer ds
gen dd2020_dod=dod
format dd2020_dod %tdCCYY-NN-DD

order record_id regnum nrn pname fname lname sex age dod cancer cod1a addr parish pod

** Create dataset for combining 2015-2020 deaths for matching (change variable names AFTER all datasets are combined and BEFORE matching with cancer dataset)
label data "BNR MORTALITY data 2020"
notes _dta :These data prepared from BB national death register & Redcap deathdata database
save "`datapath'\version09\2-working\2020_deaths_norenaming" ,replace
note: TS This dataset can be used for combining 2020 deaths with 2015-2019 deaths into one dataset for matching with cancer data


** Change variable names to distinguish between cancer and 2020 death variables
rename nrn dd2020_nrn
rename regnum dd2020_regnum 
rename pname dd2020_pname 
rename age dd2020_age 
rename cancer dd2020_cancer 
rename cod1a dd2020_cod1a 
rename address dd2020_address 
rename parish dd2020_parish 
rename pod dd2020_pod 
rename coddeath dd2020_coddeath
rename mname dd2020_mname 
rename namematch dd2020_namematch 
rename event dd2020_event 
rename dddoa dd2020_dddoa 
rename ddda dd2020_ddda 
rename odda dd2020_odda 
rename certtype dd2020_certtype 
rename district dd2020_district 
rename agetxt dd2020_agetxt 
rename nrnnd dd2020_nrnnd
rename mstatus dd2020_mstatus 
rename occu dd2020_occu 
rename durationnum dd2020_durationnum 
rename durationtxt dd2020_durationtxt 
rename onsetnumcod1a dd2020_onsetnumcod1a 
rename onsettxtcod1a dd2020_onsettxtcod1a 
rename cod1b dd2020_cod1b
rename onsetnumcod1b dd2020_onsetnumcod1b 
rename onsettxtcod1b dd2020_onsettxtcod1b 
rename cod1c dd2020_cod1c 
rename onsetnumcod1c dd2020_onsetnumcod1c 
rename onsettxtcod1c dd2020_onsettxtcod1c 
rename cod1d dd2020_cod1d 
rename onsetnumcod1d dd2020_onsetnumcod1d
rename onsettxtcod1d dd2020_onsettxtcod1d 
rename cod2a dd2020_cod2a 
rename onsetnumcod2a dd2020_onsetnumcod2a 
rename onsettxtcod2a dd2020_onsettxtcod2a 
rename cod2b dd2020_cod2b 
rename onsetnumcod2b dd2020_onsetnumcod2b 
rename onsettxtcod2b dd2020_onsettxtcod2b
rename deathparish dd2020_deathparish 
rename regdate dd2020_regdate 
rename certifier dd2020_certifier 
rename certifieraddr dd2020_certifieraddr
rename cleaned dd2020_cleaned
rename recstatdc dd2020_recstatdc 
//rename tfdddoa dd2020_tfdddoa 
//rename tfddda dd2020_tfddda 
//rename tfregnumstart dd2020_tfregnumstart
//rename tfdistrictstart dd2020_tfdistrictstart 
//rename tfregnumend dd2020_tfregnumend 
//rename tfdistrictend dd2020_tfdistrictend 
//rename tfddtxt dd2020_tfddtxt 
//rename recstattf dd2020_recstattf 
rename duprec dd2020_duprec 
//rename dupname dd2020_dupname 
//rename dupdod dd2020_dupdod
rename dodyear dd2020_dodyear 
//rename cod dd2020_cod
//rename record_id dd2020_record_id

count //2605

label data "BNR MORTALITY data 2020"
notes _dta :These data prepared from BB national death register & Redcap deathdata database
save "`datapath'\version09\3-output\2020_deaths_for_matching" ,replace
note: TS This dataset can be used for matching 2020 deaths with incidence data

***************************
**    2015-2020 Deaths   **
** Prepared for Matching **
***************************

clear

use "`datapath'\version09\2-working\2020_deaths_norenaming" ,clear

** Adding earlier death matching datasets as some deaths added post-cleaning
append using "`datapath'\version09\2-working\2015-2018_deaths_norenaming"
append using "`datapath'\version09\2-working\2019_deaths_norenaming"


drop dodyear
gen dodyear=year(dod)
tab dodyear,m
/*
    dodyear |      Freq.     Percent        Cum.
------------+-----------------------------------
       2015 |      2,482       16.10       16.10
       2016 |      2,488       16.14       32.24
       2017 |      2,530       16.41       48.65
       2018 |      2,525       16.38       65.03
       2019 |      2,788       18.09       83.11
       2020 |      2,603       16.89      100.00
------------+-----------------------------------
      Total |     15,416      100.00
*/

replace pod=placeofdeath if pod=="" & placeofdeath!="" // changes


** Remove unnecessary variables
drop event redcap_event_name recstatdc tempvarn dd2020_dod tfdddoa tfddda tfregnumstart tfdistrictstart tfregnumend tfdistrictend tfddtxt recstattf ///
	 placeofdeath dupname dupdod nrnyear year2 checkage2 dd2019_dod

** Populate natregno (string) field with NRNs
count if length(natregno)==9 //1
count if length(natregno)==8 //0
count if length(natregno)==7 //0
replace natregno="0" + natregno if length(natregno)==9 //1 change
replace natregno="00" + natregno if length(natregno)==8 //0 changes
replace natregno="000" + natregno if length(natregno)==7 //0 changes

** Reminder to JC (19-Aug-2021): For 2016 annual report cleaning, re-do below code when creating natregno string variable using gen double code as this changes the NRNs
/*
//format nrn %10.0g
gen double nrn2=nrn
format nrn2 %15.0g
rename nrn2 natregno
tostring natregno ,replace
*/
count if nrn!=. & natregno=="" //5,158
gen natregno2 = nrn
tostring natregno2 ,replace
count if length(natregno2)==9 & natregno=="" //27
count if length(natregno2)==8 & natregno=="" //0
count if length(natregno2)==7 & natregno=="" //5
replace natregno2="0" + natregno2 if length(natregno2)==9 & natregno=="" //27 changes
replace natregno2="000" + natregno2 if length(natregno2)==7 & natregno=="" //5 changes
count if natregno2!="" & natregno2!="." & natregno=="" //5,158
count if nrn!=. & natregno=="" //5,158
replace natregno=natregno2 if natregno2!="" & natregno2!="." & natregno=="" //5,158 changes
count if nrn!=. & natregno=="" //0
drop natregno2

** Create dataset without name changes for matching (see dofile 50)
label data "BNR MORTALITY data 2015-2020"
notes _dta :These data prepared from BB national death register & Redcap deathdata database
save "`datapath'\version09\3-output\2015-2020_deaths_for_appending" ,replace
note: TS This dataset can be used for matching 2015-2020 deaths with incidence data

** Change variable names in prep for matching with cancer dataset
rename record_id dd6yrs_record_id
rename regnum dd6yrs_regnum
rename nrn dd6yrs_nrn
rename pname dd6yrs_pname
rename fname dd6yrs_fname
rename lname dd6yrs_lname
rename sex dd6yrs_sex
rename age dd6yrs_age
rename dod dd6yrs_dod
rename cancer dd6yrs_cancer
rename cod1a dd6yrs_cod1a
rename address dd6yrs_address
rename parish dd6yrs_parish
rename pod dd6yrs_pod
rename coddeath dd6yrs_coddeath
rename mname dd6yrs_mname
rename namematch dd6yrs_namematch
rename dddoa dd6yrs_dddoa
rename ddda dd6yrs_ddda
rename odda dd6yrs_odda
rename certtype dd6yrs_certtype
rename district dd6yrs_district
rename agetxt dd6yrs_agetxt
rename nrnnd dd6yrs_nrnnd
rename mstatus dd6yrs_mstatus
rename occu dd6yrs_occu
rename durationnum dd6yrs_durationnum
rename durationtxt dd6yrs_durationtxt
rename onsetnumcod1a dd6yrs_onsetnumcod1a
rename onsettxtcod1a dd6yrs_onsettxtcod1a
rename cod1b dd6yrs_cod1b
rename onsetnumcod1b dd6yrs_onsetnumcod1b
rename onsettxtcod1b dd6yrs_onsettxtcod1b
rename cod1c dd6yrs_cod1c
rename onsetnumcod1c dd6yrs_onsetnumcod1c
rename onsettxtcod1c dd6yrs_onsettxtcod1c
rename cod1d dd6yrs_cod1d
rename onsetnumcod1d dd6yrs_onsetnumcod1d
rename onsettxtcod1d dd6yrs_onsettxtcod1d
rename cod2a dd6yrs_cod2a
rename onsetnumcod2a dd6yrs_onsetnumcod2a
rename onsettxtcod2a dd6yrs_onsettxtcod2a
rename cod2b dd6yrs_cod2b
rename onsetnumcod2b dd6yrs_onsetnumcod2b
rename onsettxtcod2b dd6yrs_onsettxtcod2b
rename deathparish dd6yrs_deathparish
rename regdate dd6yrs_regdate
rename certifier dd6yrs_certifier
rename certifieraddr dd6yrs_certifieraddr
rename cleaned dd6yrs_cleaned
rename duprec dd6yrs_duprec
rename elecmatch dd6yrs_elecmatch
rename cod dd6yrs_cod
rename natregno dd6yrs_natregno
rename dodyear dd6yrs_dodyear

label data "BNR MORTALITY data 2015-2020"
notes _dta :These data prepared from BB national death register & Redcap deathdata database
save "`datapath'\version09\3-output\2015-2020_deaths_for_matching" ,replace
note: TS This dataset can be used for matching 2015-2020 deaths with incidence data

