** HEADER -----------------------------------------------------
**  DO-FILE METADATA
    //  algorithm name          10_prep_mort.do
    //  project:                BNR
    //  analysts:               Jacqueline CAMPBELL
    //  date first created      14-NOV-2019
    // 	date last modified      14-NOV-2019
    //  algorithm task          Prep and format death data
    //  status                  Completed
    //  objective               To have multiple datasets with cleaned death data for matching and reporting.
    
    ** General algorithm set-up
    version 16
    clear all
    macro drop _all
    set more off

    ** Initialising the STATA log and allow automatic page scrolling
    capture {
            program drop _all
    	drop _all
    	log close
    	}

    ** Set working directories: this is for DATASET and LOGFILE import and export
    ** DATASETS to encrypted SharePoint folder
    local datapath "X:/The University of the West Indies/DataGroup - repo_data/data_p117"
    ** LOGFILES to unencrypted OneDrive folder (.gitignore set to IGNORE log files on PUSH to GitHub)
    local logpath X:/OneDrive - The University of the West Indies/repo_datagroup/repo_p117

    ** Close any open log file and open a new log file
    capture log close
    log using "`logpath'\10_prep_mort.smcl", replace
** HEADER -----------------------------------------------------

***************
** DATA IMPORT  
***************
** LOAD the national registry deaths 2008-2018 excel dataset
import excel using "`datapath'\version02\1-input\BNRDeathData20082018_DATA_2019-11-14_1631_excel.xlsx" , firstrow case(lower)

count //26908

*******************
** DATA FORMATTING  
*******************
** PREPARE each variable according to the format and order in which they appear in DeathData REDCap database

************************
**  DEATH CERTIFICATE **
**        FORM        **
************************

** (1) record_id (auto-generated by REDCap)
label var record_id "record_id"

** (2) redcap_event_name (auto-generated by REDCap)
gen event=.
replace event=1 if redcap_event_name=="death_data_collect_arm_1"
replace event=2 if redcap_event_name=="tracking_arm_2"
drop redcap_event_name

label var event "Redcap Event Name"
label define event_lab 1 "DC arm 1" 2 "TF arm 2", modify
label values event event_lab

** (3) dddoa: Y-M-D H:M, readonly
format dddoa %tcCCYY-NN-DD_HH:MM:SS
label var dddoa "ABS DateTime"

** (4) ddda
label var ddda "ABS DA"
label define ddda_lab 4 "KG" 13 "KWG" 14 "TH" 20 "NR" 25 "AH" 98 "intern", modify
label values ddda ddda_lab

** (5) odda
label var odda "ABS Other DA"

** (6) certtype: 1=MEDICAL 2=POST MORTEM 3=CORONER 99=ND, required
label var certtype "Certificate Type"
label define certtype_lab 1 "Medical" 2 "Post Mortem" 3 "Coroner" 99 "ND", modify
label values certtype certtype_lab

** (7) regnum: integer, if missing=9999
label var regnum "Registry Dept #"

** (8) district: 1=A 2=B 3=C 4=D 5=E 6=F
/* Districts are assigned based on death parish
	District A - anything below top rock christ church and st. michael 
	District B - anything above top rock christ church and st. george
	District C - st. philip and st. john
	District D - st. thomas
	District E - st. james, st. peter, st. lucy
	District F - st. joseph, st. andrew
*/
label var district "District"
label define district_lab 1 "A" 2 "B" 3 "C" 4 "D" 5 "E" 6 "F", modify
label values district district_lab

** (9) pname: Text, if missing=99
label var pname "Deceased's Name"
replace pname = rtrim(ltrim(itrim(pname))) //5 changes

** (10) address: Text, if missing=99
label var address "Deceased's Address"
replace address = rtrim(ltrim(itrim(address))) //20 changes

** (11) parish
label var parish "Deceased's Parish"
label define parish_lab 1 "Christ Church" 2 "St. Andrew" 3 "St. George" 4 "St. James" 5 "St. John" 6 "St. Joseph" ///
						7 "St. Lucy" 8 "St. Michael" 9 "St. Peter" 10 "St. Philip" 11 "St. Thomas" 99 "ND", modify
label values parish parish_lab

** (12) sex:	1=Male 2=Female 99=ND
label var sex "Sex"
label define sex_lab 1 "Male" 2 "Female" 99 "ND", modify
label values sex sex_lab

** (13) age: Integer - min=0, max=999
label var age "Age"

** (14) agetxt
label var agetxt "Age Qualifier"
label define agetxt_lab 1 "Minutes" 2 "Hours" 3 "Days" 4 "Weeks" 5 "Months" 6 "Years" 99 "ND", modify
label values agetxt agetxt_lab

** (15) nrnnd: 1=Yes 2=No
label var nrnnd "Is National ID # documented?"

** (16) nrn: dob-####, partial missing=dob-9999, if missing=.
label var nrn "National ID #"
format nrn %15.0g

** (17) mstatus: 1=Single 2=Married 3=Separated/Divorced 4=Widowed/Widow/Widower 99=ND
label var mstatus "Marital Status"
label define mstatus_lab 1 "Single" 2 "Married" 3 "Separated/Divorced" 4 "Widowed/Widow/Widower" 99 "ND", modify
label values mstatus mstatus_lab

** (18) occu: Text, if missing=99
label var occu "Occupation"

** (19) durationnum: Integer - min=0, max=99, if missing=99
label var durationnum "Duration of Illness"

** (20) durationtxt
label var durationtxt "Duration Qualifier"
label define durationtxt_lab 1 "Days" 2 "Weeks" 3 "Months" 4 "Years" 99 "ND", modify
label values durationtxt durationtxt_lab

** (21) dod: Y-M-D
format dod %tdCCYY-NN-DD
label var dod "Date of Death"

** (22) dodyear (not included in single year Redcap db but done for multi-year Redcap db)
//gen int dodyear=year(dod)
label var dodyear "Year of Death"

** (23) cod1a: Text, if missing=99
label var cod1a "COD 1a"

** (24) onsetnumcod1a: Integer - min=0, max=99, if missing=99
label var onsetnumcod1a "Onset Death Interval-COD 1a"

** (25) onsettxtcod1a: 1=DAYS 2=WEEKS 3=MONTHS 4=YEARS
label var onsettxtcod1a "Onset Qualifier-COD 1a"
label define onsettxtcod1a_lab 1 "Days" 2 "Weeks" 3 "Months" 4 "Years" 99 "ND", modify
label values onsettxtcod1a onsettxtcod1a_lab

** (26) cod1b: Text, if missing=99
label var cod1b "COD 1b"

** (27) onsetnumcod1b: Integer - min=0, max=99, if missing=99
label var onsetnumcod1b "Onset Death Interval-COD 1b"

** (28) onsettxtcod1b: 1=DAYS 2=WEEKS 3=MONTHS 4=YEARS
label var onsettxtcod1b "Onset Qualifier-COD 1b"
label define onsettxtcod1b_lab 1 "Days" 2 "Weeks" 3 "Months" 4 "Years" 99 "ND", modify
label values onsettxtcod1b onsettxtcod1b_lab

** (29) cod1c: Text, if missing=99
label var cod1c "COD 1c"

** (30) onsetnumcod1c: Integer - min=0, max=99, if missing=99
label var onsetnumcod1c "Onset Death Interval-COD 1c"

** (31) onsettxtcod1c: 1=DAYS 2=WEEKS 3=MONTHS 4=YEARS
label var onsettxtcod1c "Onset Qualifier-COD 1c"
label define onsettxtcod1c_lab 1 "Days" 2 "Weeks" 3 "Months" 4 "Years" 99 "ND", modify
label values onsettxtcod1c onsettxtcod1c_lab

** (32) cod1d: Text, if missing=99
label var cod1d "COD 1d"

** (33) onsetnumcod1d: Integer - min=0, max=99, if missing=99
label var onsetnumcod1d "Onset Death Interval-COD 1d"

** (34) onsettxtcod1d: 1=DAYS 2=WEEKS 3=MONTHS 4=YEARS
label var onsettxtcod1d "Onset Qualifier-COD 1d"
label define onsettxtcod1d_lab 1 "Days" 2 "Weeks" 3 "Months" 4 "Years" 99 "ND", modify
label values onsettxtcod1d onsettxtcod1d_lab

** (35) cod2a: Text, if missing=99
label var cod2a "COD 2a"

** (36) onsetnumcod2a: Integer - min=0, max=99, if missing=99
label var onsetnumcod2a "Onset Death Interval-COD 2a"

** (37) onsettxtcod2a: 1=DAYS 2=WEEKS 3=MONTHS 4=YEARS
label var onsettxtcod2a "Onset Qualifier-COD 2a"
label define onsettxtcod2a_lab 1 "Days" 2 "Weeks" 3 "Months" 4 "Years" 99 "ND", modify
label values onsettxtcod2a onsettxtcod2a_lab

** (38) cod2b: Text, if missing=99
label var cod2b "COD 2b"

** (39) onsetnumcod2b: Integer - min=0, max=99, if missing=99
label var onsetnumcod2b "Onset Death Interval-COD 2b"

** (40) onsettxtcod2b: 1=DAYS 2=WEEKS 3=MONTHS 4=YEARS
label var onsettxtcod2b "Onset Qualifier-COD 2b"
label define onsettxtcod2b_lab 1 "Days" 2 "Weeks" 3 "Months" 4 "Years" 99 "ND", modify
label values onsettxtcod2b onsettxtcod2b_lab

** (41) pod: Text, if missing=99
label var pod "Place of Death"

** (42) deathparish
label var deathparish "Death Parish"
label define deathparish_lab 1 "Christ Church" 2 "St. Andrew" 3 "St. George" 4 "St. James" 5 "St. John" 6 "St. Joseph" ///
						7 "St. Lucy" 8 "St. Michael" 9 "St. Peter" 10 "St. Philip" 11 "St. Thomas" 99 "ND", modify
label values deathparish deathparish_lab

** (43) regdate: Y-M-D
label var regdate "Date of Registration"
format regdate %tdCCYY-NN-DD

** (44) certifier: Text, if missing=99
label var certifier "Name of Certifier"

** (45) certifieraddr: Text, if missing=99
label var certifieraddr "Address of Certifier"

** (46) namematch: readonly
label var namematch "Name Match"
label define namematch_lab 1 "names match but different person" 2 "no name match", modify
label values namematch namematch_lab

** (47) death_certificate_complete (auto-generated by REDCap): 0=Incomplete 1=Unverified 2=Complete
rename death_certificate_complete recstatdc
label var recstatdc "Record Status-DC Form"
label define recstatdc_lab 0 "Incomplete" 1 "Unverified" 2 "Complete", modify
label values recstatdc recstatdc_lab


*******************
** TRACKING FORM **
*******************

** (48) tfdddoa: Y-M-D H:M, readonly
format tfdddoa %tcCCYY-NN-DD_HH:MM:SS
label var tfdddoa "TF DateTime"

** (49) tfddda: readonly, user logged into redcap
label var tfddda "TF DA"
label define tfddda_lab 4 "KG" 13 "KWG" 14 "TH" 20 "NR" 25 "AH" 98 "intern", modify
label values tfddda tfddda_lab

** (50) tfregnumstart: integer
label var tfregnumstart "Registry #-Start"

** (51) tfdistrictstart: letters only
label var tfdistrictstart "District-Start"

** (52) tfregnumend: integer
label var tfregnumend "Registry #-End"

** (53) tfdistrictend: letters only
label var tfdistrictend "District-End"

** (53) tfddtxt
label var tfddtxt "TF Comments"

** (54) tracking_complete (auto-generated by REDCap): 0=Incomplete 1=Unverified 2=Complete
rename tracking_complete recstattf
label var recstattf "Record Status-TF Form"
label define recstattf_lab 0 "Incomplete" 1 "Unverified" 2 "Complete", modify
label values recstattf recstattf_lab

order record_id event dddoa ddda odda certtype regnum district pname address parish sex ///
      age agetxt nrnnd nrn mstatus occu durationnum durationtxt dod dodyear ///
      cod1a onsetnumcod1a onsettxtcod1a cod1b onsetnumcod1b onsettxtcod1b ///
      cod1c onsetnumcod1c onsettxtcod1c cod1d onsetnumcod1d onsettxtcod1d ///
      cod2a onsetnumcod2a onsettxtcod2a cod2b onsetnumcod2b onsettxtcod2b ///
      pod deathparish regdate certifier certifieraddr namematch recstatdc ///
      tfdddoa tfddda tfregnumstart tfdistrictstart tfregnumend tfdistrictend tfddtxt recstattf

count //26908

label data "BNR MORTALITY data 2008-2018"
notes _dta :These data prepared from BB national death register & Redcap deathdata database
save "`datapath'\version02\2-working\2008-2018_deaths_tf" ,replace
note: TS The tracking form data is included in this dataset

***********************
**     Preparing     **
** 2017, 2018 Deaths **
***********************
** Next we get rid of those who died pre-2017 (there are previously unmatched 2017 cases in dataset)
drop if dod<d(01jan2017) //21778 deleted
** Remove Tracking Form info
drop if event==2 //73 deleted

count //5130

*****************
**  Formatting **
**    Names    **
*****************
rename namematch nm

** Need to check for duplicate death registrations
** First split full name into first, middle and last names
** Also - code to split full name into 2 variables fname and lname - else can't merge! 
split pname, parse(", "" ") gen(name)
order record_id pname name*
sort record_id

** Use Stata browse to view results as changes are made
** (1) sort cases that contain only a first name and a last name
count if name7=="" & name6=="" & name5=="" & name4=="" & name3=="" //3676
count if name6=="" & name5=="" & name4=="" & name3=="" //3676
count if name5=="" & name4=="" & name3=="" //3676
count if name4=="" & name3=="" & name2=="" //2
count if name3=="" & name2=="" //2
count if name2=="" //2
count if name1=="" //0
replace name5=name2 if name5=="" & name3=="" & name4=="" //
replace name2="" if name3=="" & name4=="" //

** (2) sort cases with name 'baby' or 'b/o' in name1 variable
count if (regexm(name1,"BABY")|regexm(name1,"B/O")|regexm(name1,"MALE")|regexm(name1,"FEMALE")) //16
gen tempvarn=1 if (regexm(name1,"BABY")|regexm(name1,"B/O")|regexm(name1,"MALE")|regexm(name1,"FEMALE"))
//list record_id pname name1 name2 name3 name4 name5 if tempvarn==1
//list record_id pname name6 name7 if tempvarn==1
replace name1=name1+" "+name2 if tempvarn==1 & (record_id!=24442 & record_id!=25511 & record_id!=26692 & record_id!=26885) //11 changes
replace name1=name1+" "+name3 if record_id==24336
replace name2="" if name2=="OF" //11 changes
replace name2=name3 if tempvarn==1 & (record_id!=24442 & record_id!=25511 & record_id!=26692 & record_id!=26885) //11 changes
replace name3=name4 if tempvarn==1 & name4!="" & (record_id!=24442 & record_id!=25511 & record_id!=26692 & record_id!=26885 & record_id!=24008 & record_id!=26692) //11 changes
replace name2=name3 if record_id==24336
replace name3=name5 if record_id==24336
replace name2=name2+" "+name4+" "+name5 if record_id==24008
replace name3=name6 if record_id==24008
replace name2=name2+" "+name5+" "+name6+" "+name7 if record_id==26406
replace name2=name2+" "+name4+" "+name5+" "+name6 if record_id==26692
replace name4="" if tempvarn==1 //13 changes
replace name5="" if tempvarn==1 //4 changes
replace name6="" if tempvarn==1 //3 changes
replace name7="" if tempvarn==1 //1 change

** (3) sort cases with name in name6 variable
count if name6!="" //1
//list record_id *name* if name6!=""
replace name7=name2 if record_id==25050
replace name2=name3+" "+name4+" "+name5+" "+name6 if record_id==25050
replace name3=name7 if record_id==25050
replace name4="" if record_id==25050
replace name5="" if record_id==25050
replace name6="" if record_id==25050
replace name7="" if record_id==25050

** (4) sort cases with name in name5 variable
count if name5!="" //3678
//list record_id *name* if name5!=""
replace name2=name2+" "+name3+" "+name4 if record_id==23269|record_id==24056
replace name3="" if record_id==23269|record_id==24056
replace name4="" if record_id==23269|record_id==24056
replace name2=name2+" "+name3+name4 if record_id==25248
replace name1=name1+"."+name2 if record_id==22814
replace name2=name3+"."+name4 if record_id==22814
replace name4="" if record_id==22814|record_id==25248
replace name3=name5 if name5!="" //3678 changes
replace name5="" if name5!="" //3678 changes

** (5)
** Names containing 'ST' are being interpreted as 'ST'=name1/fname so correct
count if name1=="ST" | name1=="ST." //6
replace tempvarn=2 if name1=="ST" | name1=="ST."
//list record_id pname name1 name2 name5 if tempvarn==2
replace name1=name1+"."+""+name2 if tempvarn==2 //6 changes
replace name2="" if tempvarn==2 //6 changes
replace name2=name3 if record_id==24517
replace name3=name4 if record_id==24517
replace name4="" if record_id==24517
replace name1 = subinstr(name1, ".", "",1) if record_id==24517|record_id==24774
** Names containing 'ST' are being interpreted as 'ST'=name2/fname so correct
count if name2=="ST" | name2=="ST." //21
replace tempvarn=3 if name2=="ST" | name2=="ST."
replace name2=name2+"."+""+name3 if tempvarn==3 //21 changes
replace name2 = subinstr(name2, ".", "",1) if record_id==24127|record_id==25166|record_id==25420|record_id==25984|record_id==26481|record_id==26593
replace name3="" if tempvarn==3 //21 changes
replace name3=name4 if tempvarn==3 //17 changes
replace name4="" if tempvarn==3 //17 changes
replace name3=name2 if tempvarn==3 & name3=="" //4 changes
replace name2="" if tempvarn==3 & name2==name3
** Names containing 'ST' are being interpreted as 'ST'=name3/fname so correct
count if name3=="ST" | name3=="ST." //3
replace tempvarn=4 if name3=="ST" | name3=="ST."
replace name3=name3+"."+""+name4 if tempvarn==4 //3 changes
replace name4="" if tempvarn==4 //3 changes

** (6) sort cases with name in name4 variable
count if name4!="" //69
//list record_id *name* if name4!=""
replace name2=name2+" "+name3 if name4!="" //69 changes
replace name3=name4 if name4!="" //69 changes
replace name4="" if name4!="" //69 changes

** (7) sort cases with NO name in name3 variable
count if name3=="" //2
//list record_id *name* if name3==""
replace name3=substr(name1,6,11) if record_id==25303
replace name1=substr(name1,1,5) if record_id==25303
replace name3=substr(name1,8,7) if record_id==25414
replace name2=substr(name1,7,1) if record_id==25414
replace name1=substr(name1,1,6) if record_id==25414

** (8) sort cases with suffixes
count if (name3!="" & name3!="99") & length(name3)<4 //49 - 2 need correcting
replace tempvarn=5 if (name3!="" & name3!="99") & length(name3)<4
//list record_id pname fname mname lname if (lname!="" & lname!="99") & length(lname)<3
drop if record_id==24108 //1 deleted - same as record_id=24107
replace name3=name2+" "+name3 if record_id==24107
replace name2="" if record_id==24107

** Now rename, check and remove unnecessary variables
rename name1 fname
rename name2 mname
rename name3 lname
count if fname=="" //0
count if lname=="" //0
drop name4 name5 name6 name7 tempvarn

** Convert names to lower case and strip possible leading/trailing blanks
replace fname = lower(rtrim(ltrim(itrim(fname)))) //5056 changes
replace mname = lower(rtrim(ltrim(itrim(mname)))) //1369 changes
replace lname = lower(rtrim(ltrim(itrim(lname)))) //5056 changes

rename nm namematch
order record_id pname fname mname lname namematch

*************************
** Checking & Removing ** 
**   Duplicate Death   **
**    Registrations    **
*************************
/* 
NB: These deaths were cleaned previously for importing into DeathData REDCapdb 
so the field namematch can be used as a guide for checking duplicates
	1=names match but different person
	2=no name match
*/
//label define namematch_lab 1 "deaths only namematch,diff.pt" 2 "no namematch" 3 "cr5 & death namematch,diff.pt" 4 "slc=2/9,not in deathdata", modify
//label values namematch namematch_lab
sort lname fname record_id
quietly by lname fname : gen dupname = cond(_N==1,0,_n)
sort lname fname record_id
count if dupname>0 //932
/* 
Check below list for cases where namematch=no match but 
there is a pt with same name then:
 (1) check if same pt and remove duplicate pt;
 (2) check if same name but different pt and
	 update namematch variable to reflect this, i.e.
	 namematch=1
*/
//list record_id namematch fname lname nrn dod sex age if dupname>0
drop if record_id==26532 //1 deleted - duplicate registration for record_id=26283
drop if record_id==25379 //1 deleted - duplicate registration for record_id=26481
replace namematch=1 if dupname>0 //106 changes

preserve
drop if nrn==.
sort nrn 
quietly by nrn : gen dupnrn = cond(_N==1,0,_n)
sort nrn record_id lname fname
count if dupnrn>0 //4
list record_id namematch fname lname nrn dod sex age if dupnrn>0
replace namematch=1 if dupnrn>0 //3 changes
restore

** Final check for duplicates by name and dod 
sort lname fname dod
quietly by lname fname dod: gen dupdod = cond(_N==1,0,_n)
sort lname fname dod record_id
count if dupdod>0 //2 - diff.pt & namematch already=1
list record_id namematch fname lname nrn dod sex age if dupdod>0
count if dupdod>0 & namematch!=1 //0

count //5054

** Now generate a new variable which will select out all the potential cancers
gen cancer=.
label define cancer_lab 1 "cancer" 2 "not cancer", modify
label values cancer cancer_lab
label var cancer "cancer diagnoses"
label var record_id "Event identifier for registry deaths"

** searching cod1a for these terms
replace cod1a="99" if cod1a=="999" //0 changes
replace cod1b="99" if cod1b=="999" //28 changes
replace cod1c="99" if cod1c=="999" //45 changes
replace cod1d="99" if cod1d=="999" //56 changes
replace cod2a="99" if cod2a=="999" //45 changes
replace cod2b="99" if cod2b=="999" //54 changes
count if cod1c!="99" //567
count if cod1d!="99" //132
count if cod2a!="99" //1005
count if cod2b!="99" //462
//ssc install unique
//ssc install distinct
** Create variable with combined CODs
gen coddeath=cod1a+" "+cod1b+" "+cod1c+" "+cod1d+" "+cod2a+" "+cod2b
replace coddeath=subinstr(coddeath,"99 ","",.) //4990
replace coddeath=subinstr(coddeath," 99","",.) //4591
** Identify cancer deaths using variable called 'cancer'
replace cancer=1 if regexm(coddeath, "CANCER") & cancer==. //719 changes
replace cancer=1 if regexm(coddeath, "TUMOUR") &  cancer==. //25 changes
replace cancer=1 if regexm(coddeath, "TUMOR") &  cancer==. //21 changes
replace cancer=1 if regexm(coddeath, "MALIGNANT") &  cancer==. //16 changes
replace cancer=1 if regexm(coddeath, "MALIGNANCY") &  cancer==. //65 changes
replace cancer=1 if regexm(coddeath, "NEOPLASM") &  cancer==. //3 changes
replace cancer=1 if regexm(coddeath, "CARCINOMA") &  cancer==. //333 changes
replace cancer=1 if regexm(coddeath, "CARCIMONA") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "CARINOMA") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "MYELOMA") &  cancer==. //43 changes
replace cancer=1 if regexm(coddeath, "LYMPHOMA") &  cancer==. //24 changes
replace cancer=1 if regexm(coddeath, "LYMPHOMIA") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "LYMPHONA") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "SARCOMA") &  cancer==. //20 changes
replace cancer=1 if regexm(coddeath, "TERATOMA") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "LEUKEMIA") &  cancer==. //24 changes
replace cancer=1 if regexm(coddeath, "LEUKAEMIA") &  cancer==. //5 changes
replace cancer=1 if regexm(coddeath, "HEPATOMA") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "CARANOMA PROSTATE") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "MENINGIOMA") &  cancer==. //3 changes
replace cancer=1 if regexm(coddeath, "MYELOSIS") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "MYELOFIBROSIS") &  cancer==. //1 change
replace cancer=1 if regexm(coddeath, "CYTHEMIA") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "CYTOSIS") &  cancer==. //1 change
replace cancer=1 if regexm(coddeath, "BLASTOMA") &  cancer==. //5 changes
replace cancer=1 if regexm(coddeath, "METASTATIC") &  cancer==. //10 changes
replace cancer=1 if regexm(coddeath, "MASS") &  cancer==. //40 changes
replace cancer=1 if regexm(coddeath, "METASTASES") &  cancer==. //2 changes
replace cancer=1 if regexm(coddeath, "METASTASIS") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "REFRACTORY") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "FUNGOIDES") &  cancer==. //2 change
replace cancer=1 if regexm(coddeath, "HODGKIN") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "MELANOMA") &  cancer==. //1 change
replace cancer=1 if regexm(coddeath,"MYELODYS") &  cancer==. //3 changes

** Strip possible leading/trailing blanks in cod1a
replace coddeath = rtrim(ltrim(itrim(coddeath))) //0 changes

tab cancer, missing

drop dodyear
gen dodyear=year(dod)
tab dodyear cancer,m

** Check that all cancer CODs for 2014 are eligible
sort coddeath record_id
order record_id coddeath
//list coddeath if cancer==1 & inrange(record_id, 0, 24000)
** 588
//list coddeath if cancer==1 & inrange(record_id, 24001, 27000)
** 778

** Replace 2014 cases that are not cancer according to eligibility SOP:
/*
	(1) After merge with CR5 data then may need to reassign some of below 
		deaths as CR5 data may indicate eligibility while COD may exclude
		(e.g. see record_id==15458)
	(2) use obsid to check for CODs that incomplete in Results window with 
		Data Editor in browse mode-copy and paste record_id below from here
*/
replace cancer=2 if ///
record_id==23197|record_id==21945|record_id==22224|record_id==23208|record_id==23685| ///
record_id==22399|record_id==23068|record_id==22940|record_id==22575|record_id==21804| ///
record_id==23447|record_id==23179|record_id==23873|record_id==22514|record_id==25364| ///
record_id==24032|record_id==25675|record_id==24989|record_id==24752|record_id==25574| ///
record_id==25452|record_id==26634|record_id==25561|record_id==25157|record_id==26562| ///
record_id==26409|record_id==26124|record_id==25031|record_id==25968|record_id==26711| ///
record_id==25255|record_id==25660|record_id==26127|record_id==25258|record_id==24452| ///
record_id==24874|record_id==24536|record_id==25092|record_id==24583|record_id==24077| ///
record_id==24244|record_id==24525|record_id==25640|record_id==24440|record_id==24589| ///
record_id==24383|record_id==25916|record_id==24409|record_id==25385|record_id==24361| ///
record_id==24510|record_id==24786|record_id==26219|record_id==26376|record_id==24168| ///
record_id==24921|record_id==25012|record_id==26129|record_id==24164|record_id==26673| ///
record_id==26553|record_id==26795|record_id==24237|record_id==25772|record_id==25152| ///
record_id==24736|record_id==24394
replace coddeath=subinstr(coddeath,"GLIORRIA","GLIOMA",.) //1 change
//67 changes

** Check that all 2014 CODs that are not cancer for eligibility
tab dodyear cancer,m
count if cancer==. & inrange(record_id, 0, 23000) //873
count if cancer==. & inrange(record_id, 23001, 24000) //761
count if cancer==. & inrange(record_id, 24001, 2000) //725
//list coddeath if cancer==. & inrange(record_id, 0, 24000)
//list coddeath if cancer==. & inrange(record_id, 24001, 27000)

** No updates needed from above list
/*
replace cancer=1 if ///
record_id==|record_id==|record_id==|record_id==|record_id==| ///
*/

replace cancer=2 if cancer==. //3688 changes

** Create cod variable 
gen cod=.
label define cod_lab 1 "Dead of cancer" 2 "Dead of other cause" 3 "Not known" 4 "NA", modify
label values cod cod_lab
label var cod "COD categories"
replace cod=1 if cancer==1 //1299 changes
replace cod=2 if cancer==2 //3755 changes
** one unknown causes of death in 2014 data - record_id 12323
replace cod=3 if coddeath=="99"|(regexm(coddeath,"INDETERMINATE")|regexm(coddeath,"UNDETERMINED")) //42 changes

order record_id regnum nrn pname fname lname sex age dod cancer cod1a addr parish pod

label data "BNR MORTALITY data 2017-2018"
notes _dta :These data prepared from BB national death register & Redcap deathdata database
save "`datapath'\version02\2-working\2017-2018_deaths_for_matching" ,replace
note: TS This dataset can be used for matching 2017, 2018 deaths with incidence data

/*
** Corrections so cancer and death datasets for below patients can merge in dofile 5
**    List A	   **
replace sex=2 if record_id==13430 //1 change
replace nrn="" if record_id==13430 //1 change
replace age=28 if record_id==13430 //1 change

replace sex=2 if record_id==22231 //1 change
replace nrn="" if record_id==22231 //1 change
replace age=53 if record_id==22231 //1 change

replace sex=1 if record_id==13748 //1 change
replace nrn="" if record_id==13748 //1 change
replace age=82 if record_id==13748 //1 change

replace dod=d(21jan2017) if record_id==12255 //1 change

replace dod=d(27sep2015) if record_id==8130 //1 change

**    List B	   **
replace lname="dookie" if record_id==23963 //1 change
replace lname="greene" if record_id==16883 //1 change
replace fname="cecilia" if record_id==2992 //1 change
replace fname="eulaline" if record_id==8230 //1 change
replace fname="magdaline" if record_id==15336 //1 change
replace fname="lorna" if record_id==23231 //1 change
replace mname="violet" if record_id==23231 //1 change
replace fname="moretta" if record_id==17249 //1 change
replace fname="alphonso" if record_id==614 //1 change
replace fname="anthia" if record_id==3861 //1 change
replace mname="clemena" if record_id==3861 //1 change
replace lname="yarde" if record_id==2380 //1 change
replace lname="yarde" if record_id==5206 //1 change

**    List C	   **
replace lname="dawood-wilson" if record_id==20766 //1 change
replace fname="gertrude" if record_id==9502 //1 change
replace lname="watson" if record_id==10212 //1 change

tab deathyear if cancer==1,m 

count //12,286

save "data\clean\2014_cancer_deaths_dc.dta" ,replace
label data "BNR-Cancer Cleaning: National Deaths - 2013-2017 "
notes _dta :These data prepared for 2014 ABS phase
