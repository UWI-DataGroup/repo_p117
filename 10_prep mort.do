** HEADER -----------------------------------------------------
**  DO-FILE METADATA
    //  algorithm name          10_prep_mort.do
    //  project:                BNR
    //  analysts:               Jacqueline CAMPBELL
    //  date first created      03-MAR-2021
    // 	date last modified      03-MAR-2021
    //  algorithm task          Prep and format death data
    //  status                  Completed
    //  objective               To have multiple datasets with cleaned death data for matching and reporting.
    
    ** General algorithm set-up
    version 16.0
    clear all
    macro drop _all
    set more off

    ** Initialising the STATA log and allow automatic page scrolling
    capture {
            program drop _all
    	drop _all
    	log close
    	}

    ** Set working directories: this is for DATASET and LOGFILE import and export
    ** DATASETS to encrypted SharePoint folder
    local datapath "X:/The University of the West Indies/DataGroup - repo_data/data_p117"
    ** LOGFILES to unencrypted OneDrive folder (.gitignore set to IGNORE log files on PUSH to GitHub)
    local logpath X:/OneDrive - The University of the West Indies/repo_datagroup/repo_p117

    ** Close any open log file and open a new log file
    capture log close
    log using "`logpath'\10_prep_mort.smcl", replace
** HEADER -----------------------------------------------------

***************
** DATA IMPORT  
***************
** LOAD the national registry deaths 2008-2018 excel dataset
import excel using "`datapath'\version04\1-input\BNRDeathData20082020_DATA_2021-03-03_1930_excel.xlsx" , firstrow case(lower)

count //

*******************
** DATA FORMATTING  
*******************
** PREPARE each variable according to the format and order in which they appear in DeathData REDCap database

************************
**  DEATH CERTIFICATE **
**        FORM        **
************************

** (1) record_id (auto-generated by REDCap)
label var record_id "record_id"

** (2) redcap_event_name (auto-generated by REDCap)
gen event=.
replace event=1 if redcap_event_name=="death_data_collect_arm_1"
replace event=2 if redcap_event_name=="tracking_arm_2"
drop redcap_event_name

label var event "Redcap Event Name"
label define event_lab 1 "DC arm 1" 2 "TF arm 2", modify
label values event event_lab

** (3) dddoa: Y-M-D H:M, readonly
gen double dddoa2 = clock(dddoa, "YMDhm")
format dddoa2 %tcCCYY-NN-DD_HH:MM
drop dddoa
rename dddoa2 dddoa
label var dddoa "ABS DateTime"

** (4) ddda
label var ddda "ABS DA"
label define ddda_lab 4 "KG" 13 "KWG" 14 "TH" 20 "NR" 25 "AH" 98 "intern", modify
label values ddda ddda_lab

** (5) odda
label var odda "ABS Other DA"

** (6) certtype: 1=MEDICAL 2=POST MORTEM 3=CORONER 99=ND, required
label var certtype "Certificate Type"
label define certtype_lab 1 "Medical" 2 "Post Mortem" 3 "Coroner" 99 "ND", modify
label values certtype certtype_lab

** (7) regnum: integer, if missing=9999
label var regnum "Registry Dept #"

** (8) district: 1=A 2=B 3=C 4=D 5=E 6=F
/* Districts are assigned based on death parish
	District A - anything below top rock christ church and st. michael 
	District B - anything above top rock christ church and st. george
	District C - st. philip and st. john
	District D - st. thomas
	District E - st. james, st. peter, st. lucy
	District F - st. joseph, st. andrew
*/
label var district "District"
label define district_lab 1 "A" 2 "B" 3 "C" 4 "D" 5 "E" 6 "F", modify
label values district district_lab

** (9) pname: Text, if missing=99
label var pname "Deceased's Name"
replace pname = rtrim(ltrim(itrim(pname))) //5 changes

** (10) address: Text, if missing=99
label var address "Deceased's Address"
replace address = rtrim(ltrim(itrim(address))) //20 changes

** (11) parish
label var parish "Deceased's Parish"
label define parish_lab 1 "Christ Church" 2 "St. Andrew" 3 "St. George" 4 "St. James" 5 "St. John" 6 "St. Joseph" ///
						7 "St. Lucy" 8 "St. Michael" 9 "St. Peter" 10 "St. Philip" 11 "St. Thomas" 99 "ND", modify
label values parish parish_lab

** (12) sex:	1=Male 2=Female 99=ND
label var sex "Sex"
label define sex_lab 1 "Male" 2 "Female" 99 "ND", modify
label values sex sex_lab

** (13) age: Integer - min=0, max=999
label var age "Age"

** (14) agetxt
label var agetxt "Age Qualifier"
label define agetxt_lab 1 "Minutes" 2 "Hours" 3 "Days" 4 "Weeks" 5 "Months" 6 "Years" 99 "ND", modify
label values agetxt agetxt_lab

** (15) nrnnd: 1=Yes 2=No
label var nrnnd "Is National ID # documented?"

** (16) nrn: dob-####, partial missing=dob-9999, if missing=.
label var nrn "National ID #"
format nrn %15.0g

** (17) mstatus: 1=Single 2=Married 3=Separated/Divorced 4=Widowed/Widow/Widower 99=ND
label var mstatus "Marital Status"
label define mstatus_lab 1 "Single" 2 "Married" 3 "Separated/Divorced" 4 "Widowed/Widow/Widower" 99 "ND", modify
label values mstatus mstatus_lab

** (18) occu: Text, if missing=99
label var occu "Occupation"

** (19) durationnum: Integer - min=0, max=99, if missing=99
label var durationnum "Duration of Illness"

** (20) durationtxt
label var durationtxt "Duration Qualifier"
label define durationtxt_lab 1 "Days" 2 "Weeks" 3 "Months" 4 "Years" 99 "ND", modify
label values durationtxt durationtxt_lab

** (21) dod: Y-M-D
format dod %tdCCYY-NN-DD
label var dod "Date of Death"

** (22) dodyear (not included in single year Redcap db but done for multi-year Redcap db)
//gen int dodyear=year(dod)
label var dodyear "Year of Death"

** (23) cod1a: Text, if missing=99
label var cod1a "COD 1a"

** (24) onsetnumcod1a: Integer - min=0, max=99, if missing=99
label var onsetnumcod1a "Onset Death Interval-COD 1a"

** (25) onsettxtcod1a: 1=DAYS 2=WEEKS 3=MONTHS 4=YEARS
label var onsettxtcod1a "Onset Qualifier-COD 1a"
label define onsettxtcod1a_lab 1 "Days" 2 "Weeks" 3 "Months" 4 "Years" 99 "ND", modify
label values onsettxtcod1a onsettxtcod1a_lab

** (26) cod1b: Text, if missing=99
label var cod1b "COD 1b"

** (27) onsetnumcod1b: Integer - min=0, max=99, if missing=99
label var onsetnumcod1b "Onset Death Interval-COD 1b"

** (28) onsettxtcod1b: 1=DAYS 2=WEEKS 3=MONTHS 4=YEARS
label var onsettxtcod1b "Onset Qualifier-COD 1b"
label define onsettxtcod1b_lab 1 "Days" 2 "Weeks" 3 "Months" 4 "Years" 99 "ND", modify
label values onsettxtcod1b onsettxtcod1b_lab

** (29) cod1c: Text, if missing=99
label var cod1c "COD 1c"

** (30) onsetnumcod1c: Integer - min=0, max=99, if missing=99
label var onsetnumcod1c "Onset Death Interval-COD 1c"

** (31) onsettxtcod1c: 1=DAYS 2=WEEKS 3=MONTHS 4=YEARS
label var onsettxtcod1c "Onset Qualifier-COD 1c"
label define onsettxtcod1c_lab 1 "Days" 2 "Weeks" 3 "Months" 4 "Years" 99 "ND", modify
label values onsettxtcod1c onsettxtcod1c_lab

** (32) cod1d: Text, if missing=99
label var cod1d "COD 1d"

** (33) onsetnumcod1d: Integer - min=0, max=99, if missing=99
label var onsetnumcod1d "Onset Death Interval-COD 1d"

** (34) onsettxtcod1d: 1=DAYS 2=WEEKS 3=MONTHS 4=YEARS
label var onsettxtcod1d "Onset Qualifier-COD 1d"
label define onsettxtcod1d_lab 1 "Days" 2 "Weeks" 3 "Months" 4 "Years" 99 "ND", modify
label values onsettxtcod1d onsettxtcod1d_lab

** (35) cod2a: Text, if missing=99
label var cod2a "COD 2a"

** (36) onsetnumcod2a: Integer - min=0, max=99, if missing=99
label var onsetnumcod2a "Onset Death Interval-COD 2a"

** (37) onsettxtcod2a: 1=DAYS 2=WEEKS 3=MONTHS 4=YEARS
label var onsettxtcod2a "Onset Qualifier-COD 2a"
label define onsettxtcod2a_lab 1 "Days" 2 "Weeks" 3 "Months" 4 "Years" 99 "ND", modify
label values onsettxtcod2a onsettxtcod2a_lab

** (38) cod2b: Text, if missing=99
label var cod2b "COD 2b"

** (39) onsetnumcod2b: Integer - min=0, max=99, if missing=99
label var onsetnumcod2b "Onset Death Interval-COD 2b"

** (40) onsettxtcod2b: 1=DAYS 2=WEEKS 3=MONTHS 4=YEARS
label var onsettxtcod2b "Onset Qualifier-COD 2b"
label define onsettxtcod2b_lab 1 "Days" 2 "Weeks" 3 "Months" 4 "Years" 99 "ND", modify
label values onsettxtcod2b onsettxtcod2b_lab

** (41) pod: Text, if missing=99
label var pod "Place of Death"

** (42) deathparish
label var deathparish "Death Parish"
label define deathparish_lab 1 "Christ Church" 2 "St. Andrew" 3 "St. George" 4 "St. James" 5 "St. John" 6 "St. Joseph" ///
						7 "St. Lucy" 8 "St. Michael" 9 "St. Peter" 10 "St. Philip" 11 "St. Thomas" 99 "ND", modify
label values deathparish deathparish_lab

** (43) regdate: Y-M-D
label var regdate "Date of Registration"
format regdate %tdCCYY-NN-DD

** (44) certifier: Text, if missing=99
label var certifier "Name of Certifier"

** (45) certifieraddr: Text, if missing=99
label var certifieraddr "Address of Certifier"

** (46) namematch: readonly
label var namematch "Name Match"
label define namematch_lab 1 "names match but different person" 2 "no name match", modify
label values namematch namematch_lab

** (47) death_certificate_complete (auto-generated by REDCap): 0=Incomplete 1=Unverified 2=Complete
rename death_certificate_complete recstatdc
label var recstatdc "Record Status-DC Form"
label define recstatdc_lab 0 "Incomplete" 1 "Unverified" 2 "Complete", modify
label values recstatdc recstatdc_lab


*******************
** TRACKING FORM **
*******************

** (48) tfdddoa: Y-M-D H:M, readonly
replace tfdddoa = rtrim(ltrim(itrim(tfdddoa))) //30 changes
generate tfdddoa2=date(tfdddoa,"MDY")
format tfdddoa2 %tdYYYY-NN-DD
drop tfdddoa
rename tfdddoa2 tfdddoa
label var tfdddoa "TF Date-Start"

** (49) tfdddoatstart: HH:MM
format tfdddoatstart %tcHH:MM
label var tfdddoatstart "TF Time-Start"

** (50) tfddda: readonly, user logged into redcap
gen tfddda1=.
replace tfddda1=25 if tfddda=="ashley.henry" //using codebook tfddda to see all possible entries in this field
replace tfddda1=25 if tfddda=="ashleyhenry"
replace tfddda1=4 if tfddda=="karen.greene"
replace tfddda1=13 if tfddda=="kirt.gill"
replace tfddda1=20 if tfddda=="nicolette.roachford"
replace tfddda1=14 if tfddda=="tamisha.hunte"
replace tfddda1=98 if tfddda=="t.g"
replace tfddda1=98 if tfddda=="thelema.grannum"
replace tfddda1=98 if tfddda=="ivanna.bascombe"
replace tfddda1=98 if tfddda=="ib"
replace tfddda1=98 if tfddda=="asia.blackman"
replace tfddda1=98 if tfddda=="ab"
replace tfddda1=98 if tfddda=="shay.morrisdoty"
replace tfddda1=98 if tfddda=="bnr.intern"
rename tfddda tfddda2
rename tfddda1 tfddda

label var tfddda "TF DA"
label define tfddda_lab 4 "KG" 13 "KWG" 14 "TH" 20 "NR" 25 "AH" 98 "intern", modify
label values tfddda tfddda_lab

** (51) tfregnumstart: integer
label var tfregnumstart "Registry #-Start"

** (52) tfdistrictstart: letters only
label var tfdistrictstart "District-Start"

** (53) tfregnumend: integer
label var tfregnumend "Registry #-End"

** (54) tfdistrictend: letters only
label var tfdistrictend "District-End"

** (55) tfdddoaend: Y-M-D
format tfdddoaend %tdCCYY-NN-DD
label var tfdddoaend "TF Date-End"

** (56) tfdddoatend: HH:MM
format tfdddoatend %tcHH:MM
label var tfdddoatend "TF Time-End"

** (57) tfddelapsedh: integer (imported to Stata as byte)
recast int tfddelapsedh
label var tfddelapsedh "Time Elpased (hrs)"

** (58) tfddelapsedm: integer
label var tfddelapsedm "Time Elpased (mins)"

** (59) tfddtxt
label var tfddtxt "TF Comments"

** (60) tracking_complete (auto-generated by REDCap): 0=Incomplete 1=Unverified 2=Complete
rename tracking_complete recstattf
label var recstattf "Record Status-TF Form"
label define recstattf_lab 0 "Incomplete" 1 "Unverified" 2 "Complete", modify
label values recstattf recstattf_lab

order record_id event dddoa ddda odda certtype regnum district pname address parish sex ///
      age agetxt nrnnd nrn mstatus occu durationnum durationtxt dod dodyear ///
      cod1a onsetnumcod1a onsettxtcod1a cod1b onsetnumcod1b onsettxtcod1b ///
      cod1c onsetnumcod1c onsettxtcod1c cod1d onsetnumcod1d onsettxtcod1d ///
      cod2a onsetnumcod2a onsettxtcod2a cod2b onsetnumcod2b onsettxtcod2b ///
      pod deathparish regdate certifier certifieraddr namematch recstatdc ///
      tfdddoa tfdddoatstart tfddda tfregnumstart tfdistrictstart tfregnumend tfdistrictend ///
	  tfdddoaend tfdddoatend tfddelapsedh tfddelapsedm tfddtxt recstattf

count //

label data "BNR MORTALITY data 2008-2020"
notes _dta :These data prepared from BB national death register & Redcap deathdata database
save "`datapath'\version02\3-output\2008-2020_deaths_tf" ,replace
note: TS The tracking form data is included in this dataset

**********************
**     Preparing    **
**    2016, 2017,   **
**    2018, 2019    **
**      Deaths      **
**********************
** Next we get rid of those who died pre-2016
drop if dod<d(01jan2016) & dod>d(31dec2019) // deleted (removed 2020 deaths as that year still incomplete as of 03mar2021)
** Remove Tracking Form info
drop if event==2 // deleted

count //

*****************
**  Formatting **
**    Names    **
*****************
rename namematch nm

** Need to check for duplicate death registrations
** First split full name into first, middle and last names
** Also - code to split full name into 2 variables fname and lname - else can't merge! 
split pname, parse(", "" ") gen(name)
order record_id pname name*
sort record_id

** Use Stata browse to view results as changes are made
** (1) sort cases that contain only a first name and a last name
count if name7=="" & name6=="" & name5=="" & name4=="" & name3=="" //3676
count if name6=="" & name5=="" & name4=="" & name3=="" //3676
count if name5=="" & name4=="" & name3=="" //3676
count if name4=="" & name3=="" & name2=="" //2
count if name3=="" & name2=="" //2
count if name2=="" //2
count if name1=="" //0
replace name5=name2 if name5=="" & name3=="" & name4=="" //
replace name2="" if name3=="" & name4=="" //

** (2) sort cases with name 'baby' or 'b/o' in name1 variable
count if (regexm(name1,"BABY")|regexm(name1,"B/O")|regexm(name1,"MALE")|regexm(name1,"FEMALE")) //16
gen tempvarn=1 if (regexm(name1,"BABY")|regexm(name1,"B/O")|regexm(name1,"MALE")|regexm(name1,"FEMALE"))
//list record_id pname name1 name2 name3 name4 name5 if tempvarn==1
//list record_id pname name6 name7 if tempvarn==1
replace name1=name1+" "+name2 if tempvarn==1 & (record_id!=24442 & record_id!=25511 & record_id!=26692 & record_id!=26885) //11 changes
replace name1=name1+" "+name3 if record_id==24336
replace name2="" if name2=="OF" //11 changes
replace name2=name3 if tempvarn==1 & (record_id!=24442 & record_id!=25511 & record_id!=26692 & record_id!=26885) //11 changes
replace name3=name4 if tempvarn==1 & name4!="" & (record_id!=24442 & record_id!=25511 & record_id!=26692 & record_id!=26885 & record_id!=24008 & record_id!=26692) //11 changes
replace name2=name3 if record_id==24336
replace name3=name5 if record_id==24336
replace name2=name2+" "+name4+" "+name5 if record_id==24008
replace name3=name6 if record_id==24008
replace name2=name2+" "+name5+" "+name6+" "+name7 if record_id==26406
replace name2=name2+" "+name4+" "+name5+" "+name6 if record_id==26692
replace name4="" if tempvarn==1 //13 changes
replace name5="" if tempvarn==1 //4 changes
replace name6="" if tempvarn==1 //3 changes
replace name7="" if tempvarn==1 //1 change

** (3) sort cases with name in name6 variable
count if name6!="" //1
//list record_id *name* if name6!=""
replace name7=name2 if record_id==25050
replace name2=name3+" "+name4+" "+name5+" "+name6 if record_id==25050
replace name3=name7 if record_id==25050
replace name4="" if record_id==25050
replace name5="" if record_id==25050
replace name6="" if record_id==25050
replace name7="" if record_id==25050

** (4) sort cases with name in name5 variable
count if name5!="" //3678
//list record_id *name* if name5!=""
replace name2=name2+" "+name3+" "+name4 if record_id==23269|record_id==24056
replace name3="" if record_id==23269|record_id==24056
replace name4="" if record_id==23269|record_id==24056
replace name2=name2+" "+name3+name4 if record_id==25248
replace name1=name1+"."+name2 if record_id==22814
replace name2=name3+"."+name4 if record_id==22814
replace name4="" if record_id==22814|record_id==25248
replace name3=name5 if name5!="" //3678 changes
replace name5="" if name5!="" //3678 changes

** (5)
** Names containing 'ST' are being interpreted as 'ST'=name1/fname so correct
count if name1=="ST" | name1=="ST." //6
replace tempvarn=2 if name1=="ST" | name1=="ST."
//list record_id pname name1 name2 name5 if tempvarn==2
replace name1=name1+"."+""+name2 if tempvarn==2 //6 changes
replace name2="" if tempvarn==2 //6 changes
replace name2=name3 if record_id==24517
replace name3=name4 if record_id==24517
replace name4="" if record_id==24517
replace name1 = subinstr(name1, ".", "",1) if record_id==24517|record_id==24774
** Names containing 'ST' are being interpreted as 'ST'=name2/fname so correct
count if name2=="ST" | name2=="ST." //21
replace tempvarn=3 if name2=="ST" | name2=="ST."
replace name2=name2+"."+""+name3 if tempvarn==3 //21 changes
replace name2 = subinstr(name2, ".", "",1) if record_id==24127|record_id==25166|record_id==25420|record_id==25984|record_id==26481|record_id==26593
replace name3="" if tempvarn==3 //21 changes
replace name3=name4 if tempvarn==3 //17 changes
replace name4="" if tempvarn==3 //17 changes
replace name3=name2 if tempvarn==3 & name3=="" //4 changes
replace name2="" if tempvarn==3 & name2==name3
** Names containing 'ST' are being interpreted as 'ST'=name3/fname so correct
count if name3=="ST" | name3=="ST." //3
replace tempvarn=4 if name3=="ST" | name3=="ST."
replace name3=name3+"."+""+name4 if tempvarn==4 //3 changes
replace name4="" if tempvarn==4 //3 changes

** (6) sort cases with name in name4 variable
count if name4!="" //69
//list record_id *name* if name4!=""
replace name2=name2+" "+name3 if name4!="" //69 changes
replace name3=name4 if name4!="" //69 changes
replace name4="" if name4!="" //69 changes

** (7) sort cases with NO name in name3 variable
count if name3=="" //2
//list record_id *name* if name3==""
replace name3=substr(name1,6,11) if record_id==25303
replace name1=substr(name1,1,5) if record_id==25303
replace name3=substr(name1,8,7) if record_id==25414
replace name2=substr(name1,7,1) if record_id==25414
replace name1=substr(name1,1,6) if record_id==25414

** (8) sort cases with suffixes
count if (name3!="" & name3!="99") & length(name3)<4 //49 - 2 need correcting
replace tempvarn=5 if (name3!="" & name3!="99") & length(name3)<4
//list record_id pname fname mname lname if (lname!="" & lname!="99") & length(lname)<3
drop if record_id==24108 //1 deleted - same as record_id=24107
replace name3=name2+" "+name3 if record_id==24107
replace name2="" if record_id==24107

** Now rename, check and remove unnecessary variables
rename name1 fname
rename name2 mname
rename name3 lname
count if fname=="" //0
count if lname=="" //0
drop name4 name5 name6 name7 tempvarn

** Convert names to lower case and strip possible leading/trailing blanks
replace fname = lower(rtrim(ltrim(itrim(fname)))) //5056 changes
replace mname = lower(rtrim(ltrim(itrim(mname)))) //1369 changes
replace lname = lower(rtrim(ltrim(itrim(lname)))) //5056 changes

rename nm namematch
order record_id pname fname mname lname namematch

*************************
** Checking & Removing ** 
**   Duplicate Death   **
**    Registrations    **
*************************
/* 
NB: These deaths were cleaned previously for importing into DeathData REDCapdb 
so the field namematch can be used as a guide for checking duplicates
	1=names match but different person
	2=no name match
*/
//label define namematch_lab 1 "deaths only namematch,diff.pt" 2 "no namematch" 3 "cr5 & death namematch,diff.pt" 4 "slc=2/9,not in deathdata", modify
//label values namematch namematch_lab
sort lname fname record_id
quietly by lname fname : gen dupname = cond(_N==1,0,_n)
sort lname fname record_id
count if dupname>0 //932
/* 
Check below list for cases where namematch=no match but 
there is a pt with same name then:
 (1) check if same pt and remove duplicate pt;
 (2) check if same name but different pt and
	 update namematch variable to reflect this, i.e.
	 namematch=1
*/
//list record_id namematch fname lname nrn dod sex age if dupname>0
drop if record_id==26532 //1 deleted - duplicate registration for record_id=26283
drop if record_id==25379 //1 deleted - duplicate registration for record_id=26481
replace namematch=1 if dupname>0 //106 changes

preserve
drop if nrn==.
sort nrn 
quietly by nrn : gen dupnrn = cond(_N==1,0,_n)
sort nrn record_id lname fname
count if dupnrn>0 //4
list record_id namematch fname lname nrn dod sex age if dupnrn>0
replace namematch=1 if dupnrn>0 //3 changes
restore

** Final check for duplicates by name and dod 
sort lname fname dod
quietly by lname fname dod: gen dupdod = cond(_N==1,0,_n)
sort lname fname dod record_id
count if dupdod>0 //2 - diff.pt & namematch already=1
list record_id namematch fname lname nrn dod sex age if dupdod>0
count if dupdod>0 & namematch!=1 //0

count //5054

** Now generate a new variable which will select out all the potential cancers
gen cancer=.
label define cancer_lab 1 "cancer" 2 "not cancer", modify
label values cancer cancer_lab
label var cancer "cancer diagnoses"
label var record_id "Event identifier for registry deaths"

** searching cod1a for these terms
replace cod1a="99" if cod1a=="999" //0 changes
replace cod1b="99" if cod1b=="999" //28 changes
replace cod1c="99" if cod1c=="999" //45 changes
replace cod1d="99" if cod1d=="999" //56 changes
replace cod2a="99" if cod2a=="999" //45 changes
replace cod2b="99" if cod2b=="999" //54 changes
count if cod1c!="99" //567
count if cod1d!="99" //132
count if cod2a!="99" //1005
count if cod2b!="99" //462
//ssc install unique
//ssc install distinct
** Create variable with combined CODs
gen coddeath=cod1a+" "+cod1b+" "+cod1c+" "+cod1d+" "+cod2a+" "+cod2b
replace coddeath=subinstr(coddeath,"99 ","",.) //4990
replace coddeath=subinstr(coddeath," 99","",.) //4591
** Identify cancer deaths using variable called 'cancer'
replace cancer=1 if regexm(coddeath, "CANCER") & cancer==. //719 changes
replace cancer=1 if regexm(coddeath, "TUMOUR") &  cancer==. //25 changes
replace cancer=1 if regexm(coddeath, "TUMOR") &  cancer==. //21 changes
replace cancer=1 if regexm(coddeath, "MALIGNANT") &  cancer==. //16 changes
replace cancer=1 if regexm(coddeath, "MALIGNANCY") &  cancer==. //65 changes
replace cancer=1 if regexm(coddeath, "NEOPLASM") &  cancer==. //3 changes
replace cancer=1 if regexm(coddeath, "CARCINOMA") &  cancer==. //333 changes
replace cancer=1 if regexm(coddeath, "CARCIMONA") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "CARINOMA") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "MYELOMA") &  cancer==. //43 changes
replace cancer=1 if regexm(coddeath, "LYMPHOMA") &  cancer==. //24 changes
replace cancer=1 if regexm(coddeath, "LYMPHOMIA") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "LYMPHONA") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "SARCOMA") &  cancer==. //20 changes
replace cancer=1 if regexm(coddeath, "TERATOMA") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "LEUKEMIA") &  cancer==. //24 changes
replace cancer=1 if regexm(coddeath, "LEUKAEMIA") &  cancer==. //5 changes
replace cancer=1 if regexm(coddeath, "HEPATOMA") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "CARANOMA PROSTATE") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "MENINGIOMA") &  cancer==. //3 changes
replace cancer=1 if regexm(coddeath, "MYELOSIS") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "MYELOFIBROSIS") &  cancer==. //1 change
replace cancer=1 if regexm(coddeath, "CYTHEMIA") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "CYTOSIS") &  cancer==. //1 change
replace cancer=1 if regexm(coddeath, "BLASTOMA") &  cancer==. //5 changes
replace cancer=1 if regexm(coddeath, "METASTATIC") &  cancer==. //10 changes
replace cancer=1 if regexm(coddeath, "MASS") &  cancer==. //40 changes
replace cancer=1 if regexm(coddeath, "METASTASES") &  cancer==. //2 changes
replace cancer=1 if regexm(coddeath, "METASTASIS") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "REFRACTORY") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "FUNGOIDES") &  cancer==. //2 change
replace cancer=1 if regexm(coddeath, "HODGKIN") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "MELANOMA") &  cancer==. //1 change
replace cancer=1 if regexm(coddeath,"MYELODYS") &  cancer==. //3 changes
//replace cancer=1 if regexm(coddeath,"GLIOMA") &  cancer==. //add in for next dc year

** Strip possible leading/trailing blanks in cod1a
replace coddeath = rtrim(ltrim(itrim(coddeath))) //0 changes

tab cancer, missing

drop dodyear
gen dodyear=year(dod)
tab dodyear cancer,m

** Check that all cancer CODs for 2014 are eligible
sort coddeath record_id
order record_id coddeath
//list coddeath if cancer==1 & inrange(record_id, 0, 24000)
** 588
//list coddeath if cancer==1 & inrange(record_id, 24001, 27000)
** 778

** Replace 2014 cases that are not cancer according to eligibility SOP:
/*
	(1) After merge with CR5 data then may need to reassign some of below 
		deaths as CR5 data may indicate eligibility while COD may exclude
		(e.g. see record_id==15458)
	(2) use obsid to check for CODs that incomplete in Results window with 
		Data Editor in browse mode-copy and paste record_id below from here
*/
replace cancer=2 if ///
record_id==23197|record_id==21945|record_id==22224|record_id==23208|record_id==23685| ///
record_id==22399|record_id==23068|record_id==22940|record_id==22575|record_id==21804| ///
record_id==23447|record_id==23179|record_id==23873|record_id==22514|record_id==25364| ///
record_id==24032|record_id==25675|record_id==24989|record_id==24752|record_id==25574| ///
record_id==25452|record_id==26634|record_id==25561|record_id==25157|record_id==26562| ///
record_id==26409|record_id==26124|record_id==25031|record_id==25968|record_id==26711| ///
record_id==25255|record_id==25660|record_id==26127|record_id==25258|record_id==24452| ///
record_id==24874|record_id==24536|record_id==25092|record_id==24583|record_id==24077| ///
record_id==24244|record_id==24525|record_id==25640|record_id==24440|record_id==24589| ///
record_id==24383|record_id==25916|record_id==24409|record_id==25385|record_id==24361| ///
record_id==24510|record_id==24786|record_id==26219|record_id==26376|record_id==24168| ///
record_id==24921|record_id==25012|record_id==26129|record_id==24164|record_id==26673| ///
record_id==26553|record_id==26795|record_id==24237|record_id==25772|record_id==25152| ///
record_id==24736|record_id==24394
replace coddeath=subinstr(coddeath,"GLIORRIA","GLIOMA",.) //1 change
//67 changes

** Check that all 2014 CODs that are not cancer for eligibility
tab dodyear cancer,m
count if cancer==. & inrange(record_id, 0, 23000) //873
count if cancer==. & inrange(record_id, 23001, 24000) //761
count if cancer==. & inrange(record_id, 24001, 2000) //725
//list coddeath if cancer==. & inrange(record_id, 0, 24000)
//list coddeath if cancer==. & inrange(record_id, 24001, 27000)

** No updates needed from above list
/*
replace cancer=1 if ///
record_id==|record_id==|record_id==|record_id==|record_id==| ///
*/

replace cancer=2 if cancer==. //3688 changes

** Create cod variable 
gen cod=.
label define cod_lab 1 "Dead of cancer" 2 "Dead of other cause" 3 "Not known" 4 "NA", modify
label values cod cod_lab
label var cod "COD categories"
replace cod=1 if cancer==1 //1299 changes
replace cod=2 if cancer==2 //3755 changes
** one unknown causes of death in 2014 data - record_id 12323
replace cod=3 if coddeath=="99"|(regexm(coddeath,"INDETERMINATE")|regexm(coddeath,"UNDETERMINED")) //42 changes

** Change sex to match cancer dataset
tab sex ,m
rename sex sex_old
gen sex=1 if sex_old==2 //2467 changes
replace sex=2 if sex_old==1 //2587 changes
drop sex_old
label define sex_lab 1 "Female" 2 "Male", modify
label values sex sex_lab
label var sex "Sex"
tab sex ,m

** Remove, relabel certain variables for merging with cancer ds
gen dds2dod=dod
format dds2dod %tdCCYY-NN-DD

order record_id regnum nrn pname fname lname sex age dod cancer cod1a addr parish pod

label data "BNR MORTALITY data 2017-2018"
notes _dta :These data prepared from BB national death register & Redcap deathdata database
save "`datapath'\version02\3-output\2017-2018_deaths_for_matchingV02" ,replace
note: TS This dataset can be used for matching 2017, 2018 deaths with incidence data

rename regnum dds2regnum 
rename pname dds2pname 
rename age dds2age 
rename cancer dds2cancer 
rename cod1a dds2cod1a 
rename address dds2address 
rename parish dds2parish 
rename pod dds2pod 
rename coddeath dds2coddeath
rename mname dds2mname 
rename namematch dds2namematch 
rename event dds2event 
rename dddoa dds2dddoa 
rename ddda dds2ddda 
rename odda dds2odda 
rename certtype dds2certtype 
rename district dds2district 
rename agetxt dds2agetxt 
rename nrnnd dds2nrnnd
rename mstatus dds2mstatus 
rename occu dds2occu 
rename durationnum dds2durationnum 
rename durationtxt dds2durationtxt 
rename onsetnumcod1a dds2onsetnumcod1a 
rename onsettxtcod1a dds2onsettxtcod1a 
rename cod1b dds2cod1b
rename onsetnumcod1b dds2onsetnumcod1b 
rename onsettxtcod1b dds2onsettxtcod1b 
rename cod1c dds2cod1c 
rename onsetnumcod1c dds2onsetnumcod1c 
rename onsettxtcod1c dds2onsettxtcod1c 
rename cod1d dds2cod1d 
rename onsetnumcod1d dds2onsetnumcod1d
rename onsettxtcod1d dds2onsettxtcod1d 
rename cod2a dds2cod2a 
rename onsetnumcod2a dds2onsetnumcod2a 
rename onsettxtcod2a dds2onsettxtcod2a 
rename cod2b dds2cod2b 
rename onsetnumcod2b dds2onsetnumcod2b 
rename onsettxtcod2b dds2onsettxtcod2b
rename deathparish dds2deathparish 
rename regdate dds2regdate 
rename certifier dds2certifier 
rename certifieraddr dds2certifieraddr 
rename recstatdc dds2recstatdc 
rename tfdddoa dds2tfdddoa 
rename tfddda dds2tfddda 
rename tfregnumstart dds2tfregnumstart
rename tfdistrictstart dds2tfdistrictstart 
rename tfregnumend dds2tfregnumend 
rename tfdistrictend dds2tfdistrictend 
rename tfddtxt dds2tfddtxt 
rename recstattf dds2recstattf 
rename duprec dds2duprec 
rename dupname dds2dupname 
rename dupdod dds2dupdod
rename dodyear dds2dodyear 
rename cod dds2cod

/*    
label copy recstattf_lab dds2recstattf_lab       
label copy tfddda_lab dds2tfddda_lab
label copy recstatdc_lab dds2recstatdc_lab
label copy namematch_lab dds2namematch_lab
label copy deathparish_lab dds2deathparish_lab
label copy onsettxtcod2b_lab dds2onsettxtcod2b_lab
label copy onsettxtcod2a_lab dds2onsettxtcod2a_lab
label copy onsettxtcod1d_lab dds2onsettxtcod1d_lab
label copy onsettxtcod1c_lab dds2onsettxtcod1c_lab
label copy onsettxtcod1b_lab dds2onsettxtcod1b_lab
label copy onsettxtcod1a_lab dds2onsettxtcod1a_lab
label copy durationtxt_lab dds2durationtxt_lab
label copy mstatus_lab dds2mstatus_lab
label copy agetxt_lab dds2agetxt_lab
label copy parish_lab dds2parish_lab
label copy district_lab dds2district_lab
label copy certtype_lab dds2certtype_lab
label copy ddda_lab dds2ddda_lab
label copy event_lab dds2event_lab
label copy cancer_lab dds2cancer_lab
label copy cod_lab dds2cod_lab
label copy sex_lab dds2sex_lab

label drop recstattf_lab
label drop tfddda_lab
label drop recstatdc_lab
label drop namematch_lab
label drop deathparish_lab
label drop onsettxtcod2b_lab
label drop onsettxtcod2a_lab
label drop onsettxtcod1d_lab
label drop onsettxtcod1c_lab
label drop onsettxtcod1b_lab
label drop onsettxtcod1a_lab
label drop durationtxt_lab
label drop mstatus_lab
label drop agetxt_lab
label drop parish_lab
label drop district_lab
label drop certtype_lab
label drop ddda_lab
label drop event_lab
label drop cancer_lab
label drop cod_lab
label drop sex_lab
*/
label data "BNR MORTALITY data 2017-2018"
notes _dta :These data prepared from BB national death register & Redcap deathdata database
save "`datapath'\version02\3-output\2017-2018_deaths_for_matching" ,replace
note: TS This dataset can be used for matching 2017, 2018 deaths with incidence data

clear

***********************
**     Preparing     **
** 	  2015 Deaths    **
***********************
use "`datapath'\version02\3-output\2008-2018_deaths_tf" ,clear
/*
This dataset preparation differs from above (2017-2018) in below ways:
 (1) 2017-2018 ds used for matching with cancer ds for survival analysisas
 (2) 2015 ds used for reporting on ASMR (age-standardized mortality rates)
	 - need to identify deaths with multiple eligible cancer CODs
	 - need to assign each death by site as ASMR reported by site 
*/
** Next we get rid of those who died pre-2017 (there are previously unmatched 2017 cases in dataset)
drop if dod<d(01jan2015) | dod>d(31dec2015) //21778 deleted
** Remove Tracking Form info
drop if event==2 //0 deleted

count //2494

*****************
**  Formatting **
**    Names    **
*****************
** Change variables that contain 'name' so that names can be easily parsed
rename namematch nm

** Need to check for duplicate death registrations
** First split full name into first, middle and last names
** Also - code to split full name into 2 variables fname and lname - else can't merge! 
split pname, parse(", "" ") gen(name)
order record_id pname name*
sort record_id

** Use Stata browse to view results as changes are made
** (1) sort cases that contain only a first name and a last name
count if name5=="" & name4=="" & name3=="" //1767
count if name4=="" & name3=="" & name2=="" //0
count if name3=="" & name2=="" //0
count if name2=="" //0
count if name1=="" //0
replace name5=name2 if name5=="" & name3=="" & name4=="" //1767
replace name2="" if name3=="" & name4=="" //1767

** (2) sort cases with name 'baby' or 'b/o' in name1 variable
count if (regexm(name1,"BABY")|regexm(name1,"B/O")|regexm(name1,"MALE")|regexm(name1,"FEMALE")) //8
gen tempvarn=1 if (regexm(name1,"BABY")|regexm(name1,"B/O")|regexm(name1,"MALE")|regexm(name1,"FEMALE"))
//list record_id pname name1 name2 name3 name4 name5 if tempvarn==1
//list record_id pname name6 name7 if tempvarn==1
replace name1=name1+" "+name2 if tempvarn==1 //8 changes
replace name2="" if tempvarn==1 //8 changes
replace name1=name1+" "+name3 if tempvarn==1 & name4!="" //6 changes
replace name3=name4 if tempvarn==1 & name4!="" //6 changes
replace name4="" if tempvarn==1 & name4!="" //6 changes
drop if record_id==17407 //duplicate registration

** (3)
** Names containing 'ST' are being interpreted as 'ST'=name1/fname so correct
count if name1=="ST" | name1=="ST." //3
replace tempvarn=2 if name1=="ST" | name1=="ST." //3 changes
//list record_id pname name1 name2 name5 if tempvarn==2
replace name1=name1+"."+""+name2 if tempvarn==2 //3 changes
replace name2="" if tempvarn==2 //6 changes
replace name2=name3+" "+name4 if record_id==18395
replace name3=name5 if record_id==18395
replace name4="" if record_id==18395
replace name5="" if record_id==18395
replace name1 = subinstr(name1, ".", "",1) if record_id==16807
** Names containing 'ST' are being interpreted as 'ST'=name2/fname so correct
count if name2=="ST" | name2=="ST." //12
replace tempvarn=3 if name2=="ST" | name2=="ST." //12 changes
replace name3=name2+name3 if tempvarn==3 & name4=="" //3 changess
replace name2="" if tempvarn==3 & name4=="" //3 changess
replace name2=name2+"."+""+name3 if tempvarn==3 & name4!="" //9 changes
replace name2 = subinstr(name2, ".", "",1) if tempvarn==3 & record_id==17454|record_id==18739
replace name3=name4 if tempvarn==3 & name4!="" //9 changes
replace name4="" if tempvarn==3 //21 changes
** Names containing 'ST' are being interpreted as 'ST'=name3/fname so correct
count if name3=="ST" | name3=="ST." //3
replace tempvarn=4 if name3=="ST" | name3=="ST."
replace name3=name3+"."+""+name4 if tempvarn==4 //3 changes
replace name4="" if tempvarn==4 //3 changes
replace name3 = subinstr(name3, ".", "",1) if tempvarn==4 & record_id==17658|record_id==17863

** (4) sort cases with name in name5 variable
count if name5!="" //1768
count if name5!="" & name4=="" & name3=="" //1767
count if name5!="" & name4!="" & name3!="" //1
//list record_id *name* if name5!=""
replace name2=name2+" "+name3+" "+name4 if record_id==18380
replace name3=name5 if record_id==18380
replace name5="" if record_id==18380
replace name4="" if record_id==18380
replace name3=name5 if name5!="" & name4=="" & name3=="" //1767 chagnes
replace name5="" if name3!="" & name4=="" //1767 changes

** (6) sort cases with name in name4 variable
count if name4!="" //45
//list record_id *name* if name4!=""
replace name2=name2+" "+name3 if name4!="" //45 changes
replace name3=name4 if name4!="" //45 changes
replace name4="" if name4!="" //45 changes

** (7) sort cases with NO name in name3 variable
count if name3=="" //0
//list record_id *name* if name3==""

** (8) sort cases with suffixes
count if (name3!="" & name3!="99") & length(name3)<4 //17 - 1 needs correcting
replace tempvarn=5 if (name3!="" & name3!="99") & length(name3)<4 //17 changes
//list record_id pname fname mname lname if (lname!="" & lname!="99") & length(lname)<3
replace name3=name2+" "+name3 if record_id==18039
replace name2="" if record_id==18039

** Now rename, check and remove unnecessary variables
rename name1 fname
rename name2 mname
rename name3 lname
count if fname=="" //0
count if lname=="" //0
drop name4 name5 tempvarn

** Convert names to lower case and strip possible leading/trailing blanks
replace fname = lower(rtrim(ltrim(itrim(fname)))) //2493 changes
replace mname = lower(rtrim(ltrim(itrim(mname)))) //713 changes
replace lname = lower(rtrim(ltrim(itrim(lname)))) //2493 changes

rename nm namematch
order record_id pname fname mname lname namematch

*************************
** Checking & Removing ** 
**   Duplicate Death   **
**    Registrations    **
*************************
/* 
NB: These deaths were cleaned previously for importing into DeathData REDCapdb 
so the field namematch can be used as a guide for checking duplicates
	1=names match but different person
	2=no name match
*/
//label define namematch_lab 1 "deaths only namematch,diff.pt" 2 "no namematch" 3 "cr5 & death namematch,diff.pt" 4 "slc=2/9,not in deathdata", modify
//label values namematch namematch_lab
sort lname fname record_id
quietly by lname fname : gen dupname = cond(_N==1,0,_n)
sort lname fname record_id
count if dupname>0 //51
/* 
Check below list for cases where namematch=no match but 
there is a pt with same name then:
 (1) check if same pt and remove duplicate pt;
 (2) check if same name but different pt and
	 update namematch variable to reflect this, i.e.
	 namematch=1
*/
//list record_id namematch fname lname nrn dod sex age if dupname>0
sort record_id
drop if record_id==17986 //1 deleted - duplicate registration for record_id=17987
drop if record_id==17614 //1 deleted - duplicate registration for record_id=17613
replace deathparish=9 if record_id==17613
drop if record_id==18430 //1 deleted - duplicate registration for record_id=18431
replace sex=1 if record_id==18431
drop if record_id==17167 //1 deleted - duplicate registration for record_id=17166
drop if record_id==16871 //1 deleted - duplicate registration for record_id=16872
drop if record_id==18505 //1 deleted - duplicate registration for record_id=18504
drop if record_id==17862 //1 deleted - duplicate registration for record_id=17863
drop if record_id==17077 //1 deleted - duplicate registration for record_id=17078
drop if record_id==17064 //1 deleted - duplicate registration for record_id=17065
drop if record_id==18489 //1 deleted - duplicate registration for record_id=18490
replace agetxt=6 if record_id==18490
replace namematch=2 if record_id==18490
replace namematch=1 if record_id==18323|record_id==18343|record_id==19255|record_id==17135 /// 	 
						|record_id==17796|record_id==17000|record_id==17724	//8 changes

preserve
drop if nrn==.
sort nrn 
quietly by nrn : gen dupnrn = cond(_N==1,0,_n)
sort nrn record_id lname fname
count if dupnrn>0 //2
//list record_id namematch fname lname nrn dod sex age if dupnrn>0
restore
drop if record_id==18039 //1 deleted

** Final check for duplicates by name and dod 
sort lname fname dod
quietly by lname fname dod: gen dupdod = cond(_N==1,0,_n)
sort lname fname dod record_id
count if dupdod>0 //2 - diff.pt & namematch already=1
list record_id namematch fname lname nrn dod sex age if dupdod>0
count if dupdod>0 & namematch!=1 //0

count //2482

** Now generate a new variable which will select out all the potential cancers
gen cancer=.
label define cancer_lab 1 "cancer" 2 "not cancer", modify
label values cancer cancer_lab
label var cancer "cancer diagnoses"
label var record_id "Event identifier for registry deaths"

** searching cod1a for these terms
replace cod1a="99" if cod1a=="999" //0 changes
replace cod1b="99" if cod1b=="999" //0 changes
replace cod1c="99" if cod1c=="999" //0 changes
replace cod1d="99" if cod1d=="999" //0 changes
replace cod2a="99" if cod2a=="999" //0 changes
replace cod2b="99" if cod2b=="999" //0 changes
count if cod1c!="99" //0
count if cod1d!="99" //0
count if cod2a!="99" //0
count if cod2b!="99" //0
//ssc install unique
//ssc install distinct
** Create variable with combined CODs
gen coddeath=cod1a+" "+cod1b+" "+cod1c+" "+cod1d+" "+cod2a+" "+cod2b
replace coddeath=subinstr(coddeath,"99 ","",.) //2482
replace coddeath=subinstr(coddeath," 99","",.) //2482

** Identify cancer deaths using variable called 'cancer'
replace cancer=1 if regexm(coddeath, "CANCER") & cancer==. //297 changes
replace cancer=1 if regexm(coddeath, "TUMOUR") &  cancer==. //15 changes
replace cancer=1 if regexm(coddeath, "TUMOR") &  cancer==. //11 changes
replace cancer=1 if regexm(coddeath, "MALIGNANT") &  cancer==. //8 changes
replace cancer=1 if regexm(coddeath, "MALIGNANCY") &  cancer==. //20 changes
replace cancer=1 if regexm(coddeath, "NEOPLASM") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "CARCINOMA") &  cancer==. //200 changes
replace cancer=1 if regexm(coddeath, "CARCIMONA") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "CARINOMA") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "MYELOMA") &  cancer==. //23 changes
replace cancer=1 if regexm(coddeath, "LYMPHOMA") &  cancer==. //17 changes
replace cancer=1 if regexm(coddeath, "LYMPHOMIA") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "LYMPHONA") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "SARCOMA") &  cancer==. //5 changes
replace cancer=1 if regexm(coddeath, "TERATOMA") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "LEUKEMIA") &  cancer==. //5 changes
replace cancer=1 if regexm(coddeath, "LEUKAEMIA") &  cancer==. //2 changes
//replace cancer=1 if regexm(coddeath, "LUKAEMIA") &  cancer==. //discovered when checking lists below
//replace cancer=1 if regexm(coddeath, "LUKEMIA") &  cancer==. //discovered when checking lists below
//replace cancer=1 if regexm(coddeath, "ANAPLASTIC") &  cancer==. //discovered when checking lists below
//replace cancer=1 if regexm(coddeath, "CARCINOMIA") &  cancer==. //discovered when checking lists below
//replace cancer=1 if regexm(coddeath, "LYNPHOMA") &  cancer==. //discovered when checking lists below
//replace cancer=1 if regexm(coddeath, "MELOMA") &  cancer==. //discovered when checking lists below
//replace cancer=1 if regexm(coddeath, "GLIOBIASTOMA") &  cancer==. //discovered when checking lists below
//replace cancer=1 if regexm(coddeath, "SEZARY") &  cancer==. //discovered when checking lists below - include in future
//replace cancer=1 if regexm(coddeath, "MESOTHELIOMA") &  cancer==. //discovered when checking lists below - include in future
//replace cancer=1 if regexm(coddeath, "MYELODYP") &  cancer==. //discovered when checking lists below
replace cancer=1 if regexm(coddeath, "HEPATOMA") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "CARANOMA PROSTATE") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "MENINGIOMA") &  cancer==. //1 change
replace cancer=1 if regexm(coddeath, "MYELOSIS") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "MYELOFIBROSIS") &  cancer==. //1 change
replace cancer=1 if regexm(coddeath, "CYTHEMIA") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "CYTOSIS") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "BLASTOMA") &  cancer==. //3 changes
replace cancer=1 if regexm(coddeath, "METASTATIC") &  cancer==. //4 changes
replace cancer=1 if regexm(coddeath, "MASS") &  cancer==. //13 changes
replace cancer=1 if regexm(coddeath, "METASTASES") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "METASTASIS") &  cancer==. //1 change
replace cancer=1 if regexm(coddeath, "REFRACTORY") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "FUNGOIDES") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "HODGKIN") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "MELANOMA") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath,"MYELODYS") &  cancer==. //0 changes

** Strip possible leading/trailing blanks in cod1a
replace coddeath = rtrim(ltrim(itrim(coddeath))) //0 changes
replace cod1a = rtrim(ltrim(itrim(cod1a))) //0 changes
replace cod1b = rtrim(ltrim(itrim(cod1b))) //0 changes
replace cod1c = rtrim(ltrim(itrim(cod1c))) //0 changes
replace cod1d = rtrim(ltrim(itrim(cod1d))) //0 changes
replace cod2a = rtrim(ltrim(itrim(cod2a))) //0 changes
replace cod2b = rtrim(ltrim(itrim(cod2b))) //0 changes

tab cancer, missing

drop dodyear
gen dodyear=year(dod)
tab dodyear cancer,m

** Check that all cancer CODs and for MULTIPLE PRIMARY CODs for 2015 are eligible (use Stata browse)
sort coddeath record_id
order record_id coddeath
count if cancer==1 & inrange(record_id, 0, 18000)
//list coddeath if cancer==1 & inrange(record_id, 0, 17500)
** 312
count if cancer==1 & inrange(record_id, 18001, 20000)
//list coddeath if cancer==1 & inrange(record_id, 17501, 20000)
** 317
//list coddeath if cancer==1

** Replace 2015 cases that are not cancer according to eligibility SOP:
/*
	(1) After merge with CR5 data then may need to reassign some of below 
		deaths as CR5 data may indicate eligibility while COD may exclude
		(e.g. see record_id==15458)
	(2) use obsid to check for CODs that incomplete in Results window with 
		Data Editor in browse mode-copy and paste record_id below from here
*/
replace cancer=2 if ///
record_id==18388|record_id==19237|record_id==19173|record_id==18879|record_id==17681| ///
record_id==18647|record_id==19200|record_id==17037|record_id==18847|record_id==18994| ///
record_id==17655|record_id==17529|record_id==17126|record_id==16945|record_id==17014| ///
record_id==17348|record_id==16853|record_id==17156|record_id==16967|record_id==19083| ///
record_id==19017|record_id==17963|record_id==18814|record_id==18316|record_id==18178| ///
record_id==18355
//26 changes

** Check that all 2015 CODs that are not cancer for eligibility and for MULTIPLE PRIMARY CODs (use Stata browse)
sort coddeath record_id
order record_id coddeath
count if cancer==. & inrange(record_id, 0, 18000)
//list coddeath if cancer!=1 & inrange(record_id, 0, 17500)
** 896
count if cancer==. & inrange(record_id, 18001, 20000)
//list coddeath if cancer!=1 & inrange(record_id, 17501, 20000)
** 983
//list coddeath if cancer!=1

** Updates needed from above list - cancers found
replace cancer=1 if ///
record_id==17914|record_id==18073|record_id==18364|record_id==18818|record_id==18075| ///
record_id==17895|record_id==18909|record_id==18399|record_id==17975|record_id==18198| ///
record_id==17571|record_id==17815|record_id==18059
//13 changes

replace cancer=2 if cancer==. //1840 changes

** Create cod variable 
gen cod=.
label define cod_lab 1 "Dead of cancer" 2 "Dead of other cause" 3 "Not known" 4 "NA", modify
label values cod cod_lab
label var cod "COD categories"
replace cod=1 if cancer==1 //616 changes
replace cod=2 if cancer==2 //1840 changes
** one unknown causes of death in 2014 data - record_id 12323
replace cod=3 if coddeath=="99"|(regexm(coddeath,"INDETERMINATE")|regexm(coddeath,"UNDETERMINED")) //14 changes
tab cod ,m

** Change sex to match cancer dataset
tab sex ,m
rename sex sex_old
gen sex=1 if sex_old==2 //2467 changes
replace sex=2 if sex_old==1 //2587 changes
drop sex_old
label define sex_lab 1 "Female" 2 "Male", modify
label values sex sex_lab
label var sex "Sex"
tab sex ,m

********************
**   Formatting   **
** Place of Death **
********************
rename pod placeofdeath
gen pod=.

label define pod_lab 1 "QEH" 2 "At Home" 3 "Geriatric Hospital" ///
					 4 "Con/Nursing Home" 5 "Other" 6 "District Hospital" ///
					 7 "Psychiatric Hospital" 8 "Bayview Hospital" ///
					 9 "Sandy Crest" 10 "Bridgetown Port" ///
					 11 "Other/Hotel" 99 "ND", modify
label values pod pod_lab
label var pod "Place of Death from National Register"

replace pod=1 if regexm(placeofdeath, "ELIZABETH HOSP") & pod==. //0 changes
replace pod=1 if regexm(placeofdeath, "QUEEN ELZ") & pod==. //0 changes
replace pod=1 if regexm(placeofdeath, "QEH") & pod==. //1260 changes
replace pod=3 if regexm(placeofdeath, "GERIATRIC") & pod==. //69 changes
replace pod=5 if regexm(placeofdeath, "CHILDRENS HOME") & pod==. //0 chagnes
replace pod=4 if regexm(placeofdeath, "HOME") & pod==. //81 changes
replace pod=4 if regexm(placeofdeath, "ELDERLY") & pod==. //3 changes
replace pod=4 if regexm(placeofdeath, "SERENITY MANOR") & pod==. //0 changes
replace pod=4 if regexm(placeofdeath, "ADULT CARE") & pod==. //0 changes
replace pod=4 if regexm(placeofdeath, "AGE ASSIST") & pod==. //0 changes
replace pod=4 if regexm(placeofdeath, "SENIOR") & pod==. //3 changes
replace pod=4 if regexm(placeofdeath, "RETREAT") & pod==. //8 changes
replace pod=4 if regexm(placeofdeath, "RETIREMENT") & pod==. //0 changes
replace pod=4 if regexm(placeofdeath, "NURSING") & pod==. //4 changes
replace pod=5 if regexm(placeofdeath, "PRISON") & pod==. //0 changes
replace pod=5 if regexm(placeofdeath, "POLYCLINIC") & pod==. //2 changes
replace pod=5 if regexm(placeofdeath, "MINISTRIES") & pod==. //0 changes
replace pod=6 if regexm(placeofdeath, "STRICT HOSP") & pod==. //17 changes
replace pod=6 if regexm(placeofdeath, "GORDON CUMM") & pod==. //2 changes
replace pod=7 if regexm(placeofdeath, "PSYCHIATRIC HOSP") & pod==. //9 changes
replace pod=7 if regexm(placeofdeath, "PSYCIATRIC HOSP") & pod==. //1 change
replace pod=8 if regexm(placeofdeath, "BAYVIEW") & pod==. //27 changes
replace pod=9 if regexm(placeofdeath, "SANDY CREST") & pod==. //3 changes
replace pod=10 if regexm(placeofdeath, "BRIDGETOWN PORT") & pod==. //2 changes
replace pod=11 if regexm(placeofdeath, "HOTEL") & pod==. //6 changes
replace pod=99 if placeofdeath=="" & pod==. //0 changes

count if pod==. //985
//list record_id placeofdeath if pod==.
replace pod=2 if pod==. //985

//drop placeofdeath
tab pod ,m 

** Check NRN
//format nrn %10.0g
gen double nrn2=nrn
format nrn2 %15.0g
rename nrn2 natregno
tostring natregno ,replace
//gen nrn4=mod(nrn,10000) - extracting digits from NRN(number)
count if natregno!="" & natregno!="." & length(natregno)!=10 //11
//list record_id fname lname dod age agetxt nrn natregno if natregno!="" & natregno!="." & length(natregno)!=10
replace natregno=subinstr(natregno,"707","0707",.) if record_id==18843
replace natregno=subinstr(natregno,"4","0004",.) if record_id==18621
replace natregno=subinstr(natregno,"9","09",.) if record_id==18028
replace natregno=subinstr(natregno,"30","030",.) if record_id==18001
replace natregno=subinstr(natregno,"5","05",.) if record_id==19064
replace natregno=subinstr(natregno,"8","08",.) if record_id==17360
replace natregno=subinstr(natregno,"9","09",.) if record_id==17517
replace natregno=subinstr(natregno,"90","090",.) if record_id==17587
replace natregno=subinstr(natregno,"64","93",.) if record_id==17587
replace natregno=subinstr(natregno,"9","09",.) if record_id==17960
replace natregno=subinstr(natregno,"111","000111",.) if record_id==18870
replace natregno=subinstr(natregno,"9","09",.) if record_id==18428
count if natregno!="" & natregno!="." & length(natregno)!=10 //0
//list record_id fname lname natregno age agetxt if age>100

** Check dob** Creating dob variable as none in national death data
** perform data cleaning on the age variable
order record_id natregno age
count if natregno==""|natregno=="." //117
gen tempvarn=6 if natregno==""|natregno=="."
gen yr = substr(natregno,1,1) if tempvarn!=6
gen yr1=. if tempvarn!=6
replace yr1 = 20 if yr=="0"
replace yr1 = 19 if yr!="0"
replace yr1 = 99 if natregno=="99"
order record_id nrn age yr yr1
** Check age and yr1 in Stata browse
//list record_id nrn age yr1 if yr1==20
** Initially need to run this code separately from entire dofile to determine which nrnyears should be '19' instead of '20' depending on age, e.g. for age 107 nrnyear=19
replace yr1 = 19 if record_id==17360
replace yr1 = 19 if record_id==17517
replace yr1 = 19 if record_id==17587
replace yr1 = 19 if record_id==17960
gen nrndob = substr(natregno,1,6) 
destring nrndob, replace
format nrndob %06.0f
nsplit nrndob, digits(2 2 2) gen(dyear month day)
format dyear month day %02.0f
tostring yr1, replace
gen year2 = string(dyear,"%02.0f")
gen nrnyr = substr(yr1,1,2) + substr(year2,1,2)
destring nrnyr, replace
sort nrndob
gen nrn1=mdy(month, day, nrnyr)
format nrn1 %dD_m_CY
rename nrn1 dob
gen age2 = (dod - dob)/365.25
gen ageyrs=int(age2)
sort record_id
list record_id fname lname address age ageyrs nrn natregno dob dod if tempvarn!=6 & age!=ageyrs, string(20) //check against electoral list
count if tempvarn!=6 & age!=ageyrs //0
drop day month dyear nrnyr yr yr1 nrndob age2 ageyrs tempvarn

** Check age
gen age2 = (dod - dob)/365.25
gen checkage2=int(age2)
drop age2
count if dob!=. & dod!=. & age!=checkage2 //0
//list pid dot dob age checkage2 cr5id if dob!=. & dot!=. & age!=checkage2 //0 correct
replace age=checkage2 if dob!=. & dod!=. & age!=checkage2 //0 changes

** Check no missing dxyr so this can be used in analysis
tab dodyear ,m 

count if dodyear!=year(dod) //0
//list pid record_id dod dodyear if dodyear!=year(dod)
replace dodyear=year(dod) if dodyear!=year(dod) //0 changes

label data "BNR MORTALITY data 2015"
notes _dta :These data prepared from BB national death register & Redcap deathdata database
save "`datapath'\version02\3-output\2015_prep mort_ALL" ,replace
note: TS This dataset is used for analysis of age-standardized mortality rates
note: TS This dataset includes all 2015 CODs

*******************
** Check for MPs **
**   in CODs     **
*******************
count //2482

//list record_id
//list cod1a
tab cancer ,m //616 cancer CODs
** MPs found above when assigning cancer variable in checking causes of death
** Create duplicate observations for MPs in CODs
expand=2 if record_id==18753, gen (dupobs1)
expand=2 if record_id==17916, gen (dupobs2)
expand=2 if record_id==18568, gen (dupobs3)
//(GIST not stated as malignant so ineligible?? - yes, see CR5db pid 20130343)
expand=2 if record_id==18693, gen (dupobs4)
expand=2 if record_id==18669, gen (dupobs5)
expand=2 if record_id==19201, gen (dupobs6)
expand=2 if record_id==16897, gen (dupobs7)
expand=2 if record_id==17461, gen (dupobs8)
expand=2 if record_id==16817, gen (dupobs9)
expand=2 if record_id==16979, gen (dupobs10)
expand=2 if record_id==16883, gen (dupobs11)
expand=2 if record_id==18027, gen (dupobs12)
expand=2 if record_id==18845, gen (dupobs13)
expand=2 if record_id==19189, gen (dupobs14)
expand=2 if record_id==18198, gen (dupobs15) 
//M9811(9) vs M9837(10) and M9875(8)
//pid 20130770 CML in 2013 that transformed to either T-ALL or B-ALL in 2015 COD states C-CELL!
//M9811 (B-ALL) chosen as research shows "With few exceptions, Ph-positive ALL patients are diagnosed with B-ALL "
//https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4896164/
display `"{browse "https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4896164/":Ph+ALL}"'

count //2497

** Create variables to identify patients vs tumours
gen ptrectot=.
replace ptrectot=1 if dupobs1==0|dupobs2==0|dupobs3==0|dupobs4==0 ///
					 |dupobs5==0|dupobs6==0|dupobs7==0|dupobs8==0 ///
					 |dupobs9==0|dupobs10==0|dupobs11==0|dupobs12==0 ///
					 |dupobs13==0|dupobs14==0|dupobs15==0 //2497 changes
replace ptrectot=2 if dupobs1>0|dupobs2>0|dupobs3>0|dupobs4>0 ///
					 |dupobs5>0|dupobs6>0|dupobs7>0|dupobs8>0 ///
					 |dupobs9>0|dupobs10>0|dupobs11>0|dupobs12>0 ///
					 |dupobs13>0|dupobs14>0|dupobs15>0 //15 changes
label define ptrectot_lab 1 "COD with single event" 2 "COD with multiple events" , modify
label values ptrectot ptrectot_lab

tab ptrectot ,m

** Now create id in this dataset so when merging icd10 for siteiarc variable at end of this dofile
gen did="T1" if ptrectot==1
replace did="T2" if ptrectot==2 //15 changes

***********************************
** 1.4 Number of cases by age-group
***********************************
** Age labelling
gen age5 = recode(age,4,9,14,19,24,29,34,39,44,49,54,59,64,69,74,79,84,200)
recode age5 4=1 9=2 14=3 19=4 24=5 29=6 34=7 39=8 44=9 49=10 54=11 59=12 64=13 /// 
			69=14 74=15 79=16 84=17 200=18
label define age5_lab 	1 "0-4"	   2 "5-9"    3 "10-14"		///
						4 "15-19"  5 "20-24"  6 "25-29"		///
						7 "30-34"  8 "35-39"  9 "40-44"		///
						10 "45-49" 11 "50-54" 12 "55-59"	///
						13 "60-64" 14 "65-69" 15 "70-74"	///
						16 "75-79" 17 "80-84" 18 "85 & over", modify
label values age5 age5_lab

gen age_10 = recode(age5,3,5,7,9,11,13,15,17,200)
recode age_10 3=1 5=2 7=3 9=4 11=5 13=6 15=7 17=8 200=9
label define age_10_lab 	1 "0-14"   2 "15-24"  3 "25-34"	///
							4 "35-44"  5 "45-54"  6 "55-64"	///
							7 "65-74"  8 "75-84"  9 "85 & over" , modify
label values age_10 age_10_lab
sort sex age_10

tab age_10 sex ,m
** None missing age or sex

************************
** Creating IARC Site **
************************
count //2497
tab cancer ,m 
drop if cancer!=1 //1866 deleted

** Note: Although siteiarc doesn't need sub-site, the specific icd10 code was used, where applicable
display `"{browse "https://icd.who.int/browse10/2015/en#/C09":ICD10,v2015}"'

** Use Stata browse instead of lists
order record_id coddeath

gen icd10=""
count if regexm(coddeath,"LIP") & icd10=="" //2 - not lip so no replace
//list record_id coddeath if regexm(coddeath,"LIP"),string(120)

count if regexm(coddeath,"TONGUE") & icd10=="" //5 - all tongue, NOS
//list record_id coddeath if regexm(coddeath,"TONGUE"),string(120)
replace icd10="C029" if regexm(coddeath,"TONGUE") & icd10=="" //5 changes

count if regexm(coddeath,"MOUTH") & icd10=="" //0
//list record_id coddeath if regexm(coddeath,"MOUTH"),string(120)

count if regexm(coddeath,"SALIVARY") & icd10=="" //0
//list record_id coddeath if regexm(coddeath,"SALIVARY"),string(120)

count if regexm(coddeath,"TONSIL") & icd10=="" //1
//list record_id coddeath if regexm(coddeath,"TONSIL"),string(120)
replace icd10="C099" if regexm(coddeath,"TONSIL") & icd10=="" //1 change

count if regexm(coddeath,"OROPHARYNX") & icd10=="" //0
//list record_id coddeath if regexm(coddeath,"OROPHARYNX"),string(120)

count if regexm(coddeath,"NASOPHARYNX") & icd10=="" //0
//list record_id coddeath if regexm(coddeath,"NASOPHARYNX"),string(120)

count if regexm(coddeath,"HYPOPHARYNX") & icd10=="" //0
//list record_id coddeath if regexm(coddeath,"HYPOPHARYNX"),string(120)

count if (regexm(coddeath,"PHARYNX")|regexm(coddeath,"PHARNYX")) & icd10=="" //2
//list record_id coddeath if (regexm(coddeath,"PHARYNX")|regexm(coddeath,"PHARNYX")) & icd10=="",string(120)
replace icd10="C140" if record_id==17926
replace icd10="C148" if record_id==18057

count if (regexm(coddeath,"OESOPHAG")|regexm(coddeath,"ESOPHAG")) & icd10=="" //10
replace icd10="C159" if (regexm(coddeath,"OESOPHAG")|regexm(coddeath,"ESOPHAG")) & icd10=="" //10 changes
replace icd10="C159" if record_id==17149

count if (regexm(coddeath,"STOMACH")|regexm(coddeath,"GASTR"))  & !(strmatch(strupper(coddeath), "*GASTROINTESTINAL BLEED*"))  & !(strmatch(strupper(coddeath), "*GASTROINTESTINAL HAEMORR*"))  & !(strmatch(strupper(coddeath), "*GASTROENTER*")) & icd10=="" //37
replace icd10="C169" if (regexm(coddeath,"STOMACH")|regexm(coddeath,"GASTR"))  & !(strmatch(strupper(coddeath), "*GASTROINTESTINAL BLEED*"))  & !(strmatch(strupper(coddeath), "*GASTROINTESTINAL HAEMORR*"))  & !(strmatch(strupper(coddeath), "*GASTROENTER*")) & icd10=="" //33 changes
replace icd10="C859" if record_id==17446 //gastric lymphoma
replace icd10="C269" if record_id==17585|record_id==17966|record_id==19107 //gastronintestinal malignancy

count if (regexm(coddeath,"DUODEN")|regexm(coddeath,"JEJUN")|regexm(coddeath,"ILEUM")|regexm(coddeath,"SMALL")) & !(strmatch(strupper(coddeath), "*SMALL CEL*")) & !(strmatch(strupper(coddeath), "*LARYNGEAL*")) & icd10=="" //3
replace coddeath=subinstr(coddeath," H"," L",.) if record_id==17901 //see CR5db pid 20155189
replace cod1a=subinstr(cod1a," H"," L",.) if record_id==17901
replace icd10="C179" if (regexm(coddeath,"DUODEN")|regexm(coddeath,"JEJUN")|regexm(coddeath,"ILEUM")|regexm(coddeath,"SMALL")) & !(strmatch(strupper(coddeath), "*SMALL CEL*")) & !(strmatch(strupper(coddeath), "*LARYNGEAL*")) & icd10=="" //2 changes
replace icd10="C170" if record_id==19066 //1 change
replace icd10="C172" if record_id==17310 //1 change

count if (regexm(coddeath,"CECUM")|regexm(coddeath,"APPEND")|regexm(coddeath,"COLON")) & !(strmatch(strupper(coddeath), "*COLONIC POLYPS*")) & icd10=="" //78
replace icd10="C189" if (regexm(coddeath,"CECUM")|regexm(coddeath,"APPEND")|regexm(coddeath,"COLON")) & !(strmatch(strupper(coddeath), "*COLONIC POLYPS*")) & icd10=="" //78 changes
replace icd10="C187" if record_id==16864 //1 change
replace icd10="C186" if record_id==18753 //1 change

count if (regexm(coddeath,"COLORECTAL")|regexm(coddeath,"RECTO")) & icd10=="" //8
replace icd10="C19" if (regexm(coddeath,"COLORECT")|regexm(coddeath,"RECTO")) & icd10=="" //8 changes

count if (regexm(coddeath,"RECTUM")|regexm(coddeath,"RECTAL")) & !(strmatch(strupper(coddeath), "*ANORECT*")) & icd10=="" //16
replace icd10="C20" if (regexm(coddeath,"RECTUM")|regexm(coddeath,"RECTAL")) & !(strmatch(strupper(coddeath), "*ANORECT*")) & icd10=="" //16 changes

count if (regexm(coddeath,"ANUS")|regexm(coddeath,"ANORECT")|regexm(coddeath,"ANAL")) & icd10=="" //2
replace icd10="C218" if (regexm(coddeath,"ANUS")|regexm(coddeath,"ANORECT")|regexm(coddeath,"ANAL")) & icd10=="" //2 changes

count if (regexm(coddeath,"LIVER")|regexm(coddeath,"BILE")|regexm(coddeath,"HEPATO")) & !(strmatch(strupper(coddeath), "*CHOLANGIOCAR*")) & icd10=="" //15
replace icd10="C800" if record_id==19076|record_id==18222|record_id==17843
replace icd10="C220" if record_id==17665|record_id==18381
replace icd10="C229" if record_id==17761|record_id==18531|record_id==17069
replace icd10="C249" if record_id==17868

count if regexm(coddeath,"CHOLANGIO") & icd10=="" //3
replace icd10="C221" if regexm(coddeath,"CHOLANGIO") & icd10=="" //3 changes

count if (regexm(coddeath,"GALLBLAD")|regexm(coddeath,"GALL BLAD")) & icd10=="" //4
replace icd10="C23" if (regexm(coddeath,"GALLBLAD")|regexm(coddeath,"GALL BLAD")) & icd10=="" //4 changes

count if regexm(coddeath,"BILIARY") & icd10=="" //0

count if (regexm(coddeath,"PANCREA") & regexm(coddeath,"HEAD")) & icd10=="" //3
replace icd10="C250" if (regexm(coddeath,"PANCREA") & regexm(coddeath,"HEAD")) & icd10=="" //3 changes
count if regexm(coddeath,"PANCREA") & icd10=="" //27
replace icd10="C259" if regexm(coddeath,"PANCREA") & icd10=="" //27 changes

count if (regexm(coddeath,"NASAL")|regexm(coddeath,"EAR")) & icd10=="" //14-none nasal/ear so no replace

count if regexm(coddeath,"SINUS") & icd10=="" //1-not sinus so no replace

count if (regexm(coddeath,"LARYNX")|regexm(coddeath,"LARYNG")|regexm(coddeath,"GLOTTI")|regexm(coddeath,"VOCAL")) & icd10=="" //3
replace icd10="C329" if (regexm(coddeath,"LARYNX")|regexm(coddeath,"LARYNG")|regexm(coddeath,"GLOTTI")|regexm(coddeath,"VOCAL")) & icd10=="" //3 changes
replace icd10="C320" if record_id==18064

count if regexm(coddeath,"TRACHEA") & icd10=="" //0

count if (regexm(coddeath,"LUNG")|regexm(coddeath,"BRONCH")) & icd10=="" //39
replace icd10="C349" if (regexm(coddeath,"LUNG")|regexm(coddeath,"BRONCH")) & icd10=="" //39 changes
replace icd10="C809" if record_id==19100
replace icd10="C719" if record_id==18722
replace icd10="C509" if record_id==18424|record_id==18106|record_id==19042
replace icd10="C541" if record_id==18974
replace icd10="C64" if record_id==19225
replace icd10="C900" if record_id==18702
replace icd10="C419" if record_id==18689
replace icd10="C61" if record_id==19256|record_id==18195|record_id==18863

count if regexm(coddeath,"THYMUS") & icd10=="" //0

count if (regexm(coddeath,"HEART")|regexm(coddeath,"MEDIASTIN")|regexm(coddeath,"PLEURA")) & icd10=="" //15-none found so no replace
replace icd10="C809" if record_id==16956 //C782 code for malignant pleural effusion, NOS (met code) ?eligibility so change to PSU

count if (regexm(coddeath,"BONE")|regexm(coddeath,"OSTEO")|regexm(coddeath,"CARTILAGE")) & icd10=="" //9-none found so no replace
replace icd10="C439" if record_id==18148

count if (regexm(coddeath,"SKIN")|regexm(coddeath,"MELANOMA")|regexm(coddeath,"SQUAMOUS")|regexm(coddeath,"BASAL")) & icd10=="" //11
replace icd10="C439" if (regexm(coddeath,"SKIN")|regexm(coddeath,"MELANOMA")|regexm(coddeath,"SQUAMOUS")|regexm(coddeath,"BASAL")) & icd10=="" //11 changes
replace icd10="C445" if record_id==17780|record_id==18228
replace icd10="C447" if record_id==17989
replace icd10="C52" if record_id==16979 & ptrectot==1
replace icd10="C800" if record_id==16979 & ptrectot==2
replace icd10="C809" if record_id==17070|record_id==17684
replace icd10="C439" if record_id==16835|record_id==17350 //0 changes
replace icd10="C140" if record_id==17926

count if (regexm(coddeath,"MESOTHELIOMA")|regexm(coddeath,"KAPOSI")|regexm(coddeath,"NERVE")|regexm(coddeath,"PERITON")) & icd10=="" //2
replace icd10="C459" if record_id==17975
replace icd10="C482" if record_id==17671

count if regexm(coddeath,"BREAST") & icd10=="" //60
//list record_id coddeath if regexm(coddeath,"BREAST"),string(120)
replace icd10="C509" if regexm(coddeath,"BREAST") & icd10=="" //60 changes

count if regexm(coddeath,"VULVA") & icd10=="" //2
replace icd10="C519" if regexm(coddeath,"VULVA") & icd10=="" //2 changes

count if regexm(coddeath,"VAGINA") & icd10=="" //2
replace icd10="C52" if regexm(coddeath,"VAGINA") & icd10=="" //2 changes
replace icd10="C541" if record_id==18350

count if (regexm(coddeath,"CERVICAL")|regexm(coddeath,"CERVIX")) & icd10=="" //16
replace icd10="C539" if (regexm(coddeath,"CERVICAL")|regexm(coddeath,"CERVIX")) & icd10=="" //16 changes

count if (regexm(coddeath,"ENDOMETRI")|regexm(coddeath,"CORPUS")) & icd10=="" //20
replace icd10="C541" if (regexm(coddeath,"ENDOMETRI")|regexm(coddeath,"CORPUS")) & icd10=="" //20 changes

count if (regexm(coddeath,"UTERINE")|regexm(coddeath,"UTERUS")) & icd10=="" //9
replace icd10="C55" if (regexm(coddeath,"UTERINE")|regexm(coddeath,"UTERUS")) & icd10=="" //9 changes

count if (regexm(coddeath,"OVARY")|regexm(coddeath,"OVARIAN")) & icd10=="" //13
replace icd10="C56" if (regexm(coddeath,"OVARY")|regexm(coddeath,"OVARIAN")) & icd10=="" //13 changes

count if (regexm(coddeath,"FALLOPIAN")|regexm(coddeath,"FEMALE")) & icd10=="" //0

count if (regexm(coddeath,"PENIS")|regexm(coddeath,"PENILE")) & icd10=="" //0

count if regexm(coddeath,"PROSTATE") & icd10=="" //94
replace icd10="C61" if regexm(coddeath,"PROSTATE") & icd10=="" //94 changes

count if (regexm(coddeath,"TESTIS")|regexm(coddeath,"TESTES")) & icd10=="" //0

count if (regexm(coddeath,"SCROT")|regexm(coddeath,"MALE")) & icd10=="" //0

count if (regexm(coddeath,"KIDNEY")|regexm(coddeath,"RENAL")) & icd10=="" //16
replace icd10="C64" if (regexm(coddeath,"KIDNEY")|regexm(coddeath,"RENAL")) & icd10=="" //16 changes
replace icd10="C900" if record_id==17216|record_id==19290|record_id==18303 //3 changes
replace icd10="C809" if record_id==19056
replace icd10="C679" if record_id==16804
replace icd10="C859" if record_id==18217|record_id==18293 //2 changes
replace icd10="C61" if record_id==17714

count if (regexm(coddeath,"BLADDER")|regexm(coddeath,"URIN")) & icd10=="" //12
replace icd10="C679" if (regexm(coddeath,"BLADDER")|regexm(coddeath,"URIN")) & icd10=="" //12 changes
replace icd10="D469" if record_id==18059
replace icd10="C819" if record_id==18639

count if (regexm(coddeath,"EYE")|regexm(coddeath,"RETINA")|regexm(coddeath,"NEURO")) & icd10=="" //5
replace icd10="C699" if (regexm(coddeath,"EYE")|regexm(coddeath,"RETINA")|regexm(coddeath,"NEURO")) & icd10=="" //5 changes
replace icd10="C809" if record_id==19088|record_id==17793|record_id==17145 //3 changes
replace icd10="C800" if record_id==19112

count if (regexm(coddeath,"ASTROCY")|regexm(coddeath,"MULTIFORME")|regexm(coddeath,"BRAIN")) & icd10=="" //8
replace icd10="C719" if (regexm(coddeath,"ASTROCY")|regexm(coddeath,"MULTIFORME")|regexm(coddeath,"BRAIN")) & icd10=="" //8 changes

count if (regexm(coddeath,"THYROID")|regexm(coddeath,"ADRENAL")|regexm(coddeath,"ENDOCRI")) & icd10=="" //6
replace icd10="C73" if (regexm(coddeath,"THYROID")|regexm(coddeath,"ADRENAL")|regexm(coddeath,"ENDOCRI")) & icd10=="" //6 changes
replace icd10="C900" if record_id==19062

count if (regexm(coddeath,"UNKNOWN")|regexm(coddeath,"CULT")) & icd10=="" //9
replace icd10="C800" if (regexm(coddeath,"UNKNOWN")|regexm(coddeath,"CULT")) & icd10=="" //9 changes

count if (regexm(coddeath,"HODGKIN") & regexm(coddeath,"NON")) & icd10=="" //8
replace icd10="C859" if (regexm(coddeath,"HODGKIN") & regexm(coddeath,"NON")) & icd10=="" //8 changes
replace icd10="C910" if record_id==17476

count if regexm(coddeath,"HODGKIN") & icd10=="" //3
replace icd10="C819" if regexm(coddeath,"HODGKIN") & icd10=="" //3 changes

count if (regexm(coddeath,"FOLLICUL") & regexm(coddeath,"LYMPH")) & icd10=="" //0

count if (regexm(coddeath,"MULTIPLE") & regexm(coddeath,"OMA")) & icd10=="" //19
replace icd10="C900" if (regexm(coddeath,"MULTIPLE") & regexm(coddeath,"OMA")) & icd10=="" //19 changes

count if regexm(coddeath,"PLASMACYTOMA") & icd10=="" //1
replace icd10="C903" if regexm(coddeath,"PLASMACYTOMA") & icd10=="" //1 change

count if regexm(coddeath,"SEZARY") & icd10=="" //1
replace icd10="C841" if regexm(coddeath,"SEZARY") & icd10=="" //1 change

count if (regexm(coddeath,"LYMPH")|regexm(coddeath,"EMIA")|regexm(coddeath,"PHOMA")) & icd10=="" //22
replace icd10="C910" if record_id==18428|record_id==18198
replace icd10="C959" if record_id==18407|record_id==17699|record_id==17282
replace icd10="C915" if record_id==17815
replace icd10="C579" if record_id==18954
replace icd10="C800" if record_id==18989
replace icd10="C911" if record_id==17914
replace icd10="D469" if record_id==18970|record_id==17000
replace icd10="C848" if record_id==17845
replace icd10="C866" if record_id==16907
replace icd10="C920" if record_id==18182|record_id==16859
replace icd10="C833" if record_id==18519
replace icd10="C865" if record_id==18552
replace icd10="C859" if record_id==17998|record_id==18075
replace icd10="C809" if record_id==19281
replace icd10="C921" if record_id==18787
replace icd10="C924" if record_id==17571

count if icd10=="" //40
replace icd10="C159" if record_id==18215
replace icd10="C541" if record_id==17762
replace icd10="D474" if record_id==18903
replace icd10="C349" if record_id==17385
replace icd10="C180" if record_id==18451
replace icd10="C189" if record_id==16808
replace icd10="C321" if record_id==18058
replace icd10="C900" if record_id==18893|record_id==17713
replace icd10="C109" if record_id==18672
replace icd10="C23" if record_id==17656
replace icd10="C380" if record_id==19188
replace icd10="C490" if record_id==18849
replace icd10="C61" if record_id==17718
replace icd10="D469" if record_id==18498
replace icd10="C444" if record_id==18302
replace icd10="C221" if record_id==18585
replace icd10="C969" if record_id==17635
replace icd10="C809" if icd10=="" //22 changes

tab icd10 ,m

** Check icd10 for MP CODs
duplicates tag record_id, gen(dup_id)
sort record_id
//list record_id icd10 coddeath ptrectot if dup_id>0, nolabel sepby(record_id) string(120)
replace icd10="C800" if record_id==16817 & ptrectot==2 //1 change
replace icd10="C56" if record_id==16883 & ptrectot==1 //1 change
replace icd10="C61" if record_id==16897 & ptrectot==2 //1 change
replace icd10="C900" if record_id==17461 & ptrectot==1 //1 change
replace icd10="C61" if record_id==17916 & ptrectot==1 //1 change
replace icd10="C509" if record_id==18027 & ptrectot==2 //1 change
replace icd10="C921" if record_id==18198 & ptrectot==2 //1 change
replace icd10="C509" if record_id==18568 & ptrectot==2 //1 change
replace icd10="C64" if record_id==18669 & ptrectot==2 //1 change
replace icd10="C61" if record_id==18693 & ptrectot==1 //1 change
replace icd10="C61" if record_id==18753 & ptrectot==2 //1 change
replace icd10="C412" if record_id==18845 & ptrectot==2 //1 change
replace icd10="C61" if record_id==19189 & ptrectot==1 //1 change
replace icd10="C541" if record_id==19201 & ptrectot==2 //1 change

tab icd10 ,m

** Create new site variable with CI5-XI incidence classifications (see chapter 3 Table 3.1. of that volume) based on icd10
display `"{browse "http://ci5.iarc.fr/CI5-XI/Pages/Chapter3.aspx":IARC-CI5-XI-3}"'

gen siteiarc=.
label define siteiarc_lab ///
1 "Lip (C00)" 2 "Tongue (C01-02)" 3 "Mouth (C03-06)" ///
4 "Salivary gland (C07-08)" 5 "Tonsil (C09)" 6 "Other oropharynx (C10)" ///
7 "Nasopharynx (C11)" 8 "Hypopharynx (C12-13)" 9 "Pharynx unspecified (C14)" ///
10 "Oesophagus (C15)" 11 "Stomach (C16)" 12 "Small intestine (C17)" ///
13 "Colon (C18)" 14 "Rectum (C19-20)" 15 "Anus (C21)" ///
16 "Liver (C22)" 17 "Gallbladder etc. (C23-24)" 18 "Pancreas (C25)" ///
19 "Nose, sinuses etc. (C30-31)" 20 "Larynx (C32)" ///
21 "Lung (incl. trachea and bronchus) (C33-34)" 22 "Other thoracic organs (C37-38)" ///
23 "Bone (C40-41)" 24 "Melanoma of skin (C43)" 25 "Other skin (C44)" ///
26 "Mesothelioma (C45)" 27 "Kaposi sarcoma (C46)" 28 "Connective and soft tissue (C47+C49)" ///
29 "Breast (C50)" 30 "Vulva (C51)" 31 "Vagina (C52)" 32 "Cervix uteri (C53)" ///
33 "Corpus uteri (C54)" 34 "Uterus unspecified (C55)" 35 "Ovary (C56)" ///
36 "Other female genital organs (C57)" 37 "Placenta (C58)" ///
38 "Penis (C60)" 39 "Prostate (C61)" 40 "Testis (C62)" 41 "Other male genital organs (C63)" ///
42 "Kidney (C64)" 43 "Renal pelvis (C65)" 44 "Ureter (C66)" 45 "Bladder (C67)" ///
46 "Other urinary organs (C68)" 47 "Eye (C69)" 48 "Brain, nervous system (C70-72)" ///
49 "Thyroid (C73)" 50 "Adrenal gland (C74)" 51 "Other endocrine (C75)" ///
52 "Hodgkin lymphoma (C81)" 53 "Non-Hodgkin lymphoma (C82-86,C96)" ///
54 "Immunoproliferative diseases (C88)" 55 "Multiple myeloma (C90)" ///
56 "Lymphoid leukaemia (C91)" 57 "Myeloid leukaemia (C92-94)" 58 "Leukaemia unspecified (C95)" ///
59 "Myeloproliferative disorders (MPD)" 60 "Myselodysplastic syndromes (MDS)" ///
61 "Other and unspecified (O&U)" ///
62 "All sites(ALL)" 63 "All sites but skin (ALLbC44)" ///
64 "D069: CIN 3"
label var siteiarc "IARC CI5-XI sites"
label values siteiarc siteiarc_lab

replace siteiarc=1 if regexm(icd10,"C00") //0 changes
replace siteiarc=2 if (regexm(icd10,"C01")|regexm(icd10,"C02")) //5 changes
replace siteiarc=3 if (regexm(icd10,"C03")|regexm(icd10,"C04")|regexm(icd10,"C05")|regexm(icd10,"C06")) //0 changes
replace siteiarc=4 if (regexm(icd10,"C07")|regexm(icd10,"C08")) //0 changes
replace siteiarc=5 if regexm(icd10,"C09") //1 change
replace siteiarc=6 if regexm(icd10,"C10") //1 change
replace siteiarc=7 if regexm(icd10,"C11") //0 changes
replace siteiarc=8 if (regexm(icd10,"C12")|regexm(icd10,"C13")) //0 changes
replace siteiarc=9 if regexm(icd10,"C14") //2 changes
replace siteiarc=10 if regexm(icd10,"C15") //12 changes
replace siteiarc=11 if regexm(icd10,"C16") //31 changes
replace siteiarc=12 if regexm(icd10,"C17") //4 changes
replace siteiarc=13 if regexm(icd10,"C18") //75 changes
replace siteiarc=14 if (regexm(icd10,"C19")|regexm(icd10,"C20")) //23 changes
replace siteiarc=15 if regexm(icd10,"C21") //2 changes
replace siteiarc=16 if regexm(icd10,"C22") //9 changes
replace siteiarc=17 if (regexm(icd10,"C23")|regexm(icd10,"C24")) //6 changes
replace siteiarc=18 if regexm(icd10,"C25") //29 changes
replace siteiarc=19 if (regexm(icd10,"C30")|regexm(icd10,"C31")) //0 changes
replace siteiarc=20 if regexm(icd10,"C32") //1 change
replace siteiarc=21 if (regexm(icd10,"C33")|regexm(icd10,"C34")) //28 changes
replace siteiarc=22 if (regexm(icd10,"C37")|regexm(icd10,"C38")) //1 change
replace siteiarc=23 if (regexm(icd10,"C40")|regexm(icd10,"C41")) //2 changes
replace siteiarc=24 if regexm(icd10,"C43") //3 changes
replace siteiarc=25 if regexm(icd10,"C44") //4 changes
replace siteiarc=26 if regexm(icd10,"C45") //1 change
replace siteiarc=27 if regexm(icd10,"C46") //0 changes
replace siteiarc=28 if (regexm(icd10,"C47")|regexm(icd10,"C49")) //1 change
replace siteiarc=29 if regexm(icd10,"C50") //64 changes
replace siteiarc=30 if regexm(icd10,"C51") //2 changes
replace siteiarc=31 if regexm(icd10,"C52") //2 changes
replace siteiarc=32 if regexm(icd10,"C53") //15 changes
replace siteiarc=33 if regexm(icd10,"C54") //24 changes
replace siteiarc=34 if regexm(icd10,"C55") //9 changes
replace siteiarc=35 if regexm(icd10,"C56") //1 change
replace siteiarc=36 if regexm(icd10,"C57") //1 change
replace siteiarc=37 if regexm(icd10,"C58") //0 changes
replace siteiarc=38 if regexm(icd10,"C60") //0 changes
replace siteiarc=39 if regexm(icd10,"C61") //104 changes
replace siteiarc=40 if regexm(icd10,"C62") //0 changes
replace siteiarc=41 if regexm(icd10,"C63") //0 changes
replace siteiarc=42 if regexm(icd10,"C64") //10 changes
replace siteiarc=43 if regexm(icd10,"C65") //0 changes
replace siteiarc=44 if regexm(icd10,"C66") //0 changes
replace siteiarc=45 if regexm(icd10,"C67") //11 changes
replace siteiarc=46 if regexm(icd10,"C68") //0 changes
replace siteiarc=47 if regexm(icd10,"C69") //1 change
replace siteiarc=48 if (regexm(icd10,"C70")|regexm(icd10,"C71")|regexm(icd10,"C72")) //9 changes
replace siteiarc=49 if regexm(icd10,"C73") //5 changes
replace siteiarc=50 if regexm(icd10,"C74") //0 changes
replace siteiarc=51 if regexm(icd10,"C75") //0 changes
replace siteiarc=52 if regexm(icd10,"C81") //3 changes
replace siteiarc=53 if (regexm(icd10,"C82")|regexm(icd10,"C83")|regexm(icd10,"C84")|regexm(icd10,"C85")|regexm(icd10,"C86")|regexm(icd10,"C96")) //17 changes
replace siteiarc=54 if regexm(icd10,"C88") //0 changes
replace siteiarc=55 if regexm(icd10,"C90") //27 changes
replace siteiarc=56 if regexm(icd10,"C91") //5 changes
replace siteiarc=57 if (regexm(icd10,"C92")|regexm(icd10,"C93")|regexm(icd10,"C94")) //5 changes
replace siteiarc=58 if regexm(icd10,"C95") //3 changes
replace siteiarc=59 if regexm(icd10,"D47") //1 change
replace siteiarc=60 if regexm(icd10,"D46") //4 changes
replace siteiarc=61 if (regexm(icd10,"C26")|regexm(icd10,"C39")|regexm(icd10,"C48")|regexm(icd10,"C76")|regexm(icd10,"C80")) //50 changes
**replace siteiarc=62 if siteiarc<62
**replace siteiarc=63 if siteiarc<62 & siteiarc!=25
replace siteiarc=64 if regexm(icd10,"D06") //0 changes - no CIN 3 in death data

tab siteiarc ,m //none missing

gen allsites=1 if siteiarc<62 //651 changes
label var allsites "All sites (ALL)"

gen allsitesnoC44=1 if siteiarc<62 & siteiarc!=25 //4 missing so 4=C44 (NMSCs)
label var allsitesnoC44 "All sites but skin (ALLbC44)"

** Create site variable for lymphoid and haematopoietic diseases for conversion of these from ICD-O-3 1st edition (M9590-M9992)
** (see chapter 3 Table 3.2 of CI5-XI)
gen siteiarchaem=.
label define siteiarchaem_lab ///
1 "Malignant lymphomas,NOS or diffuse" ///
2 "Hodgkin lymphoma" ///
3 "Mature B-cell lymphomas" ///
4 "Mature T- and NK-cell lymphomas" ///
5 "Precursor cell lymphoblastic lymphoma" ///
6 "Plasma cell tumours" ///
7 "Mast cell tumours" ///
8 "Neoplasms of histiocytes and accessory lymphoid cells" ///
9 "Immunoproliferative diseases" ///
10 "Leukemias, NOS" ///
11 "Lymphoid leukemias" ///
12 "Myeloid leukemias" ///
13 "Other leukemias" ///
14 "Chronic myeloproliferative disorders" ///
15 "Other hematologic disorders" ///
16 "Myelodysplastic syndromes"
label var siteiarchaem "IARC CI5-XI lymphoid & haem diseases"
label values siteiarchaem siteiarchaem_lab

** Note that morphcat is based on ICD-O-3 edition 3.1. so e.g. morphcat54
replace siteiarchaem=1 if icd10=="C859"|icd10=="C851"|icd10=="C826"|icd10=="C969" //12 changes
replace siteiarchaem=2 if icd10=="C819"|icd10=="C814"|icd10=="C813"|icd10=="C812"|icd10=="C811"|icd10=="C810" //3 changes
replace siteiarchaem=3 if icd10=="C830"|icd10=="C831"|icd10=="C833"|icd10=="C837"|icd10=="C838"|icd10=="C859"|icd10=="C852"|icd10=="C829"|icd10=="C821"|icd10=="C820"|icd10=="C822"|icd10=="C420"|icd10=="C421"|icd10=="C424"|icd10=="C884"|regexm(icd10,"C77") //12 changes
replace siteiarchaem=4 if icd10=="C840"|icd10=="C841"|icd10=="C844"|icd10=="C865"|icd10=="C863"|icd10=="C848"|icd10=="C838"|icd10=="C846"|icd10=="C861"|icd10=="C862"|icd10=="C866"|icd10=="C860" //4 changes
replace siteiarchaem=5 if icd10=="C845"|icd10=="C835" //0 changes
replace siteiarchaem=6 if icd10=="C903"|icd10=="C900"|icd10=="C901"|icd10=="C902"|icd10=="C833" //28 changes
replace siteiarchaem=7 if icd10=="D470"|icd10=="C962"|icd10=="C943" //0 changes
replace siteiarchaem=8 if icd10=="C968"|icd10=="C966"|icd10=="C964" //0 changes
replace siteiarchaem=9 if icd10=="C889"|icd10=="C880"|icd10=="C882"|icd10=="C883"|icd10=="D472"|icd10=="C838"|icd10=="C865"|icd10=="D479"|icd10=="D477" //1 change
replace siteiarchaem=10 if icd10=="C959"|icd10=="C950" //3 changes
replace siteiarchaem=11 if icd10=="C910"|icd10=="C919"|icd10=="C911"|icd10=="C918"|icd10=="C915"|icd10=="C917"|icd10=="C913"|icd10=="C916" //5 changes
replace siteiarchaem=12 if icd10=="C940"|icd10=="C929"|icd10=="C920"|icd10=="C921"|icd10=="C924"|icd10=="C925"|icd10=="C947"|icd10=="C922"|icd10=="C930"|icd10=="C928"|icd10=="C926"|icd10=="D471"|icd10=="C927"|icd10=="C942"|icd10=="C946"|icd10=="C923"|icd10=="C944"|icd10=="C914" //5 changes
replace siteiarchaem=13 if icd10=="C931"|icd10=="C933"|icd10=="C947" //0 changes
replace siteiarchaem=14 if icd10=="D45"|icd10=="D471"|icd10=="D474"|icd10=="D473"|icd10=="D475"|icd10=="C927"|icd10=="C967" //1 change
replace siteiarchaem=15 if icd10=="D477"|icd10=="D471" //0 changes
replace siteiarchaem=16 if icd10=="D465"|icd10=="D466"|icd10=="D467"|icd10=="D469" //4 changes

tab siteiarchaem ,m //593 missing - correct!
count if (siteiarc>51 & siteiarc<59) & siteiarchaem==. //0

** Create ICD-10 groups according to analysis tables in CR5 db (added after analysis dofiles 4,6)
gen sitecr5db=.
label define sitecr5db_lab ///
1 "Mouth & pharynx (C00-14)" ///
2 "Oesophagus (C15)" ///
3 "Stomach (C16)" ///
4 "Colon, rectum, anus (C18-21)" ///
5 "Liver (C22)" ///
6 "Pancreas (C25)" ///
7 "Larynx (C32)" ///
8 "Lung, trachea, bronchus (C33-34)" ///
9 "Melanoma of skin (C43)" ///
10 "Breast (C50)" ///
11 "Cervix (C53)" ///
12 "Corpus & Uterus NOS (C54-55)" ///
13 "Ovary & adnexa (C56)" ///
14 "Prostate (C61)" ///
15 "Testis (C62)" ///
16 "Kidney & urinary NOS (C64-66,68)" ///
17 "Bladder (C67)" ///
18 "Brain, nervous system (C70-72)" ///
19 "Thyroid (C73)" ///
20 "O&U (C26,39,48,76,80)" ///
21 "Lymphoma (C81-85,88,90,96)" ///
22 "Leukaemia (C91-95)" ///
23 "Other digestive (C17,23-24)" ///
24 "Nose, sinuses (C30-31)" ///
25 "Bone, cartilage, etc (C40-41,45,47,49)" ///
26 "Other skin (C44)" ///
27 "Other female organs (C51-52,57-58)" ///
28 "Other male organs (C60,63)" ///
29 "Other endocrine (C74-75)" ///
30 "Myeloproliferative disorders (MPD)" ///
31 "Myselodysplastic syndromes (MDS)" ///
32 "D069: CIN 3" ///
33 "All sites but C44" ///
34 "Excluded from CR5db"
label var sitecr5db "CR5db sites"
label values sitecr5db sitecr5db_lab

replace sitecr5db=1 if (regexm(icd10,"C00")|regexm(icd10,"C01")|regexm(icd10,"C02") ///
					 |regexm(icd10,"C03")|regexm(icd10,"C04")|regexm(icd10,"C05") ///
					 |regexm(icd10,"C06")|regexm(icd10,"C07")|regexm(icd10,"C08") ///
					 |regexm(icd10,"C09")|regexm(icd10,"C10")|regexm(icd10,"C11") ///
					 |regexm(icd10,"C12")|regexm(icd10,"C13")|regexm(icd10,"C14")) //21 changes
replace sitecr5db=2 if regexm(icd10,"C15") //10 changes
replace sitecr5db=3 if regexm(icd10,"C16") //20 changes
replace sitecr5db=4 if (regexm(icd10,"C18")|regexm(icd10,"C19")|regexm(icd10,"C20")|regexm(icd10,"C21")) //92 changes
replace sitecr5db=5 if regexm(icd10,"C22") //9 changes
replace sitecr5db=6 if regexm(icd10,"C25") //29 changes
replace sitecr5db=7 if regexm(icd10,"C32") //1 change
replace sitecr5db=8 if (regexm(icd10,"C33")|regexm(icd10,"C34")) //41 changes
replace sitecr5db=9 if regexm(icd10,"C43") //1 change
replace sitecr5db=10 if regexm(icd10,"C50") //72 changes
replace sitecr5db=11 if regexm(icd10,"C53") //12 changes
replace sitecr5db=12 if (regexm(icd10,"C54")|regexm(icd10,"C55")) //24 changes
replace sitecr5db=13 if regexm(icd10,"C56") //1 change
replace sitecr5db=14 if regexm(icd10,"C61") //150 changes
replace sitecr5db=15 if regexm(icd10,"C62") //0 changes
replace sitecr5db=16 if (regexm(icd10,"C64")|regexm(icd10,"C65")|regexm(icd10,"C66")|regexm(icd10,"C68")) //11 changes
replace sitecr5db=17 if regexm(icd10,"C67") //13 changes
replace sitecr5db=18 if (regexm(icd10,"C70")|regexm(icd10,"C71")|regexm(icd10,"C72")) //0 changes
replace sitecr5db=19 if regexm(icd10,"C73") //3 changes
replace sitecr5db=20 if siteiarc==61 //57 changes
replace sitecr5db=21 if (regexm(icd10,"C81")|regexm(icd10,"C82")|regexm(icd10,"C83")|regexm(icd10,"C84")|regexm(icd10,"C85")|regexm(icd10,"C88")|regexm(icd10,"C90")|regexm(icd10,"C96")) //43 changes
replace sitecr5db=22 if (regexm(icd10,"C91")|regexm(icd10,"C92")|regexm(icd10,"C93")|regexm(icd10,"C94")|regexm(icd10,"C95")) //12 changes
replace sitecr5db=23 if (regexm(icd10,"C17")|regexm(icd10,"C23")|regexm(icd10,"C24")) //11 changes
replace sitecr5db=24 if (regexm(icd10,"C30")|regexm(icd10,"C31")) //1 change
replace sitecr5db=25 if (regexm(icd10,"C40")|regexm(icd10,"C41")|regexm(icd10,"C45")|regexm(icd10,"C47")|regexm(icd10,"C49")) //3 changes
replace sitecr5db=26 if siteiarc==25 //7 changes
replace sitecr5db=27 if (regexm(icd10,"C51")|regexm(icd10,"C52")|regexm(icd10,"C57")|regexm(icd10,"C58")) //2 changes
replace sitecr5db=28 if (regexm(icd10,"C60")|regexm(icd10,"C63")) //2 changes
replace sitecr5db=29 if (regexm(icd10,"C74")|regexm(icd10,"C75")) //0 changes
replace sitecr5db=30 if siteiarc==59 //2 changes
replace sitecr5db=31 if siteiarc==60 //1 change
replace sitecr5db=32 if siteiarc==64 //0 changes
replace sitecr5db=34 if icd10=="C380"|icd10=="C699"|icd10=="C865"|icd10=="C866" //4 changes

tab sitecr5db ,m

***********************
** Create ICD10 site **
***********************
** Create variable based on ICD-10 2010 version to use in graphs (dofile 12) - may not use
gen siteicd10=.
label define siteicd10_lab ///
1 "C00-C14: lip,oral cavity & pharynx" ///
2 "C15-C26: digestive organs" ///
3 "C30-C39: respiratory & intrathoracic organs" ///
4 "C40-C41: bone & articular cartilage" ///
5 "C43: melanoma" ///
6 "C44: other skin" ///
7 "C45-C49: mesothelial & soft tissue" ///
8 "C50: breast" ///
9 "C51-C58: female genital organs" ///
10 "C61: prostate" ///
11 "C60-C62,C63: male genital organs" ///
12 "C64-C68: urinary tract" ///
13 "C69-C72: eye,brain,other CNS" ///
14 "C73-C75: thyroid & other endocrine glands" ///
15 "C76-C79: ill-defined sites" ///
16 "C80: primary site unknown" ///
17 "C81-C96: lymphoid & haem"
label var siteicd10 "ICD-10 site of tumour"
label values siteicd10 siteicd10_lab


replace siteicd10=1 if (regexm(icd10,"C00")|regexm(icd10,"C01")|regexm(icd10,"C02") ///
					 |regexm(icd10,"C03")|regexm(icd10,"C04")|regexm(icd10,"C05") ///
					 |regexm(icd10,"C06")|regexm(icd10,"C07")|regexm(icd10,"C08") ///
					 |regexm(icd10,"C09")|regexm(icd10,"C10")|regexm(icd10,"C11") ///
					 |regexm(icd10,"C12")|regexm(icd10,"C13")|regexm(icd10,"C14")) //9 changes
replace siteicd10=2 if (regexm(icd10,"C15")|regexm(icd10,"C16")|regexm(icd10,"C17") ///
					 |regexm(icd10,"C18")|regexm(icd10,"C19")|regexm(icd10,"C20") ///
					 |regexm(icd10,"C21")|regexm(icd10,"C22")|regexm(icd10,"C23") ///
					 |regexm(icd10,"C24")|regexm(icd10,"C25")|regexm(icd10,"C26")) //194 changes
replace siteicd10=3 if (regexm(icd10,"C30")|regexm(icd10,"C31")|regexm(icd10,"C32")|regexm(icd10,"C33")|regexm(icd10,"C34")|regexm(icd10,"C37")|regexm(icd10,"C38")|regexm(icd10,"C39")) //33 changes
replace siteicd10=4 if (regexm(icd10,"C40")|regexm(icd10,"C41")) //2 changes
replace siteicd10=5 if siteiarc==24 //4 changes
replace siteicd10=6 if siteiarc==25 //4 changes
replace siteicd10=7 if (regexm(icd10,"C45")|regexm(icd10,"C46")|regexm(icd10,"C47")|regexm(icd10,"C48")|regexm(icd10,"C49")) //3 changes
replace siteicd10=8 if regexm(icd10,"C50") //64 changes
replace siteicd10=9 if (regexm(icd10,"C51")|regexm(icd10,"C52")|regexm(icd10,"C53")|regexm(icd10,"C54")|regexm(icd10,"C55")|regexm(icd10,"C56")|regexm(icd10,"C57")|regexm(icd10,"C58")) //67 changes
replace siteicd10=10 if regexm(icd10,"C61") //104 changes
replace siteicd10=11 if (regexm(icd10,"C60")|regexm(icd10,"C62")|regexm(icd10,"C63")) //0 changes
replace siteicd10=12 if (regexm(icd10,"C64")|regexm(icd10,"C65")|regexm(icd10,"C66")|regexm(icd10,"C67")|regexm(icd10,"C68")) //21 changes
replace siteicd10=13 if (regexm(icd10,"C69")|regexm(icd10,"C70")|regexm(icd10,"C71")|regexm(icd10,"C72")) //10 changes
replace siteicd10=14 if (regexm(icd10,"C73")|regexm(icd10,"C74")|regexm(icd10,"C75")) //5 changes
replace siteicd10=15 if (regexm(icd10,"C76")|regexm(icd10,"C77")|regexm(icd10,"C78")|regexm(icd10,"C79")) //0 changess
replace siteicd10=16 if regexm(icd10,"C80") //46 changes
replace siteicd10=17 if (regexm(icd10,"C81")|regexm(icd10,"C82")|regexm(icd10,"C83") ///
					 |regexm(icd10,"C84")|regexm(icd10,"C85")|regexm(icd10,"C86") ///
					 |regexm(icd10,"C87")|regexm(icd10,"C88")|regexm(icd10,"C89") ///
					 |regexm(icd10,"C90")|regexm(icd10,"C91")|regexm(icd10,"C92") ///
					 |regexm(icd10,"C93")|regexm(icd10,"C94")|regexm(icd10,"C95") ///
					 |regexm(icd10,"C96")|regexm(icd10,"D46")|regexm(icd10,"D47")) //65 changes


tab siteicd10 ,m //0 missing

drop recstatdc tfdddoa tfddda tfregnumstart tfdistrictstart tfregnumend tfdistrictend tfddtxt recstattf
	 
order record_id did fname lname age age5 age_10 sex dob nrn parish dod dodyear cancer siteiarc siteiarchaem pod coddeath


label data "BNR MORTALITY data 2015"
notes _dta :These data prepared from BB national death register & Redcap deathdata database
save "`datapath'\version02\3-output\2015_prep mort" ,replace
note: TS This dataset is used for analysis of age-standardized mortality rates
note: TS This dataset includes patients with multiple eligible cancer causes of death


**************************
**     	  Preparing     **
** 		2016 Deaths 	**
**************************
***********************
use "`datapath'\version02\3-output\2008-2018_deaths_tf" ,clear

** Next we get rid of those who died pre- and post-2016 as 2015, 2017 and 2018 deaths prepared previously
drop if dod<d(01jan2016) | dod>d(31dec2016) //24347 deleted
** Remove Tracking Form info
drop if event==2 //73 deleted

count //2488

*****************
**  Formatting **
**    Names    **
*****************
rename namematch nm

** Need to check for duplicate death registrations
** First split full name into first, middle and last names
** Also - code to split full name into 2 variables fname and lname - else can't merge! 
split pname, parse(", "" ") gen(name)
order record_id pname name*
sort record_id

** Use Stata browse to view results as changes are made
** (1) sort cases that contain only a first name and a last name
count if name5=="" & name4=="" & name3=="" & name2=="" //1
count if name5=="" & name4=="" & name3=="" //1862
count if name5=="" //2486
count if name5!="" & name4=="" & name3=="" & name2=="" //0
count if name5!="" //2
count if name4=="" & name3=="" & name2=="" //1
count if name4!="" & name3=="" & name2=="" //0
count if name4=="" //2437
count if name4!="" //51
count if name3=="" & name2=="" //1
count if name3!="" & name2=="" //0
count if name3=="" //1862
count if name2=="" //1
count if name2!="" //2487
count if name1=="" //0
replace name5="99" if record_id==19523 //1 change
replace name5=name2 if name5=="" & name4=="" & name3=="" //1861 changes
replace name2="" if name3=="" & name4=="" //1861 changes

** (2) sort cases with name 'baby' or 'b/o' in name1 variable
count if (regexm(name1,"BABY")|regexm(name1,"B/O")|regexm(name1,"MALE")|regexm(name1,"FEMALE")) //10
gen tempvarn=1 if (regexm(name1,"BABY")|regexm(name1,"B/O")|regexm(name1,"MALE")|regexm(name1,"FEMALE"))
//list record_id pname name1 name2 name3 name4 name5 if tempvarn==1
replace name1=name1+" "+name2 if tempvarn==1 & record_id!=20375 //9 changes
replace name2=name3 if tempvarn==1 & record_id!=20375 //9 changes
replace name5=name4 if tempvarn==1 & record_id!=20375 //9 changes
replace name3="" if tempvarn==1 & record_id!=20375 //9 changes
replace name4="" if tempvarn==1 & record_id!=20375 //9 changes

** (3)
** Names containing 'ST' are being interpreted as 'ST'=name1/fname so correct
count if name1=="ST" | name1=="ST." //5
replace tempvarn=2 if name1=="ST" | name1=="ST."
//list record_id pname name1 name2 name5 if tempvarn==2
replace name1=name1+"."+""+name2 if tempvarn==2 //5 changes
replace name2="" if tempvarn==2 //5 changes
replace name5=name3 if tempvarn==2 & record_id!=20508 //4 changes
replace name5=name4 if record_id==20508 //1 change
replace name2=name3 if record_id==20508 //1 change
replace name3="" if tempvarn==2 //4 changes
replace name4="" if tempvarn==2 //1 change
//replace name1 = subinstr(name1, ".", "",1) if record_id==24517|record_id==24774
** Names containing 'ST' are being interpreted as 'ST'=name2/fname so correct
count if name2=="ST" | name2=="ST." //14
replace tempvarn=3 if name2=="ST" | name2=="ST."
replace name2=name2+"."+""+name3 if tempvarn==3 //14 changes
replace name2 = subinstr(name2, ".", "",1) if record_id==19323|record_id==19969
replace name3="" if tempvarn==3 //14 changes
replace name5=name4 if tempvarn==3 //6 changes
replace name4="" if tempvarn==3 //6 changes
replace name5=name2 if tempvarn==3 & name5=="" //8 changes
replace name2="" if tempvarn==3 & name5==name2 //8 changes
** Names containing 'ST' are being interpreted as 'ST'=name3/fname so correct
count if name3=="ST" | name3=="ST." //1
replace tempvarn=4 if name3=="ST" | name3=="ST."
replace name5=name3+"."+""+name4 if tempvarn==4 //1 change
replace name3="" if tempvarn==4 //1 change
replace name4="" if tempvarn==4 //1 change
** Names containing 'ST' are being interpreted as 'ST'=name3/fname so correct
count if name4=="ST" | name4=="ST." //1
replace tempvarn=5 if name4=="ST" | name4=="ST."
replace name5=name4+"."+""+name5 if tempvarn==5 //1 change
replace name4="" if tempvarn==5 //1 change

** (4) sort cases with name in name4 variable
count if name4!="" //33
//list record_id *name* if name4!=""
replace name5=name4 if name4!="" & name5==""
replace name2=name2+" "+name3+" "+name4 if record_id==20877
replace name4="" if name4==name5 //32 changes
replace name3="" if record_id==20877
replace name4="" if record_id==20877

** (5) sort cases with name in name3 variable
count if name3!="" //597
//list record_id *name* if name5!=""
replace name5=name3 if name3!="" & name4=="" & name5=="" //563 changes
replace name3="" if name3==name5 //563 changes
replace name2=name2+" "+name3+" " if name3!="" & record_id!=20249
replace name3="" if name3!="" & record_id!=20249
replace name5=name3+" "+name5 if record_id==20249
replace name3="" if record_id==20249

** (6) sort cases with NO name in name5 variable
count if name5=="" //0
//list record_id *name* if name3==""
//replace name3=substr(name1,6,11) if record_id==25303

** (7) sort cases with suffixes
count if (name5!="" & name5!="99") & length(name5)<4 //18 - all correct
//replace tempvarn=6 if (name5!="" & name5!="99") & length(name5)<4
//list record_id pname fname mname lname if (lname!="" & lname!="99") & length(lname)<3

** Now rename, check and remove unnecessary variables
rename name1 fname
rename name2 mname
rename name5 lname
count if fname=="" //0
count if lname=="" //0
drop name4 name3 tempvarn

** Convert names to lower case and strip possible leading/trailing blanks
replace fname = lower(rtrim(ltrim(itrim(fname)))) //2488 changes
replace mname = lower(rtrim(ltrim(itrim(mname)))) //612 changes
replace lname = lower(rtrim(ltrim(itrim(lname)))) //2487 changes

rename nm namematch
order record_id pname fname mname lname namematch

*************************
** Checking & Removing ** 
**   Duplicate Death   **
**    Registrations    **
*************************
/* 
NB: These deaths were cleaned previously for importing into DeathData REDCapdb 
so the field namematch can be used as a guide for checking duplicates
	1=names match but different person
	2=no name match
*/
//label define namematch_lab 1 "deaths only namematch,diff.pt" 2 "no namematch" 3 "cr5 & death namematch,diff.pt" 4 "slc=2/9,not in deathdata", modify
//label values namematch namematch_lab
sort lname fname record_id
quietly by lname fname : gen dupname = cond(_N==1,0,_n)
sort lname fname record_id
count if dupname>0 //32
//list record_id fname lname nrn dod addr namematch if dupname>0
replace namematch=1 if dupname>0 & namematch!=1
/* 
Check below list for cases where namematch=no match but 
there is a pt with same name then:
 (1) check if same pt and remove duplicate pt;
 (2) check if same name but different pt and
	 update namematch variable to reflect this, i.e.
	 namematch=1
*/

preserve
drop if nrn==.
sort nrn 
quietly by nrn : gen dupnrn = cond(_N==1,0,_n)
sort nrn record_id lname fname
count if dupnrn>0 //0
list record_id namematch fname lname nrn dod sex age if dupnrn>0
//replace namematch=1 if dupnrn>0 //3 changes
restore

** Final check for duplicates by name and dod 
sort lname fname dod
quietly by lname fname dod: gen dupdod = cond(_N==1,0,_n)
sort lname fname dod record_id
count if dupdod>0 //2 - diff.pt & namematch already=1
//list record_id namematch fname lname nrn dod sex age if dupdod>0
count if dupdod>0 & namematch!=1 //0

count //2488

** Now generate a new variable which will select out all the potential cancers
gen cancer=.
label define cancer_lab 1 "cancer" 2 "not cancer", modify
label values cancer cancer_lab
label var cancer "cancer diagnoses"
label var record_id "Event identifier for registry deaths"

** searching cod1a for these terms
replace cod1a="99" if cod1a=="999" //0 changes
replace cod1b="99" if cod1b=="999" //0 changes
replace cod1c="99" if cod1c=="999" //0 changes
replace cod1d="99" if cod1d=="999" //0 changes
replace cod2a="99" if cod2a=="999" //0 changes
replace cod2b="99" if cod2b=="999" //0 changes
count if cod1c!="99" //0
count if cod1d!="99" //0
count if cod2a!="99" //0
count if cod2b!="99" //0
//ssc install unique
//ssc install distinct
** Create variable with combined CODs
gen coddeath=cod1a+" "+cod1b+" "+cod1c+" "+cod1d+" "+cod2a+" "+cod2b
replace coddeath=subinstr(coddeath,"99 ","",.) //2488
replace coddeath=subinstr(coddeath," 99","",.) //2488
** Identify cancer deaths using variable called 'cancer'
replace cancer=1 if regexm(coddeath, "CANCER") & cancer==. //311 changes
replace cancer=1 if regexm(coddeath, "TUMOUR") &  cancer==. //12 changes
replace cancer=1 if regexm(coddeath, "TUMOR") &  cancer==. //6 changes
replace cancer=1 if regexm(coddeath, "MALIGNANT") &  cancer==. //6 changes
replace cancer=1 if regexm(coddeath, "MALIGNANCY") &  cancer==. //36 changes
replace cancer=1 if regexm(coddeath, "NEOPLASM") &  cancer==. //4 changes
replace cancer=1 if regexm(coddeath, "CARCINOMA") &  cancer==. //196 changes
replace cancer=1 if regexm(coddeath, "CARCIMONA") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "CARINOMA") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "MYELOMA") &  cancer==. //25 changes
replace cancer=1 if regexm(coddeath, "LYMPHOMA") &  cancer==. //16 changes
replace cancer=1 if regexm(coddeath, "LYMPHOMIA") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "LYMPHONA") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "SARCOMA") &  cancer==. //4 changes
replace cancer=1 if regexm(coddeath, "TERATOMA") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "LEUKEMIA") &  cancer==. //17 changes
replace cancer=1 if regexm(coddeath, "LEUKAEMIA") &  cancer==. //3 changes
replace cancer=1 if regexm(coddeath, "HEPATOMA") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "CARANOMA PROSTATE") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "MENINGIOMA") &  cancer==. //4 changes
replace cancer=1 if regexm(coddeath, "MYELOSIS") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "MYELOFIBROSIS") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "CYTHEMIA") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "CYTOSIS") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "BLASTOMA") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "METASTATIC") &  cancer==. //4 changes
replace cancer=1 if regexm(coddeath, "MASS") &  cancer==. //18 changes
replace cancer=1 if regexm(coddeath, "METASTASES") &  cancer==. //2 changes
replace cancer=1 if regexm(coddeath, "METASTASIS") &  cancer==. //1 change
replace cancer=1 if regexm(coddeath, "REFRACTORY") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "FUNGOIDES") &  cancer==. //0 change
replace cancer=1 if regexm(coddeath, "HODGKIN") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "MELANOMA") &  cancer==. //1 change
replace cancer=1 if regexm(coddeath,"MYELODYS") &  cancer==. //2 changes
replace cancer=1 if regexm(coddeath,"ASTROCYTOMA") &  cancer==. //2 changes
replace cancer=1 if regexm(coddeath,"CARCINOME") &  cancer==. //1 change
replace cancer=1 if regexm(coddeath,"MALIGANCY") &  cancer==. //1 change
replace cancer=1 if regexm(coddeath,"MULTIFORME") &  cancer==. //1 change
//replace cancer=1 if regexm(coddeath,"GLIOMA") &  cancer==. //add in for next dc year

** Strip possible leading/trailing blanks in cod1a
replace coddeath = rtrim(ltrim(itrim(coddeath))) //0 changes

tab cancer, missing //1820 missing

drop dodyear
gen dodyear=year(dod)
tab dodyear cancer,m

** Check that all cancer CODs for 2016 are eligible
sort coddeath record_id
order record_id coddeath
//list coddeath if cancer==1 & inrange(record_id, 0, 24000)
** 588
//list coddeath if cancer==1 & inrange(record_id, 24001, 27000)
** 778

** Replace 2014 cases that are not cancer according to eligibility SOP:
/*
	(1) After merge with CR5 data then may need to reassign some of below 
		deaths as CR5 data may indicate eligibility while COD may exclude
		(e.g. see record_id==15458)
	(2) use obsid to check for CODs that incomplete in Results window with 
		Data Editor in browse mode-copy and paste record_id below from here
*/
replace cancer=2 if ///
record_id==20185|record_id==19919|record_id==19843|record_id==20148|record_id==20393| ///
record_id==20591|record_id==19735|record_id==19559|record_id==20315|record_id==20142| ///
record_id==19561|record_id==20137|record_id==20974|record_id==19403|record_id==20492| ///
record_id==21145|record_id==19954|record_id==19608|record_id==21301|record_id==20599| ///
record_id==20027|record_id==19417|record_id==19322|record_id==19987|record_id==21677| ///
record_id==20385|record_id==20885|record_id==21071|record_id==20878|record_id==21652| ///
record_id==20956|record_id==20402|record_id==20796|record_id==21251|record_id==20570
//replace coddeath=subinstr(coddeath,"GLIORRIA","GLIOMA",.) //1 change
//35 changes

** Check that all 2014 CODs that are not cancer for eligibility
tab dodyear cancer,m
count if cancer==. & inrange(record_id, 0, 23000) //873
count if cancer==. & inrange(record_id, 23001, 24000) //761
count if cancer==. & inrange(record_id, 24001, 2000) //725
//list coddeath if cancer==. & inrange(record_id, 0, 24000)
//list coddeath if cancer==. & inrange(record_id, 24001, 27000)

** No updates needed from above list
replace cancer=1 if ///
record_id==19812|record_id==20473


replace cancer=2 if cancer==. //1813 changes

** Create cod variable 
gen cod=.
label define cod_lab 1 "Dead of cancer" 2 "Dead of other cause" 3 "Not known" 4 "NA", modify
label values cod cod_lab
label var cod "COD categories"
replace cod=1 if cancer==1 //640 changes
replace cod=2 if cancer==2 //1848 changes
** one unknown causes of death in 2014 data - record_id 12323
replace cod=3 if coddeath=="99"|(regexm(coddeath,"INDETERMINATE")|regexm(coddeath,"UNDETERMINED")) //11 changes

** Change sex to match cancer dataset
tab sex ,m
rename sex sex_old
gen sex=1 if sex_old==2 //2467 changes
replace sex=2 if sex_old==1 //2587 changes
drop sex_old
label define sex_lab 1 "Female" 2 "Male", modify
label values sex sex_lab
label var sex "Sex"
tab sex ,m

** Remove, relabel certain variables for merging with cancer ds
gen dds2dod=dod
format dds2dod %tdCCYY-NN-DD

order record_id regnum nrn pname fname lname sex age dod cancer cod1a addr parish pod
/*
rename regnum dds2regnum 
rename pname dds2pname 
rename age dds2age 
rename cancer dds2cancer 
rename cod1a dds2cod1a 
rename address dds2address 
rename parish dds2parish 
rename pod dds2pod 
rename coddeath dds2coddeath
rename mname dds2mname 
rename namematch dds2namematch 
rename event dds2event 
rename dddoa dds2dddoa 
rename ddda dds2ddda 
rename odda dds2odda 
rename certtype dds2certtype 
rename district dds2district 
rename agetxt dds2agetxt 
rename nrnnd dds2nrnnd
rename mstatus dds2mstatus 
rename occu dds2occu 
rename durationnum dds2durationnum 
rename durationtxt dds2durationtxt 
rename onsetnumcod1a dds2onsetnumcod1a 
rename onsettxtcod1a dds2onsettxtcod1a 
rename cod1b dds2cod1b
rename onsetnumcod1b dds2onsetnumcod1b 
rename onsettxtcod1b dds2onsettxtcod1b 
rename cod1c dds2cod1c 
rename onsetnumcod1c dds2onsetnumcod1c 
rename onsettxtcod1c dds2onsettxtcod1c 
rename cod1d dds2cod1d 
rename onsetnumcod1d dds2onsetnumcod1d
rename onsettxtcod1d dds2onsettxtcod1d 
rename cod2a dds2cod2a 
rename onsetnumcod2a dds2onsetnumcod2a 
rename onsettxtcod2a dds2onsettxtcod2a 
rename cod2b dds2cod2b 
rename onsetnumcod2b dds2onsetnumcod2b 
rename onsettxtcod2b dds2onsettxtcod2b
rename deathparish dds2deathparish 
rename regdate dds2regdate 
rename certifier dds2certifier 
rename certifieraddr dds2certifieraddr 
rename recstatdc dds2recstatdc 
rename tfdddoa dds2tfdddoa 
rename tfddda dds2tfddda 
rename tfregnumstart dds2tfregnumstart
rename tfdistrictstart dds2tfdistrictstart 
rename tfregnumend dds2tfregnumend 
rename tfdistrictend dds2tfdistrictend 
rename tfddtxt dds2tfddtxt 
rename recstattf dds2recstattf 
rename duprec dds2duprec 
rename dupname dds2dupname 
rename dupdod dds2dupdod
rename dodyear dds2dodyear 
rename cod dds2cod
*/
count //2488

label data "BNR MORTALITY data 2016"
notes _dta :These data prepared from BB national death register & Redcap deathdata database
save "`datapath'\version02\3-output\2016_deaths_for_matching" ,replace
note: TS This dataset can be used for matching 2016 deaths with incidence data

clear

**********************
** Create 2015		**
**  Death Dataset	**
**	For Matching    **	
**********************
use "`datapath'\version02\3-output\2015_prep mort_ALL" ,clear
/*
** Remove, relabel certain variables for merging with cancer ds
gen dds2dod=dod
format dds2dod %tdCCYY-NN-DD
drop dod
*/
order record_id regnum nrn pname fname lname sex age dod cancer cod1a addr parish pod
/*
rename regnum dds2regnum 
rename pname dds2pname 
rename age dds2age 
rename cancer dds2cancer 
rename cod1a dds2cod1a 
rename address dds2address 
rename parish dds2parish 
rename pod dds2pod 
rename coddeath dds2coddeath
rename mname dds2mname 
rename namematch dds2namematch 
rename event dds2event 
rename dddoa dds2dddoa 
rename ddda dds2ddda 
rename odda dds2odda 
rename certtype dds2certtype 
rename district dds2district 
rename agetxt dds2agetxt 
rename nrnnd dds2nrnnd
rename mstatus dds2mstatus 
rename occu dds2occu 
rename durationnum dds2durationnum 
rename durationtxt dds2durationtxt 
rename onsetnumcod1a dds2onsetnumcod1a 
rename onsettxtcod1a dds2onsettxtcod1a 
rename cod1b dds2cod1b
rename onsetnumcod1b dds2onsetnumcod1b 
rename onsettxtcod1b dds2onsettxtcod1b 
rename cod1c dds2cod1c 
rename onsetnumcod1c dds2onsetnumcod1c 
rename onsettxtcod1c dds2onsettxtcod1c 
rename cod1d dds2cod1d 
rename onsetnumcod1d dds2onsetnumcod1d
rename onsettxtcod1d dds2onsettxtcod1d 
rename cod2a dds2cod2a 
rename onsetnumcod2a dds2onsetnumcod2a 
rename onsettxtcod2a dds2onsettxtcod2a 
rename cod2b dds2cod2b 
rename onsetnumcod2b dds2onsetnumcod2b 
rename onsettxtcod2b dds2onsettxtcod2b
rename deathparish dds2deathparish 
rename regdate dds2regdate 
rename certifier dds2certifier 
rename certifieraddr dds2certifieraddr 
//rename recstatdc dds2recstatdc 
//rename tfdddoa dds2tfdddoa 
//rename tfddda dds2tfddda 
//rename tfregnumstart dds2tfregnumstart
//rename tfdistrictstart dds2tfdistrictstart 
//rename tfregnumend dds2tfregnumend 
//rename tfdistrictend dds2tfdistrictend 
//rename tfddtxt dds2tfddtxt 
//rename recstattf dds2recstattf 
rename duprec dds2duprec 
rename dupname dds2dupname 
rename dupdod dds2dupdod
//rename dodyear dds2dodyear 
//rename cod dds2cod
//rename record_id dds2record_id
//rename nrn dds2nrn
*/
count //2482

label data "BNR MORTALITY data 2015"
notes _dta :These data prepared from BB national death register & Redcap deathdata database
save "`datapath'\version02\3-output\2015_deaths_for_matching" ,replace
note: TS This dataset can be used for matching 2015 deaths with incidence data

clear

**********************
** Create 2015-2018 **
**  Death Dataset	**
**	For Matching    **	
**********************
use "`datapath'\version02\3-output\2017-2018_deaths_for_matchingV02" ,clear
count //5054
append using "`datapath'\version02\3-output\2016_deaths_for_matching"
count //7542

** Create natregno to match with cancer dataset
gen double nrn2=nrn
format nrn2 %15.0g
rename nrn2 natregno
tostring natregno ,replace
//gen nrn4=mod(nrn,10000) - extracting digits from NRN(number)
count if natregno!="" & natregno!="." & length(natregno)!=10 //36
gen nrnyear=dodyear-age if natregno!="" & natregno!="." & length(natregno)!=10
list record_id fname lname dod age agetxt nrn natregno nrnyear if natregno!="" & natregno!="." & length(natregno)!=10
replace natregno=subinstr(natregno,"1","01",.) if record_id==23433
replace natregno=subinstr(natregno,"204","0204",.) if record_id==24773
replace natregno=subinstr(natregno,"70","070",.) if record_id==22783
replace natregno=subinstr(natregno,"1","01",.) if record_id==24567
replace natregno=subinstr(natregno,"7","07",.) if record_id==25005
replace natregno=subinstr(natregno,"3","03",.) if record_id==23734
replace natregno=subinstr(natregno,"801","0801",.) if record_id==26779
replace natregno=subinstr(natregno,"40","00040",.) if record_id==23396
replace natregno=subinstr(natregno,"201","0201",.) if record_id==25898
replace natregno=subinstr(natregno,"1","01",.) if record_id==23952
replace natregno=subinstr(natregno,"1","01",.) if record_id==23475
replace natregno=subinstr(natregno,"3","0003",.) if record_id==24943
replace natregno=subinstr(natregno,"5","0005",.) if record_id==22031
replace natregno=subinstr(natregno,"4","04",.) if record_id==22104
replace natregno=subinstr(natregno,"40","040",.) if record_id==23677
replace natregno=subinstr(natregno,"903","0903",.) if record_id==26175
replace natregno=subinstr(natregno,"1","01",.) if record_id==23702
replace natregno=subinstr(natregno,"51","051",.) if record_id==25973
replace natregno=subinstr(natregno,"40","040",.) if record_id==24205
replace natregno=subinstr(natregno,"80","080",.) if record_id==24418
replace natregno=subinstr(natregno,"3","03",.) if record_id==24273
replace natregno=subinstr(natregno,"1","001",.) if record_id==26686
replace natregno=subinstr(natregno,"30","030",.) if record_id==26788
replace natregno=subinstr(natregno,"4","04",.) if record_id==22552
replace natregno=subinstr(natregno,"4","04",.) if record_id==22692
replace natregno=subinstr(natregno,"606","0606",.) if record_id==22449
replace natregno=subinstr(natregno,"12","0012",.) if record_id==24509
replace natregno=subinstr(natregno,"8","0008",.) if record_id==21416
replace natregno=subinstr(natregno,"9","09",.) if record_id==20866
replace natregno=subinstr(natregno,"20","020",.) if record_id==21274
replace natregno=subinstr(natregno,"1","001",.) if record_id==19509
replace natregno=subinstr(natregno,"9","09",.) if record_id==20944
replace natregno=subinstr(natregno,"81","081",.) if record_id==21017
replace natregno=subinstr(natregno,"4","04",.) if record_id==19629
replace natregno=subinstr(natregno,"9","09",.) if record_id==21361
replace natregno=subinstr(natregno,"7","007",.) if record_id==20583

append using "`datapath'\version02\3-output\2015_deaths_for_matching", force
count //10024

format dod %tdCCYY-NN-DD
drop dodyear
gen dodyear=year(dod)
replace natregno="" if natregno=="." //492 changes
drop dds2dod

rename dod dds2dod
rename natregno dds2natregno
rename regnum dds2regnum 
rename pname dds2pname 
rename age dds2age 
rename cancer dds2cancer 
rename cod1a dds2cod1a 
rename address dds2address 
rename parish dds2parish 
rename pod dds2pod 
rename coddeath dds2coddeath
rename mname dds2mname 
rename namematch dds2namematch 
rename event dds2event 
rename dddoa dds2dddoa 
rename ddda dds2ddda 
rename odda dds2odda 
rename certtype dds2certtype 
rename district dds2district 
rename agetxt dds2agetxt 
rename nrnnd dds2nrnnd
rename mstatus dds2mstatus 
rename occu dds2occu 
rename durationnum dds2durationnum 
rename durationtxt dds2durationtxt 
rename onsetnumcod1a dds2onsetnumcod1a 
rename onsettxtcod1a dds2onsettxtcod1a 
rename cod1b dds2cod1b
rename onsetnumcod1b dds2onsetnumcod1b 
rename onsettxtcod1b dds2onsettxtcod1b 
rename cod1c dds2cod1c 
rename onsetnumcod1c dds2onsetnumcod1c 
rename onsettxtcod1c dds2onsettxtcod1c 
rename cod1d dds2cod1d 
rename onsetnumcod1d dds2onsetnumcod1d
rename onsettxtcod1d dds2onsettxtcod1d 
rename cod2a dds2cod2a 
rename onsetnumcod2a dds2onsetnumcod2a 
rename onsettxtcod2a dds2onsettxtcod2a 
rename cod2b dds2cod2b 
rename onsetnumcod2b dds2onsetnumcod2b 
rename onsettxtcod2b dds2onsettxtcod2b
rename deathparish dds2deathparish 
rename regdate dds2regdate 
rename certifier dds2certifier 
rename certifieraddr dds2certifieraddr 
//rename recstatdc dds2recstatdc 
//rename tfdddoa dds2tfdddoa 
//rename tfddda dds2tfddda 
//rename tfregnumstart dds2tfregnumstart
//rename tfdistrictstart dds2tfdistrictstart 
//rename tfregnumend dds2tfregnumend 
//rename tfdistrictend dds2tfdistrictend 
//rename tfddtxt dds2tfddtxt 
//rename recstattf dds2recstattf 
rename duprec dds2duprec 
rename dupname dds2dupname 
rename dupdod dds2dupdod
//rename dodyear dds2dodyear 
//rename cod dds2cod
//rename record_id dds2record_id
//rename nrn dds2nrn

label data "BNR MORTALITY data 2015-2018"
notes _dta :These data prepared from BB national death register & Redcap deathdata database
save "`datapath'\version02\3-output\2015-2018_deaths_for_matching" ,replace
note: TS This dataset can be used for matching 2015-2018 deaths with incidence data



***************************
** Preparing 2019 deaths **
***************************
***************
** DATA IMPORT  
***************
** LOAD the cleaned national registry deaths 2008-2020 excel/REDCap dataset
clear
import excel using "`datapath'\version02\1-input\BNRDeathData20082020_DATA_2020-09-10_1242_excel.xlsx" , firstrow case(lower)

count //

*******************
** DATA FORMATTING  
*******************
** PREPARE each variable according to the format and order in which they appear in DeathData REDCap database
** Next we get rid of those who died pre-and-post-2019
drop if dod<d(01jan2019) | dod>d(31dec2019) //28,392 deleted

count //3080

************************
**  DEATH CERTIFICATE **
**        FORM        **
************************

** (1) record_id (auto-generated by REDCap)
label var record_id "DeathID"

** (2) redcap_event_name (auto-generated by REDCap)
gen event=.
replace event=1 if redcap_event_name=="death_data_collect_arm_1"
replace event=2 if redcap_event_name=="tracking_arm_2"

label var event "Redcap Event Name"
label define event_lab 1 "DC arm 1" 2 "TF arm 2", modify
label values event event_lab

** Remove Tracking Form info
drop if event==2 //0 deleted - TFs got deleted with dod remove code above

count //3080

** (3) dddoa: Y-M-D H:M, readonly
gen double dddoa2 = clock(dddoa, "YMDhm")
format dddoa2 %tcCCYY-NN-DD_HH:MM
drop dddoa
rename dddoa2 dddoa
label var dddoa "ABS DateTime"

** (4) ddda
label var ddda "ABS DA"
label define ddda_lab 4 "KG" 13 "KWG" 14 "TH" 20 "NR" 25 "AH" 98 "intern", modify
label values ddda ddda_lab

** (5) odda
label var odda "ABS Other DA"

** (6) certtype: 1=MEDICAL 2=POST MORTEM 3=CORONER 99=ND, required
label var certtype "Certificate Type"
label define certtype_lab 1 "Medical" 2 "Post Mortem" 3 "Coroner" 99 "ND", modify
label values certtype certtype_lab

** (7) regnum: integer, if missing=9999
label var regnum "Registry Dept #"

** (8) district: 1=A 2=B 3=C 4=D 5=E 6=F
/* Districts are assigned based on death parish
	District A - anything below top rock christ church and st. michael 
	District B - anything above top rock christ church and st. george
	District C - st. philip and st. john
	District D - st. thomas
	District E - st. james, st. peter, st. lucy
	District F - st. joseph, st. andrew
*/
label var district "District"
label define district_lab 1 "A" 2 "B" 3 "C" 4 "D" 5 "E" 6 "F", modify
label values district district_lab

** (9) pname: Text, if missing=99
label var pname "Deceased's Name"
replace pname = rtrim(ltrim(itrim(pname))) //5 changes

** (10) address: Text, if missing=99
label var address "Deceased's Address"
replace address = rtrim(ltrim(itrim(address))) //20 changes

** (11) parish
label var parish "Deceased's Parish"
label define parish_lab 1 "Christ Church" 2 "St. Andrew" 3 "St. George" 4 "St. James" 5 "St. John" 6 "St. Joseph" ///
						7 "St. Lucy" 8 "St. Michael" 9 "St. Peter" 10 "St. Philip" 11 "St. Thomas" 99 "ND", modify
label values parish parish_lab

** (12) sex:	1=Male 2=Female 99=ND
label var sex "Sex"
label define sex_lab 1 "Male" 2 "Female" 99 "ND", modify
label values sex sex_lab

** (13) age: Integer - min=0, max=999
label var age "Age"

** (14) agetxt
label var agetxt "Age Qualifier"
label define agetxt_lab 1 "Minutes" 2 "Hours" 3 "Days" 4 "Weeks" 5 "Months" 6 "Years" 99 "ND", modify
label values agetxt agetxt_lab

** (15) nrnnd: 1=Yes 2=No
label define nrnnd_lab 1 "Yes" 2 "No", modify
label values nrnnd nrnnd_lab
label var nrnnd "Is National ID # documented?"

** (16) nrn: dob-####, partial missing=dob-9999, if missing=.
label var nrn "National ID #"
format nrn %15.0g

** (17) mstatus: 1=Single 2=Married 3=Separated/Divorced 4=Widowed/Widow/Widower 99=ND
label var mstatus "Marital Status"
label define mstatus_lab 1 "Single" 2 "Married" 3 "Separated/Divorced" 4 "Widowed/Widow/Widower" 99 "ND", modify
label values mstatus mstatus_lab

** (18) occu: Text, if missing=99
label var occu "Occupation"

** (19) durationnum: Integer - min=0, max=99, if missing=99
label var durationnum "Duration of Illness"

** (20) durationtxt
label var durationtxt "Duration Qualifier"
label define durationtxt_lab 1 "Days" 2 "Weeks" 3 "Months" 4 "Years" 99 "ND", modify
label values durationtxt durationtxt_lab

** (21) dod: Y-M-D
format dod %tdCCYY-NN-DD
label var dod "Date of Death"

** (22) dodyear (not included in single year Redcap db but done for multi-year Redcap db)
drop dodyear
gen int dodyear=year(dod)
label var dodyear "Year of Death"

** (23) cod1a: Text, if missing=99
label var cod1a "COD 1a"

** (24) onsetnumcod1a: Integer - min=0, max=99, if missing=99
label var onsetnumcod1a "Onset Death Interval-COD 1a"

** (25) onsettxtcod1a: 1=DAYS 2=WEEKS 3=MONTHS 4=YEARS
label var onsettxtcod1a "Onset Qualifier-COD 1a"
label define onsettxtcod1a_lab 1 "Days" 2 "Weeks" 3 "Months" 4 "Years" 99 "ND", modify
label values onsettxtcod1a onsettxtcod1a_lab

** (26) cod1b: Text, if missing=99
label var cod1b "COD 1b"

** (27) onsetnumcod1b: Integer - min=0, max=99, if missing=99
label var onsetnumcod1b "Onset Death Interval-COD 1b"

** (28) onsettxtcod1b: 1=DAYS 2=WEEKS 3=MONTHS 4=YEARS
label var onsettxtcod1b "Onset Qualifier-COD 1b"
label define onsettxtcod1b_lab 1 "Days" 2 "Weeks" 3 "Months" 4 "Years" 99 "ND", modify
label values onsettxtcod1b onsettxtcod1b_lab

** (29) cod1c: Text, if missing=99
label var cod1c "COD 1c"

** (30) onsetnumcod1c: Integer - min=0, max=99, if missing=99
label var onsetnumcod1c "Onset Death Interval-COD 1c"

** (31) onsettxtcod1c: 1=DAYS 2=WEEKS 3=MONTHS 4=YEARS
label var onsettxtcod1c "Onset Qualifier-COD 1c"
label define onsettxtcod1c_lab 1 "Days" 2 "Weeks" 3 "Months" 4 "Years" 99 "ND", modify
label values onsettxtcod1c onsettxtcod1c_lab

** (32) cod1d: Text, if missing=99
label var cod1d "COD 1d"

** (33) onsetnumcod1d: Integer - min=0, max=99, if missing=99
label var onsetnumcod1d "Onset Death Interval-COD 1d"

** (34) onsettxtcod1d: 1=DAYS 2=WEEKS 3=MONTHS 4=YEARS
label var onsettxtcod1d "Onset Qualifier-COD 1d"
label define onsettxtcod1d_lab 1 "Days" 2 "Weeks" 3 "Months" 4 "Years" 99 "ND", modify
label values onsettxtcod1d onsettxtcod1d_lab

** (35) cod2a: Text, if missing=99
label var cod2a "COD 2a"

** (36) onsetnumcod2a: Integer - min=0, max=99, if missing=99
label var onsetnumcod2a "Onset Death Interval-COD 2a"

** (37) onsettxtcod2a: 1=DAYS 2=WEEKS 3=MONTHS 4=YEARS
label var onsettxtcod2a "Onset Qualifier-COD 2a"
label define onsettxtcod2a_lab 1 "Days" 2 "Weeks" 3 "Months" 4 "Years" 99 "ND", modify
label values onsettxtcod2a onsettxtcod2a_lab

** (38) cod2b: Text, if missing=99
label var cod2b "COD 2b"

** (39) onsetnumcod2b: Integer - min=0, max=99, if missing=99
label var onsetnumcod2b "Onset Death Interval-COD 2b"

** (40) onsettxtcod2b: 1=DAYS 2=WEEKS 3=MONTHS 4=YEARS
label var onsettxtcod2b "Onset Qualifier-COD 2b"
label define onsettxtcod2b_lab 1 "Days" 2 "Weeks" 3 "Months" 4 "Years" 99 "ND", modify
label values onsettxtcod2b onsettxtcod2b_lab

** (41) pod: Text, if missing=99
label var pod "Place of Death"

** (42) deathparish
label var deathparish "Death Parish"
label define deathparish_lab 1 "Christ Church" 2 "St. Andrew" 3 "St. George" 4 "St. James" 5 "St. John" 6 "St. Joseph" ///
						7 "St. Lucy" 8 "St. Michael" 9 "St. Peter" 10 "St. Philip" 11 "St. Thomas" 99 "ND", modify
label values deathparish deathparish_lab

** (43) regdate: Y-M-D
label var regdate "Date of Registration"
format regdate %tdCCYY-NN-DD

** (44) certifier: Text, if missing=99
label var certifier "Name of Certifier"

** (45) certifieraddr: Text, if missing=99
label var certifieraddr "Address of Certifier"

** (46) namematch: readonly
label var namematch "Name Match"
label define namematch_lab 1 "names match but different person" 2 "no name match", modify
label values namematch namematch_lab

** (47) death_certificate_complete (auto-generated by REDCap): 0=Incomplete 1=Unverified 2=Complete
rename death_certificate_complete recstatdc
label var recstatdc "Record Status-DC Form"
label define recstatdc_lab 0 "Incomplete" 1 "Unverified" 2 "Complete", modify
label values recstatdc recstatdc_lab


*******************
** TRACKING FORM **
*******************

** (48) tfdddoa: Y-M-D H:M, readonly
replace tfdddoa = rtrim(ltrim(itrim(tfdddoa))) //30 changes
generate tfdddoa2=date(tfdddoa,"MDY")
format tfdddoa2 %tdYYYY-NN-DD
drop tfdddoa
rename tfdddoa2 tfdddoa
label var tfdddoa "TF Date-Start"

** (49) tfdddoatstart: HH:MM
format tfdddoatstart %tcHH:MM
label var tfdddoatstart "TF Time-Start"

** (50) tfddda: readonly, user logged into redcap
gen tfddda1=.
replace tfddda1=25 if tfddda=="ashley.henry" //using codebook tfddda to see all possible entries in this field
replace tfddda1=25 if tfddda=="ashleyhenry"
replace tfddda1=4 if tfddda=="karen.greene"
replace tfddda1=13 if tfddda=="kirt.gill"
replace tfddda1=20 if tfddda=="nicolette.roachford"
replace tfddda1=14 if tfddda=="tamisha.hunte"
replace tfddda1=98 if tfddda=="t.g"
replace tfddda1=98 if tfddda=="ivanna.bascombe"
replace tfddda1=98 if tfddda=="ib"
replace tfddda1=98 if tfddda=="asia.blackman"
replace tfddda1=98 if tfddda=="ab"
replace tfddda1=98 if tfddda=="shay.morrisdoty"
rename tfddda tfddda2
rename tfddda1 tfddda

label var tfddda "TF DA"
label define tfddda_lab 4 "KG" 13 "KWG" 14 "TH" 20 "NR" 25 "AH" 98 "intern", modify
label values tfddda tfddda_lab

** (51) tfregnumstart: integer
label var tfregnumstart "Registry #-Start"

** (52) tfdistrictstart: letters only
label var tfdistrictstart "District-Start"

** (53) tfregnumend: integer
label var tfregnumend "Registry #-End"

** (54) tfdistrictend: letters only
label var tfdistrictend "District-End"

** (55) tfdddoaend: Y-M-D
format tfdddoaend %tdCCYY-NN-DD
label var tfdddoaend "TF Date-End"

** (56) tfdddoatend: HH:MM
format tfdddoatend %tcHH:MM
label var tfdddoatend "TF Time-End"

** (57) tfddelapsedh: integer (imported to Stata as byte)
recast int tfddelapsedh
label var tfddelapsedh "Time Elpased (hrs)"

** (58) tfddelapsedm: integer
label var tfddelapsedm "Time Elpased (mins)"

** (59) tfddtxt
label var tfddtxt "TF Comments"

** (60) tracking_complete (auto-generated by REDCap): 0=Incomplete 1=Unverified 2=Complete
rename tracking_complete recstattf
label var recstattf "Record Status-TF Form"
label define recstattf_lab 0 "Incomplete" 1 "Unverified" 2 "Complete", modify
label values recstattf recstattf_lab

order record_id event dddoa ddda odda certtype regnum district pname address parish sex ///
      age agetxt nrnnd nrn mstatus occu durationnum durationtxt dod dodyear ///
      cod1a onsetnumcod1a onsettxtcod1a cod1b onsetnumcod1b onsettxtcod1b ///
      cod1c onsetnumcod1c onsettxtcod1c cod1d onsetnumcod1d onsettxtcod1d ///
      cod2a onsetnumcod2a onsettxtcod2a cod2b onsetnumcod2b onsettxtcod2b ///
      pod deathparish regdate certifier certifieraddr namematch cleaned recstatdc

drop tfdddoa tfdddoatstart tfddda tfddda2 tfregnumstart tfdistrictstart tfregnumend tfdistrictend tfdddoaend tfdddoatend tfddelapsedh tfddelapsedm tfddtxt recstattf

count //

label data "BNR MORTALITY data 2019"
notes _dta :These data prepared from BB national death register & Redcap deathdata database
save "`datapath'\version02\2-working\2019_deaths_prepped_dp" ,replace

**************************************
**     Prep 2019 death variables    **
** for matching with cancer dataset **
**************************************
use "`datapath'\version02\2-working\2019_deaths_prepped_dp" ,clear

count //3080

*****************
**  Formatting **
**    Names    **
*****************
rename namematch nm

** Need to check for duplicate death registrations
** First split full name into first, middle and last names
** Also - code to split full name into 2 variables fname and lname - else can't merge! 
split pname, parse(", "" ") gen(name)
order record_id pname name*
sort record_id

** Use Stata browse to view results as changes are made
** (1) sort cases that contain only a first name and a last name
count if name8=="" & name7=="" & name6=="" & name5=="" & name4=="" & name3=="" & name2=="" //2
count if name7=="" & name6=="" & name5=="" & name4=="" & name3=="" & name2=="" //2
count if name6=="" & name5=="" & name4=="" & name3=="" & name2=="" //2
count if name5=="" & name4=="" & name3=="" & name2=="" //2
count if name5=="" & name4=="" & name3=="" //2391
count if name9!="" //1
count if name8!="" //2
count if name7!="" //3
count if name6!="" //3
count if name5!="" //4
count if name4!="" //57
count if name3!="" //689
count if name2!="" //3078
count if name1!="" //3080

** In view of above numbers, name3 will become lname so manually reassign name4-name9 (use Stata data editor/browse to manually view the fields)
** count if name9!="" //1
replace name1=name1+" "+name5+" "+name6+" "+name7+" "+name8+" "+name9 if record_id==28494
replace name2=name2+" "+name3 if record_id==28494
replace name3=name4 if record_id==28494
**count if name8!="" //2
replace name1=name1+" "+name4+" "+name5+" "+name6+" "+name7+" "+name8 if record_id==28164
**count if name7!="" //3
replace name1=name1+" "+name4+" "+name5+" "+name6+" "+name7 if record_id==28087
** count if name6!="" //3
//no changes needed
**count if name5!="" //4
replace name2=name2+" "+name3+"."+name4+" " if record_id==29474
replace name3=name5 if record_id==29474
**count if name4!="" //57
replace name2=name2+" "+name3 if name4!="" & record_id!=28494 & record_id!=28164 & record_id!=28087 & record_id!=29474 //53 changes
replace name3=name4 if name4!="" & record_id!=28494 & record_id!=28164 & record_id!=28087 & record_id!=29474 //53 changes

** Remove names from name4-name9
replace name9="" if name9!="" //1 change
replace name8="" if name8!="" //2 changes
replace name7="" if name7!="" //3 changes
replace name6="" if name6!="" //3 changes
replace name5="" if name5!="" //4 changes
replace name4="" if name4!="" //57 changes

** Update name2
count if name3=="" //2391
replace name3=name2 if name3=="" //2389 changes
replace name2="" if name2==name3 //2389 changes
//2 missing last names in REDCap database so cross-referenced in electoral list and found last names so need to merge abbreviated electoral list with this dataset

preserve
clear
import excel using "`datapath'\version02\1-input\Electoral_20200914.xlsx" , firstrow case(lower)
save "`datapath'\version02\2-working\2019_electoral_lname" ,replace
restore
merge 1:1 record_id using "`datapath'\version02\2-working\2019_electoral_lname" ,force
destring elec_nrn ,replace
format elec_nrn %15.0g
replace nrn=elec_nrn if record_id==28513 //1 change
replace name2=elec_name2 if record_id==28513 //1 change
replace name2=elec_name2 if record_id==27182 //1 change
replace name3=elec_name3 if record_id==27182 //1 change
drop elec_* _merge


count if name1=="" //0
count if name2=="" //2389
count if name3=="" //0

** sort cases with suffixes
count if (name3!="" & name3!="99") & length(name3)<4 //23 - all correct
//list record_id pname name1 name2 name3 if (name3!="" & name3!="99") & length(name3)<4

** Now rename, check and remove unnecessary variables
rename name1 fname
rename name2 mname
rename name3 lname
count if fname=="" //0
count if lname=="" //0
drop name4 name5 name6 name7 name8 name9

** Convert names to lower case and strip possible leading/trailing blanks
replace fname = lower(rtrim(ltrim(itrim(fname)))) //3080 changes
replace mname = lower(rtrim(ltrim(itrim(mname)))) //691 changes
replace lname = lower(rtrim(ltrim(itrim(lname)))) //3080 changes

rename nm namematch
order record_id pname fname mname lname namematch


** Now generate a new variable which will select out all the potential cancers
gen cancer=.
label define cancer_lab 1 "cancer" 2 "not cancer", modify
label values cancer cancer_lab
label var cancer "cancer diagnoses"
label var record_id "Event identifier for registry deaths"

** searching cod1a for these terms
replace cod1a="99" if cod1a=="999" //0 changes
replace cod1b="99" if cod1b=="999" //0 changes
replace cod1c="99" if cod1c=="999" //1 changes
replace cod1d="99" if cod1d=="999" //1 changes
replace cod2a="99" if cod2a=="999" //2 changes
replace cod2b="99" if cod2b=="999" //2 changes
count if cod1c!="99" //619
count if cod1d!="99" //159
count if cod2a!="99" //1236
count if cod2b!="99" //558
//ssc install unique
//ssc install distinct
** Create variable with combined CODs
gen coddeath=cod1a+" "+cod1b+" "+cod1c+" "+cod1d+" "+cod2a+" "+cod2b
replace coddeath=subinstr(coddeath,"99 ","",.) //3004 changes
replace coddeath=subinstr(coddeath," 99","",.) //2522 changes
** Identify cancer deaths using variable called 'cancer'
replace cancer=1 if regexm(coddeath, "CANCER") & cancer==. //412 changes
replace cancer=1 if regexm(coddeath, "TUMOUR") &  cancer==. //20 changes
replace cancer=1 if regexm(coddeath, "TUMOR") &  cancer==. //9 changes
replace cancer=1 if regexm(coddeath, "MALIGNANT") &  cancer==. //8 changes
replace cancer=1 if regexm(coddeath, "MALIGNANCY") &  cancer==. //39 changes
replace cancer=1 if regexm(coddeath, "NEOPLASM") &  cancer==. //3 changes
replace cancer=1 if regexm(coddeath, "CARCINOMA") &  cancer==. //187 changes
replace cancer=1 if regexm(coddeath, "CARCIMONA") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "CARINOMA") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "MYELOMA") &  cancer==. //33 changes
replace cancer=1 if regexm(coddeath, "LYMPHOMA") &  cancer==. //21 changes
replace cancer=1 if regexm(coddeath, "LYMPHOMIA") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "LYMPHONA") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "SARCOMA") &  cancer==. //9 changes
replace cancer=1 if regexm(coddeath, "TERATOMA") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "LEUKEMIA") &  cancer==. //11 changes
replace cancer=1 if regexm(coddeath, "LEUKAEMIA") &  cancer==. //5 changes
replace cancer=1 if regexm(coddeath, "HEPATOMA") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "CARANOMA PROSTATE") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "MENINGIOMA") &  cancer==. //1 change
replace cancer=1 if regexm(coddeath, "MYELOSIS") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "MYELOFIBROSIS") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "CYTHEMIA") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "CYTOSIS") &  cancer==. //1 change
replace cancer=1 if regexm(coddeath, "BLASTOMA") &  cancer==. //2 changes
replace cancer=1 if regexm(coddeath, "METASTATIC") &  cancer==. //4 changes
replace cancer=1 if regexm(coddeath, "MASS") &  cancer==. //25 changes
replace cancer=1 if regexm(coddeath, "METASTASES") &  cancer==. //1 change
replace cancer=1 if regexm(coddeath, "METASTASIS") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "REFRACTORY") &  cancer==. //3 changes
replace cancer=1 if regexm(coddeath, "FUNGOIDES") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "HODGKIN") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath, "MELANOMA") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath,"MYELODYS") &  cancer==. //1 change
replace cancer=1 if regexm(coddeath,"ASTROCYTOMA") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath,"CARCINOME") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath,"MALIGANCY") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath,"MULTIFORME") &  cancer==. //0 changes
replace cancer=1 if regexm(coddeath,"GLIOMA") &  cancer==. //0 changes

** Strip possible leading/trailing blanks in cod1a
replace coddeath = rtrim(ltrim(itrim(coddeath))) //0 changes

tab cancer, missing //2285 missing

drop dodyear
gen dodyear=year(dod)
tab dodyear cancer,m

** Spotting some duplicates so re-check for duplicates (since 2019 Pt.1 death cleaning was done at different time to 2019 Pt.2 these duplicates were missed)
** Delete records in multi-year REDCap database
sort regnum district
quietly by regnum district:  gen dupreg = cond(_N==1,0,_n)
sort regnum district
count if event==1 & dupreg>0  //773 - different DAs entered same certificates
sort regnum pname record_id
//list record_id dddoa ddda odda pname regnum district nrn if event==1 & dupreg>0
//list record_id dddoa ddda odda pname regnum district nrn if event==1 & dupreg>0 & inrange(record_id, 26000, 28000)
//list record_id dddoa ddda odda pname regnum district nrn if event==1 & dupreg>0 & inrange(record_id, 28001, 30000)
export_excel record_id dddoa ddda odda pname regnum district nrn if event==1 & dupreg>0 using "`datapath'\version02\2-working\2020-09-14_deaths_dups_2019_V01.xlsx", firstrow(variables) replace

** Remove duplicates
drop if record_id==29542|record_id==29354|record_id==29355|record_id==29544|record_id==29356| ///
record_id==29545|record_id==29357|record_id==29546|record_id==29358|record_id==29547| ///
record_id==29359|record_id==29360|record_id==29362|record_id==29363|record_id==29364| ///
record_id==29366|record_id==29367|record_id==29368|record_id==29369|record_id==29370| ///
record_id==29101|record_id==29104|record_id==29105|record_id==29106|record_id==29107| ///
record_id==29109|record_id==29110|record_id==29111|record_id==29112|record_id==29113| ///
record_id==29114|record_id==29115|record_id==29116|record_id==29117|record_id==29118| ///
record_id==29119|record_id==29121|record_id==29122|record_id==29123|record_id==29125| ///
record_id==29126|record_id==29127|record_id==29128|record_id==29129|record_id==29130| ///
record_id==29131|record_id==29133|record_id==29134|record_id==29135|record_id==29136| ///
record_id==29137|record_id==29139|record_id==29171|record_id==29172|record_id==29173| ///
record_id==29174|record_id==29175|record_id==29176|record_id==29177|record_id==29178| ///
record_id==29180|record_id==29181|record_id==29182|record_id==29183|record_id==29185| ///
record_id==29186|record_id==29187|record_id==29188|record_id==29189|record_id==29190| ///
record_id==29191|record_id==29192|record_id==29193|record_id==29194|record_id==29196| ///
record_id==29197|record_id==29198|record_id==29199|record_id==29200|record_id==29201| ///
record_id==29202|record_id==29203|record_id==29204|record_id==29205|record_id==29206| ///
record_id==29207|record_id==29208|record_id==29210|record_id==29261|record_id==29262| ///
record_id==29263|record_id==29264|record_id==29265|record_id==29266|record_id==29267| ///
record_id==29268|record_id==29269|record_id==29270|record_id==29271|record_id==29272| ///
record_id==29273|record_id==29274|record_id==29275|record_id==29278|record_id==29279| ///
record_id==29209|record_id==29212|record_id==29213|record_id==29214|record_id==29215| ///
record_id==29216|record_id==29217|record_id==29218|record_id==29219|record_id==29220| ///
record_id==29221|record_id==29222|record_id==29224|record_id==29226|record_id==29227| ///
record_id==29228|record_id==29229|record_id==29230|record_id==29231|record_id==29233| ///
record_id==29235|record_id==29237|record_id==29238|record_id==29239|record_id==29240| ///
record_id==29241|record_id==29242|record_id==29243|record_id==29244|record_id==29245| ///
record_id==29246|record_id==29247|record_id==29248|record_id==29249|record_id==29250| ///
record_id==29251|record_id==29252|record_id==29254|record_id==29255|record_id==29256| ///
record_id==29257|record_id==29258|record_id==29259|record_id==29280|record_id==29281| ///
record_id==29282|record_id==29283|record_id==29284|record_id==29285|record_id==29287| ///
record_id==29288|record_id==29289|record_id==29374|record_id==29375|record_id==29376| ///
record_id==29377|record_id==29378|record_id==29379|record_id==29380|record_id==29384| ///
record_id==29386|record_id==29389|record_id==29390|record_id==29392|record_id==29394| ///
record_id==29396|record_id==28423|record_id==29400|record_id==29402|record_id==29403| ///
record_id==29405|record_id==29407|record_id==29408|record_id==29410|record_id==29411| ///
record_id==29413|record_id==29382|record_id==29387|record_id==29391|record_id==29393| ///
record_id==29395|record_id==29397|record_id==29399|record_id==29401|record_id==29404| ///
record_id==29409|record_id==29412|record_id==29414|record_id==28461|record_id==29416| ///
record_id==29417|record_id==29418|record_id==29419|record_id==29420|record_id==29421| ///
record_id==29422|record_id==29423|record_id==29425|record_id==29426|record_id==29427| ///
record_id==29428|record_id==29429|record_id==29430|record_id==29431|record_id==29432| ///
record_id==29433|record_id==29434|record_id==29435|record_id==29436|record_id==29437| ///
record_id==29438|record_id==29439|record_id==29629|record_id==29630|record_id==29634| ///
record_id==29636|record_id==29637|record_id==29638|record_id==29640|record_id==29644| ///
record_id==29651|record_id==29652|record_id==29655|record_id==29657|record_id==29658| ///
record_id==29661|record_id==29663|record_id==29665|record_id==29666|record_id==29669| ///
record_id==29670|record_id==29672|record_id==29673|record_id==29674|record_id==29675| ///
record_id==29677|record_id==29678|record_id==29680|record_id==29681|record_id==29683| ///
record_id==29685|record_id==29686|record_id==29687|record_id==29688|record_id==29689| ///
record_id==29690|record_id==29691|record_id==29692|record_id==29724|record_id==29725| ///
record_id==29726|record_id==29727|record_id==29728|record_id==29729|record_id==29730| ///
record_id==29731|record_id==29543|record_id==29361|record_id==27239|record_id==29102| ///
record_id==29103|record_id==29120|record_id==29124|record_id==29132|record_id==29138| ///
record_id==29140|record_id==28250|record_id==28255|record_id==29195|record_id==29276| ///
record_id==29277|record_id==29225|record_id==29232|record_id==28324|record_id==29236| ///
record_id==28343|record_id==28356|record_id==29383|record_id==28369|record_id==29381| ///
record_id==29388|record_id==29424|record_id==29635|record_id==29641|record_id==29646| ///
record_id==29648 //291 deleted
drop dupreg


sort pname
quietly by pname:  gen dup = cond(_N==1,0,_n)
sort pname
count if event==1 & dup>0  //50 - different DAs entered same certificates
sort pname record_id
//list record_id dddoa ddda odda pname regnum district nrn nm if event==1 & dup>0
replace namematch=1 if record_id==28465|record_id==28433|record_id==29460|record_id==27488|record_id==29943 ///
					   |record_id==29018|record_id==29533|record_id==28397|record_id==29791|record_id==28804 ///
					   |record_id==29990|record_id==27960|record_id==29799|record_id==27280|record_id==29151 ///
					   |record_id==28457|record_id==29922|record_id==27428|record_id==29578 //19 changes
drop if record_id==29406|record_id==29223 //2 deleted
//drop if event==1 & dup>0 & namematch==. // deleted
drop dup



** Check that all cancer CODs for 2016 are eligible
sort coddeath record_id
order record_id coddeath
//list coddeath if cancer==1 & inrange(record_id, 0, 24000)
** 588
//list coddeath if cancer==1 & inrange(record_id, 24001, 27000)
** 778

** Replace 2014 cases that are not cancer according to eligibility SOP:
/*
	(1) After merge with CR5 data then may need to reassign some of below 
		deaths as CR5 data may indicate eligibility while COD may exclude
		(e.g. see record_id==15458)
	(2) use obsid to check for CODs that incomplete in Results window with 
		Data Editor in browse mode-copy and paste record_id below from here
*/

** Check that all 2014 CODs that are not cancer for eligibility
tab dodyear cancer,m
count if cancer==. & inrange(record_id, 0, 23000) //873
count if cancer==. & inrange(record_id, 23001, 24000) //761
count if cancer==. & inrange(record_id, 24001, 2000) //725
//list coddeath if cancer==. & inrange(record_id, 0, 24000)
//list coddeath if cancer==. & inrange(record_id, 24001, 27000)

replace cancer=2 if ///
record_id==27708|record_id==27663|record_id==27689|record_id==29652|record_id==28499| ///
record_id==29458|record_id==29697|record_id==28135|record_id==27490|record_id==27934| ///
record_id==27090|record_id==27831|record_id==27144|record_id==28785|record_id==28722| ///
record_id==28011|record_id==27064|record_id==27367|record_id==29807|record_id==27542| ///
record_id==29911|record_id==29876|record_id==28488|record_id==27518|record_id==28606| ///
record_id==28128|record_id==28252|record_id==28846|record_id==28527|record_id==29017| ///
record_id==28140|record_id==27693|record_id==28710|record_id==29892|record_id==28596| ///
record_id==28881|record_id==28146|record_id==28586|record_id==28160|record_id==27988| ///
record_id==27415|record_id==28583|record_id==28483|record_id==29087|record_id==28682|record_id==30012
//45 changes

replace cancer=1 if record_id==28428|record_id==28746|record_id==28268 //3 changes

replace cancer=2 if cancer==. //2066 changes

** Create cod variable 
gen cod=.
label define cod_lab 1 "Dead of cancer" 2 "Dead of other cause" 3 "Not known" 4 "NA", modify
label values cod cod_lab
label var cod "COD categories"
replace cod=1 if cancer==1 //676 changes
replace cod=2 if cancer==2 //2111 changes
** one unknown causes of death in 2014 data - record_id 12323
replace cod=3 if coddeath=="99"|(regexm(coddeath,"INDETERMINATE")|regexm(coddeath,"UNDETERMINED")) //27 changes
//list record_id coddeath if cod==3
replace cod=2 if record_id==29697

** Change sex to match cancer dataset
tab sex ,m
/*
        Sex |      Freq.     Percent        Cum.
------------+-----------------------------------
       Male |      1,401       50.27       50.27
     Female |      1,386       49.73      100.00
------------+-----------------------------------
      Total |      2,787      100.00
*/
rename sex sex_old
gen sex=1 if sex_old==2 //2467 changes
replace sex=2 if sex_old==1 //2587 changes
drop sex_old
label define sex_lab 1 "Female" 2 "Male", modify
label values sex sex_lab
label var sex "Sex"
tab sex ,m
/*
        Sex |      Freq.     Percent        Cum.
------------+-----------------------------------
     Female |      1,386       49.73       49.73
       Male |      1,401       50.27      100.00
------------+-----------------------------------
      Total |      2,787      100.00
*/

** Remove, relabel certain variables for merging with cancer ds
gen dd2019_dod=dod
format dd2019_dod %tdCCYY-NN-DD

order record_id regnum nrn pname fname lname sex age dod cancer cod1a addr parish pod

** Change variable names to distinguish between cancer and 2019 death variables
rename nrn dd2019_nrn
rename regnum dd2019_regnum 
rename pname dd2019_pname 
rename age dd2019_age 
rename cancer dd2019_cancer 
rename cod1a dd2019_cod1a 
rename address dd2019_address 
rename parish dd2019_parish 
rename pod dd2019_pod 
rename coddeath dd2019_coddeath
rename mname dd2019_mname 
rename namematch dd2019_namematch 
rename event dd2019_event 
rename dddoa dd2019_dddoa 
rename ddda dd2019_ddda 
rename odda dd2019_odda 
rename certtype dd2019_certtype 
rename district dd2019_district 
rename agetxt dd2019_agetxt 
rename nrnnd dd2019_nrnnd
rename mstatus dd2019_mstatus 
rename occu dd2019_occu 
rename durationnum dd2019_durationnum 
rename durationtxt dd2019_durationtxt 
rename onsetnumcod1a dd2019_onsetnumcod1a 
rename onsettxtcod1a dd2019_onsettxtcod1a 
rename cod1b dd2019_cod1b
rename onsetnumcod1b dd2019_onsetnumcod1b 
rename onsettxtcod1b dd2019_onsettxtcod1b 
rename cod1c dd2019_cod1c 
rename onsetnumcod1c dd2019_onsetnumcod1c 
rename onsettxtcod1c dd2019_onsettxtcod1c 
rename cod1d dd2019_cod1d 
rename onsetnumcod1d dd2019_onsetnumcod1d
rename onsettxtcod1d dd2019_onsettxtcod1d 
rename cod2a dd2019_cod2a 
rename onsetnumcod2a dd2019_onsetnumcod2a 
rename onsettxtcod2a dd2019_onsettxtcod2a 
rename cod2b dd2019_cod2b 
rename onsetnumcod2b dd2019_onsetnumcod2b 
rename onsettxtcod2b dd2019_onsettxtcod2b
rename deathparish dd2019_deathparish 
rename regdate dd2019_regdate 
rename certifier dd2019_certifier 
rename certifieraddr dd2019_certifieraddr
rename cleaned dd2019_cleaned
rename recstatdc dd2019_recstatdc 
//rename tfdddoa dd2019_tfdddoa 
//rename tfddda dd2019_tfddda 
//rename tfregnumstart dd2019_tfregnumstart
//rename tfdistrictstart dd2019_tfdistrictstart 
//rename tfregnumend dd2019_tfregnumend 
//rename tfdistrictend dd2019_tfdistrictend 
//rename tfddtxt dd2019_tfddtxt 
//rename recstattf dd2019_recstattf 
rename duprec dd2019_duprec 
//rename dupname dd2019_dupname 
//rename dupdod dd2019_dupdod
rename dodyear dd2019_dodyear 
//rename cod dd2019_cod
//rename record_id dd2019_record_id

count //2787

label data "BNR MORTALITY data 2019"
notes _dta :These data prepared from BB national death register & Redcap deathdata database
save "`datapath'\version02\3-output\2019_deaths_for_matching" ,replace
note: TS This dataset can be used for matching 2019 deaths with incidence data
